{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"ZkMinimalAccountTest.sol:ZkMinimalAccountTest\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[22]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_7\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_243\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_45\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_55\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_92\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.eq\t@.BB0_54\n\tjump\t@.BB0_243\n.BB0_7:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t31, r0, r1\n\tsload\tr1, r2\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_51\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_64\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t29, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[14], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.gt\t@.BB0_360\n\tadd\t@CPI0_42[0], r0, r5\n\tadd\t160, r0, stack-[20]\n\tadd\t32784, r0, stack-[13]\n\tadd\tr0, r0, r6\n.BB0_19:\n\tadd\tr6, r0, stack-[19]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr5, r2\n\tand\t@CPI0_27[0], r2, r2\n\tadd\tr1, r0, stack-[22]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tr5, r0, stack-[21]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\tr3, r0, stack-[16]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tld\tr1, r2\n\tadd\tstack-[16], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_38\n\tadd\tr0, r0, r1\n\tadd\tstack-[19], r0, r6\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[17], r0, r8\n.BB0_22:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_40[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_22\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_25\n.BB0_24:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_25:\n\tadd\tstack-[22], r0, r4\n\tadd\tstack-[21], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_27\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_40\n.BB0_28:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_29\n.BB0_41:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_42\n.BB0_30:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_31\n.BB0_43:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_44\n.BB0_32:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_34\n.BB0_33:\n\tand\t@CPI0_40[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_34:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\tr1, r7\n\tadd\tstack-[20], r0, r3\n\tst.1.inc\tr3, r4, r3\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[14], r6, r2\n\tjump.ge\t@.BB0_371\n\tadd\tr3, r0, stack-[20]\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.le\t@.BB0_19\n\tjump\t@.BB0_360\n.BB0_27:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_28\n.BB0_40:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_41\n.BB0_29:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_30\n.BB0_42:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_43\n.BB0_31:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_32\n.BB0_44:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_33\n\tjump\t@.BB0_34\n.BB0_38:\n\tadd\tr0, r0, r1\n\tadd\tstack-[19], r0, r6\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[17], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_24\n\tjump\t@.BB0_25\n.BB0_45:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.gt\t@.BB0_83\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_114\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t23, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_146\n\tjump\t@.BB0_130\n.BB0_51:\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_88\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_117\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_243\n.BB0_54:\n\tnear_call\tr0, @external_fun_testZkValidateTransaction, @DEFAULT_UNWIND\n.BB0_55:\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[9], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[9], r0, r4\n\tst.1\t128, r4\n\tst.1\t0, r1\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_251\n.BB0_61:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[22]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr3, r2, r6\n\tadd\tr1, r0, stack-[21]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_348\n\tadd\tr6, r0, r11\n.BB0_63:\n\tadd\tstack-[22], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_235\n.BB0_64:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t25, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_33[0], r5, r2\n\tjump.gt\t@.BB0_360\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_113\n\tadd\t128, r0, r6\n\tadd\t@CPI0_36[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[16]\n.BB0_71:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_339\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_77\n\tadd\tr3, r0, stack-[17]\n\tadd\tr4, r0, stack-[18]\n\tadd\tr9, r0, stack-[19]\n\tadd\tr8, r0, stack-[20]\n\tadd\tr6, r0, stack-[22]\n\tadd\tr7, r0, stack-[21]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tadd\tstack-[18], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[22], r0, r6\n\tadd\tstack-[20], r0, r8\n\tjump.eq\t@.BB0_78\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r7\n\tadd\tstack-[19], r0, r9\n\tadd\tstack-[17], r0, r11\n.BB0_76:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_76\n\tjump\t@.BB0_79\n.BB0_77:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_79\n.BB0_78:\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r7\n\tadd\tstack-[19], r0, r9\n.BB0_79:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_71\n\tjump\t@.BB0_112\n.BB0_83:\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_137\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t32, r0, r5\n\tsload\tr5, r1\n\tadd\t31, r0, r7\n\tsload\tr7, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\t160, r3\n\tshr.s\t8, r2, r2\n\tand\t@CPI0_27[0], r2, r6\n\tst.1\t164, r6\n\tadd\t@CPI0_45[0], r0, r2\n\tst.1\t196, r2\n\tadd\t68, r0, r2\n\tst.1\t128, r2\n\tadd\t256, r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_46[0], r0, r2\n\tst.1\t256, r2\n\tand\t@CPI0_27[0], r1, stack-[22]\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r2\n\tjump.ne\t@.BB0_149\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_156\n.BB0_88:\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_143\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_243\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_92:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r0\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[22]\n\tst.1\t196, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tst.1\t228, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_241\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_218\n.BB0_96:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_33[0], r5, r2\n\tjump.gt\t@.BB0_360\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_113\n\tadd\t128, r0, r6\n\tadd\t@CPI0_43[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[16]\n.BB0_101:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_339\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_107\n\tadd\tr3, r0, stack-[17]\n\tadd\tr4, r0, stack-[18]\n\tadd\tr9, r0, stack-[19]\n\tadd\tr8, r0, stack-[20]\n\tadd\tr6, r0, stack-[22]\n\tadd\tr7, r0, stack-[21]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tadd\tstack-[18], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[22], r0, r6\n\tadd\tstack-[20], r0, r8\n\tjump.eq\t@.BB0_108\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r7\n\tadd\tstack-[19], r0, r9\n\tadd\tstack-[17], r0, r11\n.BB0_106:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_106\n\tjump\t@.BB0_109\n.BB0_107:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_109\n.BB0_108:\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r7\n\tadd\tstack-[19], r0, r9\n.BB0_109:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_101\n.BB0_112:\n\tld.1\t64, r1\n.BB0_113:\n\tadd\tr1, r0, stack-[22]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_136\n.BB0_114:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_224\n\tjump\t@.BB0_130\n.BB0_117:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_127\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_122\n\tadd\tr0, r0, r7\n.BB0_121:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_121\n.BB0_122:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_124\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_124:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_244\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_243\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_127:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_128:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t22, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_130\n\tadd\t160, r0, r4\n\tadd\t@CPI0_66[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_228:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_27[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_228\n\tjump\t@.BB0_232\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t28, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[14], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_272\n.BB0_135:\n\tadd\tr1, r0, stack-[22]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n.BB0_136:\n\tadd\tstack-[22], r0, r4\n\tjump\t@.BB0_234\n.BB0_137:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t27, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[13], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\t128, r2, r15\n\tst.1\t64, r15\n\tadd\tstack-[13], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r1\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_300\n.BB0_141:\n\tadd\t32, r0, r1\n\tst.1.inc\tr15, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t64, r15, r3\n\tshl.s\t5, r1, r2\n\tadd\tr2, r3, r2\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_340\n.BB0_142:\n\tsub\tr2, r15, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r15, r3\n\tadd.ge\tr2, r0, r15\n\tshl.s\t64, r15, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_143:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_243\n\tadd\t21, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_229\n.BB0_130:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_233\n.BB0_146:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_62[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_147:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_27[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_147\n\tjump\t@.BB0_232\n.BB0_149:\n\tadd\tr7, r0, stack-[20]\n\tadd\tr5, r0, stack-[19]\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\tr6, r0, stack-[21]\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_152\n\tadd\tr0, r0, r7\n.BB0_151:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t256, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_151\n.BB0_152:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_154\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t256, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_154:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_236\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[20], r0, r7\n\tadd\tstack-[21], r0, r6\n.BB0_156:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t256, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_243\n\tld.1\t256, r4\n\tsub.s!\t@CPI0_27[0], r4, r3\n\tjump.gt\t@.BB0_243\n\tor\t768, r1, r3\n\tst.1\t64, r3\n\tst.1\tr2, r0\n\tadd\t544, r1, r2\n\tst.1\tr2, r0\n\tor\t512, r1, r2\n\tst.1\tr2, r0\n\tadd\t480, r1, r2\n\tst.1\tr2, r0\n\tadd\t448, r1, r2\n\tst.1\tr2, r0\n\tadd\t416, r1, r2\n\tst.1\tr2, r0\n\tor\t384, r1, r2\n\tst.1\tr2, r0\n\tadd\t352, r1, r2\n\tst.1\tr2, r0\n\tadd\t320, r1, r2\n\tst.1\tr2, r0\n\tadd\t288, r1, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_360\n\tadd\tr4, r0, stack-[18]\n\tadd\tr6, r0, stack-[21]\n\tadd\tr5, r0, stack-[19]\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n.BB0_160:\n\tshl.s\t5, r4, r6\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t4, r4, r6\n\tjump.lt\t@.BB0_160\n\tadd\t736, r1, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\t704, r1, r3\n\tst.1\tr3, r4\n\tadd\t672, r1, r3\n\tst.1\tr3, r4\n\tor\t640, r1, r3\n\tst.1\tr3, r4\n\tadd\t608, r1, r3\n\tadd\tr4, r0, stack-[16]\n\tst.1\tr3, r4\n\tadd\t576, r1, r1\n\tst.1\tr1, r2\n\tadd\tr7, r0, stack-[20]\n\tsload\tr7, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[17]\n\tadd\t@CPI0_48[0], r0, r2\n\tst.1\tr4, r2\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_27[0], r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_164\n\tadd\tr0, r0, r7\n.BB0_163:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_163\n.BB0_164:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_166\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_166:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[18], r0, r9\n\tjump.eq\t@.BB0_361\n\tadd\t31, r3, r1\n\tand\t96, r1, r5\n\tadd\tr5, r10, r2\n\tsub!\tr2, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_33[0], r2, r6\n\tjump.gt\t@.BB0_360\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r4\n\tjump.lt\t@.BB0_243\n\tld.1\tr10, r4\n\tsub.s!\t@CPI0_33[0], r4, r5\n\tjump.gt\t@.BB0_243\n\tsub.s!\t@CPI0_50[0], r2, r5\n\tjump.gt\t@.BB0_360\n\tadd\t32, r2, r5\n\tst.1\t64, r5\n\tst.1\tr2, r0\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_35[0], r5, r6\n\tjump.gt\t@.BB0_360\n\tadd\t128, r5, r6\n\tst.1\t64, r6\n\tadd\t96, r5, r6\n\tst.1\tr6, r0\n\tadd\t64, r5, r6\n\tst.1\tr6, r0\n\tadd\t32, r5, r6\n\tst.1\tr6, r0\n\tst.1\tr5, r0\n\tld.1\t64, r6\n\tadd\tr6, r0, stack-[17]\n\tsub.s!\t@CPI0_51[0], r6, r6\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[17], r0, r8\n\tadd\t512, r8, r6\n\tst.1\t64, r6\n\tadd\t352, r8, r7\n\tadd\t128, r0, r6\n\tadd\tr7, r0, stack-[15]\n\tst.1\tr7, r6\n\tadd\tstack-[21], r0, r6\n\tadd\t320, r8, r7\n\tadd\tr7, r0, stack-[14]\n\tst.1\tr7, r5\n\tadd\t256, r8, r5\n\tadd\tr5, r0, stack-[13]\n\tst.1\tr5, r4\n\tadd\t192, r8, r5\n\tadd\t@CPI0_52[0], r0, r4\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r4\n\tadd\t160, r8, r5\n\tadd\tr5, r0, stack-[11]\n\tst.1\tr5, r4\n\tadd\t128, r8, r5\n\tadd\tr5, r0, stack-[10]\n\tst.1\tr5, r4\n\tadd\t96, r8, r5\n\tadd\tr5, r0, stack-[9]\n\tst.1\tr5, r4\n\tadd\t64, r8, r5\n\tadd\tstack-[22], r0, r4\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr5, r4\n\tadd\t32, r8, r4\n\tadd\tr4, r0, stack-[7]\n\tst.1\tr4, r9\n\tadd\t113, r0, r4\n\tst.1\tr8, r4\n\tadd\t288, r8, r4\n\tadd\tr4, r0, stack-[22]\n\tst.1\tr4, r0\n\tadd\t224, r8, r4\n\tadd\tr4, r0, stack-[18]\n\tst.1\tr4, r0\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_50[0], r4, r5\n\tjump.gt\t@.BB0_360\n\tadd\t32, r4, r5\n\tst.1\t64, r5\n\tst.1\tr4, r0\n\tadd\tstack-[17], r0, r7\n\tadd\t416, r7, r5\n\tadd\tr5, r0, stack-[6]\n\tst.1\tr5, r2\n\tadd\t384, r7, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r4\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_50[0], r2, r4\n\tjump.gt\t@.BB0_360\n\tadd\t32, r2, r4\n\tst.1\t64, r4\n\tst.1\tr2, r0\n\tadd\tstack-[17], r0, r4\n\tadd\t448, r4, r4\n\tadd\tr4, r0, stack-[3]\n\tst.1\tr4, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_50[0], r2, r4\n\tjump.gt\t@.BB0_360\n\tadd\t32, r2, r4\n\tst.1\t64, r4\n\tst.1\tr2, r0\n\tadd\tstack-[17], r0, r4\n\tadd\t480, r4, r4\n\tadd\tr4, r0, stack-[2]\n\tst.1\tr4, r2\n\tadd\t@CPI0_46[0], r0, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr4, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r6, r4\n\tjump.eq\t@.BB0_185\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_181\n\tadd\tr0, r0, r7\n.BB0_180:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_180\n.BB0_181:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_183\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[4], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_183:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_393\n\tadd\t31, r3, r1\n.BB0_185:\n\tsub.s\t32, r0, stack-[21]\n\tand\tstack-[21], r1, r2\n\tadd\tstack-[4], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r4\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_243\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.gt\t@.BB0_243\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_420\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_243\n\tld.1\t64, r4\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_398\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tadd\tstack-[20], r0, r1\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[4], r0, r2\n\tst.1\t64, r2\n\tsload\tr1, r1\n\tadd\t@CPI0_54[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_27[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_420\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_243\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t36, r3, r1\n\tst.1\tr1, r0\n\tadd\t4, r3, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\tr1, r0\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\t100, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\t132, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\t164, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\t196, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\t228, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\t260, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t292, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t324, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t356, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\t388, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[4]\n\tadd\t420, r3, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tr0, r0, r3\n.BB0_196:\n\tld.1.inc\tr2, r4, r2\n\tst.1.inc\tr1, r4, r1\n\tsub.s!\t3, r3, r4\n\tadd\t1, r3, r3\n\tjump.lt\t@.BB0_196\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[4], r0, r5\n\tadd\t548, r5, r2\n\tadd\t608, r0, r3\n\tst.1\tr2, r3\n\tadd\t708, r5, r4\n\tld.1.inc\tr1, r2, r3\n\tst.1\tr4, r2\n\tadd\t740, r5, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_200\n\tadd\tr0, r0, r4\n.BB0_199:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_199\n.BB0_200:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[21], r2, r2\n\tadd\tstack-[5], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[4], r0, r4\n\tadd\t580, r4, r4\n\tadd\t640, r2, r5\n\tst.1\tr4, r5\n\tadd\tr2, r1, r1\n\tld.1.inc\tr3, r2, r3\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_203\n\tadd\tr0, r0, r4\n.BB0_202:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_202\n.BB0_203:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[21], r2, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r2\n\tsub.s\t100, r2, r3\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\t612, r4, r4\n\tst.1\tr4, r3\n\tld.1\tr2, r3\n\tst.1.inc\tr1, r3, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_206\n\tadd\tr0, r0, r4\n.BB0_205:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_205\n.BB0_206:\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r2\n\tsub.s\t100, r2, r2\n\tadd\tstack-[3], r0, r3\n\tld.1\tr3, r3\n\tadd\t644, r4, r4\n\tst.1\tr4, r2\n\tld.1.inc\tr3, r2, r3\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_209\n\tadd\tr0, r0, r4\n.BB0_208:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_208\n.BB0_209:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[21], r2, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r2\n\tsub.s\t100, r2, r2\n\tadd\tstack-[2], r0, r3\n\tld.1\tr3, r3\n\tadd\t676, r4, r4\n\tst.1\tr4, r2\n\tld.1.inc\tr3, r2, r3\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_212\n\tadd\tr0, r0, r4\n.BB0_211:\n\tadd\tr4, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_211\n.BB0_212:\n\tadd\tr2, r1, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_214\n\tadd\t31, r2, r2\n\tand\tstack-[21], r2, r2\n\tadd\tstack-[4], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_403\n.BB0_214:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tadd\tstack-[19], r0, r1\n\tadd\tstack-[20], r0, r3\n\tjump.gt\t@.BB0_360\n\tadd\tstack-[4], r0, r4\n\tst.1\t64, r4\n\tsload\tr1, r2\n\tsload\tr3, r1\n\tadd\t@CPI0_58[0], r0, r3\n\tst.1\tr4, r3\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_27[0], r1, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_27[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_408\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_414\n.BB0_217:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_218:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_221\n\tadd\tr0, r0, r6\n.BB0_220:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_220\n.BB0_221:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_223\n.BB0_222:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_223:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_224:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_63[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_225:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_27[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_225\n\tjump\t@.BB0_232\n.BB0_229:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_26[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_230:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_27[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_230\n.BB0_232:\n\tsub.s\t96, r5, r2\n.BB0_233:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[22]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[21]\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r4\n.BB0_234:\n\tsub\tr1, r4, r1\n.BB0_235:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_236:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_239\n\tadd\tr0, r0, r6\n.BB0_238:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_238\n.BB0_239:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.BB0_241:\n\tshl.s\t8, r1, r2\n\tand\t@CPI0_70[0], r2, r2\n\tadd\t31, r0, r4\n\tsload\tr4, r3\n\tand\t@CPI0_71[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tr4, r0, stack-[20]\n\tsstore\tr4, r2\n\tadd\t@CPI0_54[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_27[0], r1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_420\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_356\n.BB0_243:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_244:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_247\n\tadd\tr0, r0, r6\n.BB0_246:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_246\n.BB0_247:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n.BB0_249:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_250:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_251:\n\tadd\tr3, r0, stack-[22]\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.gt\t@.BB0_360\n\tadd\t@CPI0_64[0], r0, stack-[13]\n\tadd\t160, r0, stack-[12]\n\tadd\tr0, r0, stack-[11]\n.BB0_253:\n\tadd\tstack-[22], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_27[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tor\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_33[0], r5, r2\n\tjump.gt\t@.BB0_360\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_34[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[14]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.gt\t@.BB0_360\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[15]\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tadd\tstack-[15], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_270\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[14], r0, r8\n.BB0_259:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_339\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_265\n\tadd\tr3, r0, stack-[16]\n\tadd\tr4, r0, stack-[17]\n\tadd\tr9, r0, stack-[18]\n\tadd\tr8, r0, stack-[19]\n\tadd\tr7, r0, stack-[20]\n\tadd\tr6, r0, stack-[21]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tadd\tstack-[17], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[20], r0, r7\n\tadd\tstack-[19], r0, r8\n\tjump.eq\t@.BB0_266\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r6\n\tadd\tstack-[18], r0, r9\n\tadd\tstack-[16], r0, r11\n.BB0_264:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_264\n\tjump\t@.BB0_267\n.BB0_265:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_267\n.BB0_266:\n\tadd\tr0, r0, r1\n\tadd\tstack-[21], r0, r6\n\tadd\tstack-[18], r0, r9\n.BB0_267:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_259\n.BB0_270:\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[22], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[12]\n\tld.1\t64, r3\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\tstack-[9], r2, r1\n\tjump.ge\t@.BB0_387\n\tadd\tstack-[13], r0, r1\n\tadd\t2, r1, stack-[13]\n\tadd\tr3, r0, stack-[22]\n\tsub.s!\t@CPI0_41[0], r3, r1\n\tjump.le\t@.BB0_253\n\tjump\t@.BB0_360\n.BB0_272:\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.gt\t@.BB0_360\n\tadd\t@CPI0_39[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[13]\n\tadd\tr0, r0, r6\n.BB0_274:\n\tadd\tr6, r0, stack-[19]\n\tadd\tr5, r0, stack-[20]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_27[0], r2, r2\n\tadd\tr1, r0, stack-[22]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tr4, r0, stack-[21]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\tr3, r0, stack-[16]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tld\tr1, r2\n\tadd\tstack-[16], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_293\n\tadd\tr0, r0, r1\n\tadd\tstack-[19], r0, r6\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[17], r0, r8\n.BB0_277:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_40[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_277\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_280\n.BB0_279:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_280:\n\tadd\tstack-[21], r0, r4\n\tadd\tstack-[20], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_282\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_295\n.BB0_283:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_284\n.BB0_296:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_297\n.BB0_285:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_286\n.BB0_298:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_299\n.BB0_287:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_289\n.BB0_288:\n\tand\t@CPI0_40[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_289:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tadd\tstack-[22], r0, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[14], r6, r2\n\tjump.ge\t@.BB0_135\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.le\t@.BB0_274\n\tjump\t@.BB0_360\n.BB0_282:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_283\n.BB0_295:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_296\n.BB0_284:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_285\n.BB0_297:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_298\n.BB0_286:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_287\n.BB0_299:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_288\n\tjump\t@.BB0_289\n.BB0_293:\n\tadd\tr0, r0, r1\n\tadd\tstack-[19], r0, r6\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[17], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_279\n\tjump\t@.BB0_280\n.BB0_300:\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.gt\t@.BB0_360\n\tadd\t@CPI0_61[0], r0, r5\n\tadd\t160, r0, stack-[20]\n\tadd\tr0, r0, stack-[19]\n.BB0_302:\n\tadd\t64, r15, r6\n\tst.1\t64, r6\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_339\n\tst.1\tr6, r4\n\tadd\t96, r15, r3\n\tsub!\tr2, r0, r2\n\tadd\tr15, r0, stack-[22]\n\tadd\tr5, r0, stack-[21]\n\tjump.eq\t@.BB0_308\n\tadd\tr3, r0, stack-[16]\n\tadd\tr4, r0, stack-[17]\n\tadd\tr6, r0, stack-[18]\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tadd\tstack-[17], r0, r7\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB0_309\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r15\n\tadd\tstack-[21], r0, r5\n\tadd\tstack-[18], r0, r6\n\tadd\tstack-[16], r0, r8\n.BB0_307:\n\tadd\tr1, r8, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB0_307\n\tjump\t@.BB0_310\n.BB0_308:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_310\n.BB0_309:\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r15\n\tadd\tstack-[21], r0, r5\n\tadd\tstack-[18], r0, r6\n.BB0_310:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, stack-[18]\n\tand\tstack-[18], r1, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r1\n\tst.1.inc\tr15, r6, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\tr3, r0, stack-[15]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[16]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_243\n\tld\tr1, r2\n\tadd\tstack-[15], r0, r8\n\tsub.s!\t8, r8, r1\n\tjump.lt\t@.BB0_333\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r6\n\tadd\tstack-[16], r0, r7\n.BB0_315:\n\tadd\t224, r7, r3\n\tsload\tr2, r4\n\tand\t@CPI0_40[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t192, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t160, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t128, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t96, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t64, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_40[0], r3, r3\n\tadd\t32, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr7, r3\n\tadd\t1, r2, r2\n\tadd\t256, r7, r7\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r8, r3\n\tjump.lt\t@.BB0_315\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_318\n.BB0_317:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr7, r3, r7\n\tor\t1, r1, r1\n.BB0_318:\n\tadd\tstack-[21], r0, r5\n\tadd\tstack-[17], r0, r4\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_320\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_335\n.BB0_321:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_322\n.BB0_336:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_337\n.BB0_323:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_324\n.BB0_338:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_325\n\tjump\t@.BB0_326\n.BB0_320:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_321\n.BB0_335:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_336\n.BB0_322:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_323\n.BB0_337:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_338\n.BB0_324:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_326\n.BB0_325:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_40[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n.BB0_326:\n\tadd\tstack-[18], r0, r3\n\tsub!\tr1, r8, r1\n\tjump.ge\t@.BB0_329\n\tand\t@CPI0_40[0], r2, r1\n\tst.1.inc\tr7, r1, r7\n.BB0_329:\n\tsub\tr7, r4, r1\n\tadd\t31, r1, r1\n\tand\tr1, r3, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_33[0], r1, r3\n\tjump.gt\t@.BB0_360\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_360\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\tr1, r4\n\tadd\tstack-[20], r0, r1\n\tst.1.inc\tr1, r6, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\t64, r15\n\tadd\tstack-[19], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\tstack-[13], r2, r1\n\tjump.ge\t@.BB0_375\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_41[0], r15, r1\n\tjump.le\t@.BB0_302\n\tjump\t@.BB0_360\n.BB0_333:\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r6\n\tadd\tstack-[16], r0, r7\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_317\n\tjump\t@.BB0_318\n.BB0_339:\n\tadd\t@CPI0_65[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_340:\n\tadd\t128, r0, r4\n\tadd\t64, r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_342\n.BB0_341:\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB0_142\n.BB0_342:\n\tsub\tr2, r15, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tld.1.inc\tr7, r9, r8\n\tst.1.inc\tr2, r5, r7\n\tadd\t64, r2, r12\n\tld.1.inc\tr9, r10, r11\n\tst.1\tr12, r10\n\tadd\t96, r2, r9\n\tsub!\tr10, r0, r12\n\tjump.eq\t@.BB0_345\n\tadd\tr0, r0, r12\n.BB0_344:\n\tadd\tr12, r9, r13\n\tadd\tr11, r12, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB0_344\n.BB0_345:\n\tadd\tr10, r9, r11\n\tst.1\tr11, r0\n\tadd\t31, r10, r10\n\tsub.s\t32, r0, r11\n\tand\tr10, r11, r10\n\tadd\tr10, r9, r9\n\tld.1\tr8, r8\n\tsub\tr9, r2, r2\n\tst.1\tr7, r2\n\tld.1\tr8, r7\n\tst.1.inc\tr9, r7, r2\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_341\n\tadd\tr0, r0, r9\n.BB0_347:\n\tadd\t32, r8, r8\n\tld.1\tr8, r10\n\tand\t@CPI0_40[0], r10, r10\n\tst.1.inc\tr2, r10, r2\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_347\n\tjump\t@.BB0_341\n.BB0_348:\n\tadd\t128, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_350\n.BB0_349:\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[21], r5, r1\n\tadd\tr11, r0, r6\n\tjump.ge\t@.BB0_63\n.BB0_350:\n\tsub.s\tstack-[22], r6, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\t32, r3, r3\n\tld.1\tr3, r7\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_27[0], r7, r7\n\tst.1.inc\tr6, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r6, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r6, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_349\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_353\n.BB0_352:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr12, r11, r12\n\tst.1\tr12, r0\n\tadd\tr1, r11, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_349\n.BB0_353:\n\tsub\tr11, r6, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_352\n\tadd\tr0, r0, r14\n.BB0_355:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_355\n\tjump\t@.BB0_352\n.BB0_356:\n\tld.1\t64, r4\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r5\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1\tr5, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_358\n\tadd\tr5, r0, stack-[19]\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r5\n\tshl.s\t64, r5, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\tr4, r0, stack-[21]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[19], r0, r5\n\tadd\tstack-[21], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_367\n.BB0_358:\n\tsub.s!\t@CPI0_33[0], r4, r1\n\tjump.gt\t@.BB0_360\n\tst.1\t64, r4\n\tadd\t@CPI0_74[0], r4, r1\n\tsub.s!\t@CPI0_75[0], r1, r1\n\tjump.ge\t@.BB0_372\n.BB0_360:\n\tadd\t@CPI0_65[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_361:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_364\n\tadd\tr0, r0, r6\n.BB0_363:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_363\n.BB0_364:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_366\n.BB0_365:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_366:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r4, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_367:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_370\n\tadd\tr0, r0, r6\n.BB0_369:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_369\n.BB0_370:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_249\n\tjump\t@.BB0_250\n.BB0_371:\n\tjump\t@.BB0_135\n.BB0_372:\n\tadd\t36, r4, r1\n\tadd\t@CPI0_76[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr4, r2\n\tst.1\tr5, r0\n\tadd\t68, r4, r2\n\tadd\tstack-[22], r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_376\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_382\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_377\n.BB0_375:\n\tjump\t@.BB0_141\n.BB0_376:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_377:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_380\n\tadd\tr0, r0, r6\n.BB0_379:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_379\n.BB0_380:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_223\n\tjump\t@.BB0_222\n.BB0_382:\n\tand\t@CPI0_27[0], r1, r1\n\tadd\t32, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_78[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[20], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI0_27[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_420\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_243\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_45[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[22]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_388\n\tadd\tstack-[22], r0, r1\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tjump.gt\t@.BB0_360\n.BB0_386:\n\tadd\tstack-[22], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_387:\n\tjump\t@.BB0_61\n.BB0_388:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_391\n\tadd\tr0, r0, r6\n.BB0_390:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_390\n.BB0_391:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.BB0_393:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_396\n\tadd\tr0, r0, r6\n.BB0_395:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_395\n.BB0_396:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_366\n\tjump\t@.BB0_365\n.BB0_398:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_401\n\tadd\tr0, r0, r6\n.BB0_400:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_400\n.BB0_401:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.BB0_403:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_406\n\tadd\tr0, r0, r6\n.BB0_405:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_405\n.BB0_406:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.BB0_408:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[4], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_49[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_411\n\tadd\tr0, r0, r7\n.BB0_410:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_410\n.BB0_411:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_413\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[4], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_413:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_421\n.BB0_414:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[4], r1, r1\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.gt\t@.BB0_360\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_243\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI0_54[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_420\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_243\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_45[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[22]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_426\n\tadd\tstack-[22], r0, r1\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tjump.gt\t@.BB0_360\n\tjump\t@.BB0_386\n.BB0_420:\n\trevert\n.BB0_421:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_424\n\tadd\tr0, r0, r6\n.BB0_423:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_423\n.BB0_424:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.BB0_426:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_429\n\tadd\tr0, r0, r6\n.BB0_428:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_428\n.BB0_429:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_250\n\tjump\t@.BB0_249\n.func_end0:\n\nexternal_fun_testZkValidateTransaction:\n.func_begin1:\n\tnop\tstack+=[19]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB1_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t4, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tadd\t0, r0, stack-[19]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB1_3\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t32, r0, stack-[18]\n\tadd\t32, r0, r5\n\tsload\tr5, r1\n\tadd\t31, r0, r2\n\tadd\tr2, r0, stack-[17]\n\tsload\tr2, r2\n\tld.1\t64, r7\n\tadd\t32, r7, r3\n\tadd\t@CPI1_1[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t68, r7, r3\n\tadd\t@CPI1_2[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t68, r0, r3\n\tst.1\tr7, r3\n\tshr.s\t8, r2, r2\n\tand\t@CPI1_3[0], r2, r2\n\tadd\t36, r7, r3\n\tst.1\tr3, r2\n\tand\t@CPI1_3[0], r1, r6\n\tsub.s!\t@CPI1_4[0], r7, r1\n\tjump.ge\t@.BB1_14\n\tadd\t128, r7, r10\n\tst.1\t64, r10\n\tadd\t@CPI1_5[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB1_6\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB1_13\n.BB1_6:\n\tadd\tr7, r0, stack-[13]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr5, r0, stack-[16]\n\tadd\t@CPI1_6[0], r0, r3\n\tsub.s!\t@CPI1_6[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_6[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI1_7[0], r1, r1\n\tadd\tr10, r0, stack-[15]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_9\n\tadd\tr0, r0, r7\n.BB1_8:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_8\n.BB1_9:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_11\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_11:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[16], r0, r5\n\tjump.eq\t@.BB1_55\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n.BB1_13:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tsub.s!\t@CPI1_8[0], r1, r2\n\tjump.le\t@.BB1_15\n.BB1_14:\n\tadd\t@CPI1_48[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_15:\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB1_2\n\tld.1\tr10, r3\n\tsub.s!\t@CPI1_3[0], r3, r2\n\tjump.gt\t@.BB1_2\n\tadd\tr3, r0, stack-[15]\n\tsub.s!\t@CPI1_9[0], r1, r2\n\tjump.gt\t@.BB1_14\n\tadd\t512, r1, r2\n\tst.1\t64, r2\n\tadd\t288, r1, r2\n\tst.1\tr2, r0\n\tadd\t256, r1, r2\n\tst.1\tr2, r0\n\tadd\t224, r1, r2\n\tst.1\tr2, r0\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t160, r1, r2\n\tst.1\tr2, r0\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI1_10[0], r2, r3\n\tjump.gt\t@.BB1_14\n\tadd\tr7, r0, stack-[13]\n\tadd\tr6, r0, stack-[14]\n\tadd\tr5, r0, stack-[16]\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n.BB1_20:\n\tshl.s\t5, r4, r6\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t4, r4, r6\n\tjump.lt\t@.BB1_20\n\tadd\t480, r1, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\t448, r1, r3\n\tst.1\tr3, r4\n\tadd\t416, r1, r3\n\tst.1\tr3, r4\n\tadd\t384, r1, r3\n\tst.1\tr3, r4\n\tadd\t352, r1, r3\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr3, r4\n\tadd\t320, r1, r1\n\tst.1\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[12]\n\tadd\t@CPI1_11[0], r0, r2\n\tst.1\tr4, r2\n\tshr.s\t8, r1, r1\n\tand\t@CPI1_3[0], r1, r1\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_6[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t@CPI1_13[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_24\n\tadd\tr0, r0, r7\n.BB1_23:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_23\n.BB1_24:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_26\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_26:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_61\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r7\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r4\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r5\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB1_2\n\tld.1\tr7, r2\n\tsub.s!\t@CPI1_8[0], r2, r3\n\tjump.gt\t@.BB1_2\n\tsub.s!\t@CPI1_14[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tadd\t32, r1, r3\n\tst.1\t64, r3\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tsub.s!\t@CPI1_10[0], r4, r3\n\tjump.gt\t@.BB1_14\n\tadd\t128, r4, r3\n\tst.1\t64, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r0\n\tadd\t64, r4, r3\n\tst.1\tr3, r0\n\tadd\t32, r4, r3\n\tst.1\tr3, r0\n\tst.1\tr4, r0\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI1_9[0], r3, r3\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[12], r0, r7\n\tadd\t512, r7, r3\n\tst.1\t64, r3\n\tadd\t352, r7, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r5\n\tadd\t320, r7, r3\n\tst.1\tr3, r4\n\tadd\t256, r7, r4\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tadd\t192, r7, r4\n\tadd\t@CPI1_15[0], r0, r2\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t160, r7, r4\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r2\n\tadd\t128, r7, r5\n\tst.1\tr5, r2\n\tadd\t96, r7, r4\n\tadd\tr4, r0, stack-[9]\n\tst.1\tr4, r2\n\tadd\t64, r7, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r6\n\tadd\t32, r7, r6\n\tadd\tstack-[15], r0, r2\n\tst.1\tr6, r2\n\tadd\t113, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr7, r2\n\tadd\t288, r7, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r0\n\tadd\t224, r7, r7\n\tst.1\tr7, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI1_14[0], r2, r4\n\tjump.gt\t@.BB1_14\n\tadd\t32, r2, r4\n\tst.1\t64, r4\n\tst.1\tr2, r0\n\tadd\tstack-[12], r0, r4\n\tadd\t416, r4, r8\n\tadd\tr8, r0, stack-[5]\n\tst.1\tr8, r1\n\tadd\t384, r4, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_14[0], r1, r2\n\tjump.gt\t@.BB1_14\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[12], r0, r2\n\tadd\t448, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_14[0], r1, r2\n\tjump.gt\t@.BB1_14\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[12], r0, r2\n\tadd\t480, r2, r2\n\tst.1\tr2, r1\n\tld.1\t64, r8\n\tsub.s!\t@CPI1_9[0], r8, r1\n\tjump.gt\t@.BB1_14\n\tadd\t512, r8, r1\n\tst.1\t64, r1\n\tadd\t288, r8, r1\n\tst.1\tr1, r0\n\tadd\t256, r8, r1\n\tst.1\tr1, r0\n\tadd\t224, r8, r1\n\tst.1\tr1, r0\n\tadd\t192, r8, r1\n\tst.1\tr1, r0\n\tadd\t160, r8, r1\n\tst.1\tr1, r0\n\tadd\t128, r8, r1\n\tst.1\tr1, r0\n\tadd\t96, r8, r1\n\tst.1\tr1, r0\n\tadd\t64, r8, r1\n\tst.1\tr1, r0\n\tadd\t32, r8, r1\n\tst.1\tr1, r0\n\tst.1\tr8, r0\n\tld.1\t64, r9\n\tsub.s!\t@CPI1_10[0], r9, r1\n\tjump.gt\t@.BB1_14\n\tadd\t128, r9, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tr1, r2, r4\n\tadd\tr0, r0, r10\n\tadd\tr9, r0, r11\n.BB1_40:\n\tshl.s\t5, r10, r12\n\tptr.add\tr4, r12, r12\n\tld\tr12, r12\n\tst.1.inc\tr11, r12, r11\n\tadd\t1, r10, r10\n\tsub.s!\t4, r10, r12\n\tjump.lt\t@.BB1_40\n\tadd\t480, r8, r10\n\tadd\tstack-[11], r0, r11\n\tst.1\tr10, r11\n\tadd\t448, r8, r10\n\tst.1\tr10, r11\n\tadd\t416, r8, r10\n\tst.1\tr10, r11\n\tadd\t384, r8, r10\n\tst.1\tr10, r11\n\tadd\t352, r8, r10\n\tst.1\tr10, r11\n\tadd\t320, r8, r8\n\tst.1\tr8, r9\n\tadd\tstack-[12], r0, r8\n\tld.1\tr8, r8\n\tsub.s!\t1, r8, r9\n\tjump.gt\t@.BB1_66\n\tsub!\tr8, r0, r5\n\tjump.eq\t@.BB1_99\n\tsub.s!\t1, r8, r1\n\tjump.ne\t@.BB1_120\n\tadd\t@CPI1_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_17[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tld.1\t64, r3\n\tld\tr1, r4\n\tsub.s!\t128, r4, r1\n\tjump.lt\t@.BB1_135\n\tshr.s\t128, r4, r1\n\tsub.s!\t@CPI1_20[0], r4, r2\n\tadd.le\tr4, r0, r1\n\tsub.s!\t@CPI1_20[0], r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t16, r0, r2\n\tor\t8, r2, r5\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr2, r0, r5\n\tshr.s\t64, r1, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr1, r0, r2\n\tor\t4, r5, r1\n\tsub.s!\t@CPI1_6[0], r2, r6\n\tadd.le\tr5, r0, r1\n\tshr.s\t32, r2, r6\n\tsub.s!\t@CPI1_6[0], r2, r5\n\tadd.le\tr2, r0, r6\n\tor\t2, r1, r5\n\tsub.s!\t65535, r6, r2\n\tadd.le\tr1, r0, r5\n\tshr.s\t16, r6, r1\n\tadd.le\tr6, r0, r1\n\tsub.s!\t255, r1, r1\n\tadd.gt\t1, r5, r5\n\tsub.s\t32, r0, r1\n\tadd\t33, r5, r2\n\tand\tr2, r1, r8\n\tadd\t63, r8, r2\n\tand\tr2, r1, r1\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t2, r5, r1\n\tst.1.inc\tr3, r1, r6\n\tand\t31, r8, r7\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tshr.s!\t5, r8, r8\n\tjump.eq\t@.BB1_51\n\tptr.add\tr1, r2, r9\n\tadd\tr0, r0, r10\n.BB1_50:\n\tshl.s\t5, r10, r11\n\tadd\tr6, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_50\n.BB1_51:\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_53\n.BB1_53:\n\tld.1\tr3, r7\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_484\n\tld.1\tr6, r7\n\tand\t@CPI1_19[0], r7, r7\n\tshl.s\t248, r5, r8\n\tor\tr8, r7, r7\n\tadd\t@CPI1_21[0], r7, r7\n\tst.1\tr6, r7\n\tshl.s\t3, r5, r5\n\tsub\t248, r5, r5\n\tshl\tr4, r5, r4\n\tsub.s!\t255, r5, r5\n\tadd.gt\tr0, r0, r4\n\tadd\t33, r3, r5\n\tjump\t@.BB1_138\n.BB1_55:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_58\n\tadd\tr0, r0, r6\n.BB1_57:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_57\n.BB1_58:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n.BB1_59:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_60:\n\tadd\t@CPI1_6[0], r0, r1\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_61:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_64\n\tadd\tr0, r0, r6\n.BB1_63:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_63\n.BB1_64:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n\tjump\t@.BB1_59\n.BB1_66:\n\tsub.s!\t2, r8, r1\n\tjump.eq\t@.BB1_109\n\tsub.s!\t113, r8, r1\n\tjump.ne\t@.BB1_120\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI1_6[0], r0, r3\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tld.1\tr7, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tld.1\tr5, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tld.1\tr6, r2\n\tadd\tr2, r0, stack-[16]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tsub!\tr4, r0, r5\n\tadd\tr3, r0, r5\n\tjump.eq\t@.BB1_72\n\tadd\tr0, r0, r6\n\tadd\tr3, r0, r5\n.BB1_71:\n\tadd\t32, r1, r1\n\tld.1\tr1, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB1_71\n.BB1_72:\n\tsub\tr5, r2, r1\n\tsub.s\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_8[0], r1, r5\n\tjump.gt\t@.BB1_14\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t@CPI1_6[0], r0, r4\n\tsub.s!\t@CPI1_6[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r3\n\tsub.s!\t@CPI1_6[0], r3, r4\n\tadd\t@CPI1_6[0], r0, r5\n\tadd.ge\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr5, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r2\n\tld.1\t64, r1\n\tadd\t448, r1, r3\n\tst.1\tr3, r2\n\tadd\t416, r1, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t384, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t352, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t320, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t288, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t256, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t@CPI1_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t448, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI1_29[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tadd\t480, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_6[0], r0, r4\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI1_16[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_6[0], r1, r2\n\tadd.ge\t@CPI1_6[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_17[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tadd\tstack-[16], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tadd\t@CPI1_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r4, r1\n\tadd\t@CPI1_31[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\t@CPI1_32[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI1_33[0], r4, r1\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[16], r0, r4\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI1_6[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_6[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[15], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI1_34[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI1_10[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI1_6[0], r0, r3\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n.BB1_83:\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n.BB1_84:\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_36[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t4, r4, r1\n\tadd\t@CPI1_37[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_6[0], r4, r3\n\tadd\tr4, r0, stack-[16]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_38[0], r1, r1\n\tadd\t@CPI1_13[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_88\n\tadd\tr0, r0, r7\n.BB1_87:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[16], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_87\n.BB1_88:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_90\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_90:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_340\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[16], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r4\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB1_2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t255, r2, r3\n\tjump.gt\t@.BB1_2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[16], r0, r4\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tshl.s\t248, r2, r2\n\tadd\t96, r1, r5\n\tst.1\tr5, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t65, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI1_10[0], r1, r2\n\tjump.gt\t@.BB1_14\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[4], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI1_39[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_13[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_40[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB1_485\n\tadd\t@CPI1_6[0], r0, r1\n\tadd\tstack-[19], r0, r2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tmul\t@CPI1_47[0], r2, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_99:\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[11]\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t128, r5, r6\n\tjump.lt\t@.BB1_121\n\tshr.s\t128, r5, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd.le\tr5, r0, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\t16, r0, r7\n\tor\t8, r7, r8\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr7, r0, r8\n\tshr.s\t64, r6, r7\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr6, r0, r7\n\tor\t4, r8, r9\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr8, r0, r9\n\tshr.s\t32, r7, r8\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr7, r0, r8\n\tor\t2, r9, r6\n\tsub.s!\t65535, r8, r7\n\tadd.le\tr9, r0, r6\n\tshr.s\t16, r8, r7\n\tadd.le\tr8, r0, r7\n\tsub.s!\t255, r7, r7\n\tadd.gt\t1, r6, r6\n\tsub.s\t32, r0, r7\n\tadd\t33, r6, r8\n\tand\tr8, r7, r9\n\tadd\t63, r9, r8\n\tand\tr8, r7, r7\n\tadd\tstack-[11], r7, r7\n\tsub.s!\tstack-[11], r7, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tjump.gt\t@.BB1_14\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r7\n\tadd\t2, r6, r7\n\tadd\tstack-[11], r0, r8\n\tst.1.inc\tr8, r7, r7\n\tand\t31, r9, r8\n\tshr.s!\t5, r9, r9\n\tjump.eq\t@.BB1_105\n\tadd\tr0, r0, r10\n.BB1_104:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr4, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB1_104\n.BB1_105:\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_107\n.BB1_107:\n\tadd\tstack-[11], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_484\n\tld.1\tr7, r8\n\tand\t@CPI1_19[0], r8, r8\n\tshl.s\t248, r6, r9\n\tor\tr9, r8, r8\n\tadd\t@CPI1_21[0], r8, r8\n\tst.1\tr7, r8\n\tshl.s\t3, r6, r6\n\tsub\t248, r6, r6\n\tshl\tr5, r6, r5\n\tsub.s!\t255, r6, r6\n\tadd.gt\tr0, r0, r5\n\tadd\tstack-[11], r0, r6\n\tadd\t33, r6, r6\n\tjump\t@.BB1_124\n.BB1_109:\n\tadd\t@CPI1_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_17[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tld.1\t64, r3\n\tld\tr1, r4\n\tsub.s!\t128, r4, r1\n\tjump.lt\t@.BB1_149\n\tshr.s\t128, r4, r1\n\tsub.s!\t@CPI1_20[0], r4, r2\n\tadd.le\tr4, r0, r1\n\tsub.s!\t@CPI1_20[0], r4, r2\n\tadd\t0, r0, r2\n\tadd.gt\t16, r0, r2\n\tor\t8, r2, r5\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr2, r0, r5\n\tshr.s\t64, r1, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr1, r0, r2\n\tor\t4, r5, r1\n\tsub.s!\t@CPI1_6[0], r2, r6\n\tadd.le\tr5, r0, r1\n\tshr.s\t32, r2, r6\n\tsub.s!\t@CPI1_6[0], r2, r5\n\tadd.le\tr2, r0, r6\n\tor\t2, r1, r5\n\tsub.s!\t65535, r6, r2\n\tadd.le\tr1, r0, r5\n\tshr.s\t16, r6, r1\n\tadd.le\tr6, r0, r1\n\tsub.s!\t255, r1, r1\n\tadd.gt\t1, r5, r5\n\tsub.s\t32, r0, r1\n\tadd\t33, r5, r2\n\tand\tr2, r1, r8\n\tadd\t63, r8, r2\n\tand\tr2, r1, r1\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t2, r5, r1\n\tst.1.inc\tr3, r1, r6\n\tand\t31, r8, r7\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tshr.s!\t5, r8, r8\n\tjump.eq\t@.BB1_116\n\tptr.add\tr1, r2, r9\n\tadd\tr0, r0, r10\n.BB1_115:\n\tshl.s\t5, r10, r11\n\tadd\tr6, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_115\n.BB1_116:\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_118\n.BB1_118:\n\tld.1\tr3, r7\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_484\n\tld.1\tr6, r7\n\tand\t@CPI1_19[0], r7, r7\n\tshl.s\t248, r5, r8\n\tor\tr8, r7, r7\n\tadd\t@CPI1_21[0], r7, r7\n\tst.1\tr6, r7\n\tshl.s\t3, r5, r5\n\tsub\t248, r5, r5\n\tshl\tr4, r5, r4\n\tsub.s!\t255, r5, r5\n\tadd.gt\tr0, r0, r4\n\tadd\t33, r3, r5\n\tjump\t@.BB1_152\n.BB1_120:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI1_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_50[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_6[0], r0, r2\n\tsub.s!\t@CPI1_6[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_51[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_121:\n\tadd\tstack-[11], r0, r6\n\tsub.s!\t@CPI1_18[0], r6, r6\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[11], r0, r7\n\tadd\t64, r7, r6\n\tst.1\t64, r6\n\tadd!\t1, r0, r6\n\tst.1.inc\tr7, r6, r6\n\tld\tr4, r7\n\tst.1\tr6, r7\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r5, r8\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr5, r0, r5\n\tadd.ne\tr8, r0, r9\n\tand\t@CPI1_19[0], r7, r5\n\tor\tr5, r9, r5\n.BB1_124:\n\tst.1\tr6, r5\n\tld.1\t64, r5\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tsub.s!\t128, r6, r7\n\tjump.lt\t@.BB1_163\n\tshr.s\t128, r6, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd.le\tr6, r0, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t16, r0, r8\n\tor\t8, r8, r9\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr8, r0, r9\n\tshr.s\t64, r7, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr7, r0, r8\n\tor\t4, r9, r10\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr9, r0, r10\n\tshr.s\t32, r8, r9\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr8, r0, r9\n\tor\t2, r10, r7\n\tsub.s!\t65535, r9, r8\n\tadd.le\tr10, r0, r7\n\tshr.s\t16, r9, r8\n\tadd.le\tr9, r0, r8\n\tsub.s!\t255, r8, r8\n\tadd.gt\t1, r7, r7\n\tsub.s\t32, r0, r8\n\tadd\t33, r7, r9\n\tand\tr9, r8, r10\n\tadd\t63, r10, r9\n\tand\tr9, r8, r8\n\tadd\tr5, r8, r8\n\tsub!\tr8, r5, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tjump.gt\t@.BB1_14\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r8\n\tadd\t2, r7, r8\n\tst.1.inc\tr5, r8, r8\n\tand\t31, r10, r9\n\tshr.s!\t5, r10, r10\n\tjump.eq\t@.BB1_131\n\tadd\tr0, r0, r11\n.BB1_130:\n\tshl.s\t5, r11, r12\n\tadd\tr8, r12, r13\n\tptr.add\tr4, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB1_130\n.BB1_131:\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_133\n.BB1_133:\n\tld.1\tr5, r9\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_484\n\tld.1\tr8, r9\n\tand\t@CPI1_19[0], r9, r9\n\tshl.s\t248, r7, r10\n\tor\tr10, r9, r9\n\tadd\t@CPI1_21[0], r9, r9\n\tst.1\tr8, r9\n\tshl.s\t3, r7, r7\n\tsub\t248, r7, r7\n\tshl\tr6, r7, r6\n\tsub.s!\t255, r7, r7\n\tadd.gt\tr0, r0, r6\n\tadd\t33, r5, r7\n\tjump\t@.BB1_166\n.BB1_135:\n\tsub.s!\t@CPI1_18[0], r3, r1\n\tjump.gt\t@.BB1_14\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd!\t1, r0, r1\n\tst.1.inc\tr3, r1, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r4, r7\n\tadd\t@CPI1_0[0], r0, r8\n\tsub!\tr4, r0, r4\n\tadd.ne\tr7, r0, r8\n\tand\t@CPI1_19[0], r6, r4\n\tor\tr4, r8, r4\n.BB1_138:\n\tst.1\tr5, r4\n\tld.1\t64, r4\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t128, r5, r6\n\tjump.lt\t@.BB1_177\n\tshr.s\t128, r5, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd.le\tr5, r0, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\t16, r0, r7\n\tor\t8, r7, r8\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr7, r0, r8\n\tshr.s\t64, r6, r7\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr6, r0, r7\n\tor\t4, r8, r9\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr8, r0, r9\n\tshr.s\t32, r7, r8\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr7, r0, r8\n\tor\t2, r9, r6\n\tsub.s!\t65535, r8, r7\n\tadd.le\tr9, r0, r6\n\tshr.s\t16, r8, r7\n\tadd.le\tr8, r0, r7\n\tsub.s!\t255, r7, r7\n\tadd.gt\t1, r6, r6\n\tsub.s\t32, r0, r7\n\tadd\t33, r6, r8\n\tand\tr8, r7, r9\n\tadd\t63, r9, r8\n\tand\tr8, r7, r7\n\tadd\tr4, r7, r7\n\tsub!\tr7, r4, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tjump.gt\t@.BB1_14\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r7\n\tadd\t2, r6, r7\n\tst.1.inc\tr4, r7, r7\n\tand\t31, r9, r8\n\tshr.s!\t5, r9, r9\n\tjump.eq\t@.BB1_145\n\tptr.add\tr1, r2, r10\n\tadd\tr0, r0, r11\n.BB1_144:\n\tshl.s\t5, r11, r12\n\tadd\tr7, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB1_144\n.BB1_145:\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_147\n.BB1_147:\n\tld.1\tr4, r8\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_484\n\tld.1\tr7, r8\n\tand\t@CPI1_19[0], r8, r8\n\tshl.s\t248, r6, r9\n\tor\tr9, r8, r8\n\tadd\t@CPI1_21[0], r8, r8\n\tst.1\tr7, r8\n\tshl.s\t3, r6, r6\n\tsub\t248, r6, r6\n\tshl\tr5, r6, r5\n\tsub.s!\t255, r6, r6\n\tadd.gt\tr0, r0, r5\n\tadd\t33, r4, r6\n\tjump\t@.BB1_180\n.BB1_149:\n\tsub.s!\t@CPI1_18[0], r3, r1\n\tjump.gt\t@.BB1_14\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd!\t1, r0, r1\n\tst.1.inc\tr3, r1, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r4, r7\n\tadd\t@CPI1_0[0], r0, r8\n\tsub!\tr4, r0, r4\n\tadd.ne\tr7, r0, r8\n\tand\t@CPI1_19[0], r6, r4\n\tor\tr4, r8, r4\n.BB1_152:\n\tst.1\tr5, r4\n\tld.1\t64, r4\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t128, r5, r6\n\tjump.lt\t@.BB1_191\n\tshr.s\t128, r5, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd.le\tr5, r0, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\t16, r0, r7\n\tor\t8, r7, r8\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr7, r0, r8\n\tshr.s\t64, r6, r7\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr6, r0, r7\n\tor\t4, r8, r9\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr8, r0, r9\n\tshr.s\t32, r7, r8\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr7, r0, r8\n\tor\t2, r9, r6\n\tsub.s!\t65535, r8, r7\n\tadd.le\tr9, r0, r6\n\tshr.s\t16, r8, r7\n\tadd.le\tr8, r0, r7\n\tsub.s!\t255, r7, r7\n\tadd.gt\t1, r6, r6\n\tsub.s\t32, r0, r7\n\tadd\t33, r6, r8\n\tand\tr8, r7, r9\n\tadd\t63, r9, r8\n\tand\tr8, r7, r7\n\tadd\tr4, r7, r7\n\tsub!\tr7, r4, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tjump.gt\t@.BB1_14\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r7\n\tadd\t2, r6, r7\n\tst.1.inc\tr4, r7, r7\n\tand\t31, r9, r8\n\tshr.s!\t5, r9, r9\n\tjump.eq\t@.BB1_159\n\tptr.add\tr1, r2, r10\n\tadd\tr0, r0, r11\n.BB1_158:\n\tshl.s\t5, r11, r12\n\tadd\tr7, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB1_158\n.BB1_159:\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_161\n.BB1_161:\n\tld.1\tr4, r8\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_484\n\tld.1\tr7, r8\n\tand\t@CPI1_19[0], r8, r8\n\tshl.s\t248, r6, r9\n\tor\tr9, r8, r8\n\tadd\t@CPI1_21[0], r8, r8\n\tst.1\tr7, r8\n\tshl.s\t3, r6, r6\n\tsub\t248, r6, r6\n\tshl\tr5, r6, r5\n\tsub.s!\t255, r6, r6\n\tadd.gt\tr0, r0, r5\n\tadd\t33, r4, r6\n\tjump\t@.BB1_194\n.BB1_163:\n\tsub.s!\t@CPI1_18[0], r5, r7\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r7\n\tst.1\t64, r7\n\tadd!\t1, r0, r7\n\tst.1.inc\tr5, r7, r7\n\tld\tr4, r8\n\tst.1\tr7, r8\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r9\n\tadd\t@CPI1_0[0], r0, r10\n\tsub!\tr6, r0, r6\n\tadd.ne\tr9, r0, r10\n\tand\t@CPI1_19[0], r8, r6\n\tor\tr6, r10, r6\n.BB1_166:\n\tst.1\tr7, r6\n\tld.1\t64, r6\n\tadd\tstack-[9], r0, r7\n\tld.1\tr7, r7\n\tsub.s!\t128, r7, r8\n\tjump.lt\t@.BB1_205\n\tshr.s\t128, r7, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd.le\tr7, r0, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t16, r0, r9\n\tor\t8, r9, r10\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tadd.le\tr9, r0, r10\n\tshr.s\t64, r8, r9\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tadd.le\tr8, r0, r9\n\tor\t4, r10, r11\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr10, r0, r11\n\tshr.s\t32, r9, r10\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr9, r0, r10\n\tor\t2, r11, r8\n\tsub.s!\t65535, r10, r9\n\tadd.le\tr11, r0, r8\n\tshr.s\t16, r10, r9\n\tadd.le\tr10, r0, r9\n\tsub.s!\t255, r9, r9\n\tadd.gt\t1, r8, r8\n\tsub.s\t32, r0, r9\n\tadd\t33, r8, r10\n\tand\tr10, r9, r11\n\tadd\t63, r11, r10\n\tand\tr10, r9, r9\n\tadd\tr6, r9, r9\n\tsub!\tr9, r6, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI1_8[0], r9, r12\n\tjump.gt\t@.BB1_14\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r9\n\tadd\t2, r8, r9\n\tst.1.inc\tr6, r9, r9\n\tand\t31, r11, r10\n\tshr.s!\t5, r11, r11\n\tjump.eq\t@.BB1_173\n\tadd\tr0, r0, r12\n.BB1_172:\n\tshl.s\t5, r12, r13\n\tadd\tr9, r13, r14\n\tptr.add\tr4, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r11, r13\n\tjump.lt\t@.BB1_172\n.BB1_173:\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_175\n.BB1_175:\n\tld.1\tr6, r10\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_484\n\tld.1\tr9, r10\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r8, r11\n\tor\tr11, r10, r10\n\tadd\t@CPI1_21[0], r10, r10\n\tst.1\tr9, r10\n\tshl.s\t3, r8, r8\n\tsub\t248, r8, r8\n\tshl\tr7, r8, r7\n\tsub.s!\t255, r8, r8\n\tadd.gt\tr0, r0, r7\n\tadd\t33, r6, r8\n\tjump\t@.BB1_208\n.BB1_177:\n\tsub.s!\t@CPI1_18[0], r4, r6\n\tjump.gt\t@.BB1_14\n\tadd\t64, r4, r6\n\tst.1\t64, r6\n\tptr.add\tr1, r2, r7\n\tadd!\t1, r0, r6\n\tst.1.inc\tr4, r6, r6\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r5, r8\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr5, r0, r5\n\tadd.ne\tr8, r0, r9\n\tand\t@CPI1_19[0], r7, r5\n\tor\tr5, r9, r5\n.BB1_180:\n\tst.1\tr6, r5\n\tld.1\t64, r5\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tsub.s!\t128, r6, r7\n\tjump.lt\t@.BB1_228\n\tshr.s\t128, r6, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd.le\tr6, r0, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t16, r0, r8\n\tor\t8, r8, r9\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr8, r0, r9\n\tshr.s\t64, r7, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr7, r0, r8\n\tor\t4, r9, r10\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr9, r0, r10\n\tshr.s\t32, r8, r9\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr8, r0, r9\n\tor\t2, r10, r7\n\tsub.s!\t65535, r9, r8\n\tadd.le\tr10, r0, r7\n\tshr.s\t16, r9, r8\n\tadd.le\tr9, r0, r8\n\tsub.s!\t255, r8, r8\n\tadd.gt\t1, r7, r7\n\tsub.s\t32, r0, r8\n\tadd\t33, r7, r9\n\tand\tr9, r8, r10\n\tadd\t63, r10, r9\n\tand\tr9, r8, r8\n\tadd\tr5, r8, r8\n\tsub!\tr8, r5, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tjump.gt\t@.BB1_14\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r8\n\tadd\t2, r7, r8\n\tst.1.inc\tr5, r8, r8\n\tand\t31, r10, r9\n\tshr.s!\t5, r10, r10\n\tjump.eq\t@.BB1_187\n\tptr.add\tr1, r2, r11\n\tadd\tr0, r0, r12\n.BB1_186:\n\tshl.s\t5, r12, r13\n\tadd\tr8, r13, r14\n\tptr.add\tr11, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB1_186\n.BB1_187:\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_189\n.BB1_189:\n\tld.1\tr5, r9\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_484\n\tld.1\tr8, r9\n\tand\t@CPI1_19[0], r9, r9\n\tshl.s\t248, r7, r10\n\tor\tr10, r9, r9\n\tadd\t@CPI1_21[0], r9, r9\n\tst.1\tr8, r9\n\tshl.s\t3, r7, r7\n\tsub\t248, r7, r7\n\tshl\tr6, r7, r6\n\tsub.s!\t255, r7, r7\n\tadd.gt\tr0, r0, r6\n\tadd\t33, r5, r7\n\tjump\t@.BB1_231\n.BB1_191:\n\tsub.s!\t@CPI1_18[0], r4, r6\n\tjump.gt\t@.BB1_14\n\tadd\t64, r4, r6\n\tst.1\t64, r6\n\tptr.add\tr1, r2, r7\n\tadd!\t1, r0, r6\n\tst.1.inc\tr4, r6, r6\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r5, r8\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr5, r0, r5\n\tadd.ne\tr8, r0, r9\n\tand\t@CPI1_19[0], r7, r5\n\tor\tr5, r9, r5\n.BB1_194:\n\tst.1\tr6, r5\n\tld.1\t64, r5\n\tadd\tstack-[8], r0, r6\n\tld.1\tr6, r6\n\tsub.s!\t128, r6, r7\n\tjump.lt\t@.BB1_242\n\tshr.s\t128, r6, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd.le\tr6, r0, r7\n\tsub.s!\t@CPI1_20[0], r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t16, r0, r8\n\tor\t8, r8, r9\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr8, r0, r9\n\tshr.s\t64, r7, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tadd.le\tr7, r0, r8\n\tor\t4, r9, r10\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr9, r0, r10\n\tshr.s\t32, r8, r9\n\tsub.s!\t@CPI1_6[0], r8, r7\n\tadd.le\tr8, r0, r9\n\tor\t2, r10, r7\n\tsub.s!\t65535, r9, r8\n\tadd.le\tr10, r0, r7\n\tshr.s\t16, r9, r8\n\tadd.le\tr9, r0, r8\n\tsub.s!\t255, r8, r8\n\tadd.gt\t1, r7, r7\n\tsub.s\t32, r0, r8\n\tadd\t33, r7, r9\n\tand\tr9, r8, r10\n\tadd\t63, r10, r9\n\tand\tr9, r8, r8\n\tadd\tr5, r8, r8\n\tsub!\tr8, r5, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tjump.gt\t@.BB1_14\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r8\n\tadd\t2, r7, r8\n\tst.1.inc\tr5, r8, r8\n\tand\t31, r10, r9\n\tshr.s!\t5, r10, r10\n\tjump.eq\t@.BB1_201\n\tptr.add\tr1, r2, r11\n\tadd\tr0, r0, r12\n.BB1_200:\n\tshl.s\t5, r12, r13\n\tadd\tr8, r13, r14\n\tptr.add\tr11, r13, r13\n\tld\tr13, r13\n\tst.1\tr14, r13\n\tadd\t1, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB1_200\n.BB1_201:\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_203\n.BB1_203:\n\tld.1\tr5, r9\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_484\n\tld.1\tr8, r9\n\tand\t@CPI1_19[0], r9, r9\n\tshl.s\t248, r7, r10\n\tor\tr10, r9, r9\n\tadd\t@CPI1_21[0], r9, r9\n\tst.1\tr8, r9\n\tshl.s\t3, r7, r7\n\tsub\t248, r7, r7\n\tshl\tr6, r7, r6\n\tsub.s!\t255, r7, r7\n\tadd.gt\tr0, r0, r6\n\tadd\t33, r5, r7\n\tjump\t@.BB1_245\n.BB1_205:\n\tsub.s!\t@CPI1_18[0], r6, r8\n\tjump.gt\t@.BB1_14\n\tadd\t64, r6, r8\n\tst.1\t64, r8\n\tadd!\t1, r0, r8\n\tst.1.inc\tr6, r8, r8\n\tld\tr4, r9\n\tst.1\tr8, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r7, r10\n\tadd\t@CPI1_0[0], r0, r11\n\tsub!\tr7, r0, r7\n\tadd.ne\tr10, r0, r11\n\tand\t@CPI1_19[0], r9, r7\n\tor\tr7, r11, r7\n.BB1_208:\n\tst.1\tr8, r7\n\tld.1\t64, r7\n\tadd\tr7, r0, stack-[13]\n\tadd\t32, r7, r11\n\tld.1.inc\tr5, r5, r7\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB1_212\n\tadd\tr0, r0, r8\n.BB1_211:\n\tadd\tr8, r11, r9\n\tadd\tr7, r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB1_211\n.BB1_212:\n\tadd\tr11, r0, stack-[16]\n\tadd\tr5, r11, r7\n\tst.1\tr7, r0\n\tld.1.inc\tr6, r6, r8\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB1_215\n\tadd\tr0, r0, r9\n.BB1_214:\n\tadd\tr9, r7, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB1_214\n.BB1_215:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r5\n\tadd\tstack-[13], r0, r7\n\tst.1\tr7, r5\n\tadd\t63, r5, r5\n\tsub.s\t32, r0, stack-[9]\n\tand\tstack-[9], r5, r5\n\tadd\tr5, r7, r6\n\tsub!\tr6, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tadd\tr6, r0, stack-[10]\n\tsub.s!\t@CPI1_8[0], r6, r6\n\tjump.gt\t@.BB1_14\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB1_14\n\tadd\tstack-[10], r0, r5\n\tst.1\t64, r5\n\tsub.s!\t@CPI1_18[0], r5, r5\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[7], r0, r5\n\tld.1\tr5, r5\n\tadd\tstack-[10], r0, r7\n\tadd\t64, r7, r6\n\tst.1\t64, r6\n\tadd\t32, r7, r8\n\tadd\t@CPI1_22[0], r0, r6\n\tadd\tr8, r0, stack-[14]\n\tst.1\tr8, r6\n\tadd\t21, r0, r6\n\tst.1\tr7, r6\n\tadd\t33, r7, r6\n\tshl.s\t96, r5, r5\n\tst.1\tr6, r5\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t128, r5, r6\n\tjump.lt\t@.BB1_285\n\tshr.s\t128, r5, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd.le\tr5, r0, r6\n\tsub.s!\t@CPI1_20[0], r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\t16, r0, r7\n\tor\t8, r7, r8\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr7, r0, r8\n\tshr.s\t64, r6, r7\n\tsub.s!\t@CPI1_8[0], r6, r9\n\tadd.le\tr6, r0, r7\n\tor\t4, r8, r9\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr8, r0, r9\n\tshr.s\t32, r7, r8\n\tsub.s!\t@CPI1_6[0], r7, r6\n\tadd.le\tr7, r0, r8\n\tor\t2, r9, r6\n\tsub.s!\t65535, r8, r7\n\tadd.le\tr9, r0, r6\n\tshr.s\t16, r8, r7\n\tadd.le\tr8, r0, r7\n\tsub.s!\t255, r7, r7\n\tadd.gt\t1, r6, r6\n\tadd\t33, r6, r7\n\tand\tstack-[9], r7, r9\n\tadd\t63, r9, r7\n\tand\tstack-[9], r7, r7\n\tadd\tstack-[8], r7, r7\n\tsub.s!\tstack-[8], r7, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI1_8[0], r7, r10\n\tjump.gt\t@.BB1_14\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r7\n\tadd\t2, r6, r7\n\tadd\tstack-[8], r0, r8\n\tst.1.inc\tr8, r7, r7\n\tand\t31, r9, r8\n\tshr.s!\t5, r9, r9\n\tjump.eq\t@.BB1_224\n\tadd\tr0, r0, r10\n.BB1_223:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr4, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB1_223\n.BB1_224:\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_226\n.BB1_226:\n\tadd\tstack-[8], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB1_484\n\tld.1\tr7, r8\n\tand\t@CPI1_19[0], r8, r8\n\tshl.s\t248, r6, r9\n\tor\tr9, r8, r8\n\tadd\t@CPI1_21[0], r8, r8\n\tst.1\tr7, r8\n\tshl.s\t3, r6, r6\n\tsub\t248, r6, r6\n\tshl\tr5, r6, r5\n\tsub.s!\t255, r6, r6\n\tadd.gt\tr0, r0, r5\n\tadd\tstack-[8], r0, r6\n\tadd\t33, r6, r6\n\tjump\t@.BB1_288\n.BB1_228:\n\tsub.s!\t@CPI1_18[0], r5, r7\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r7\n\tst.1\t64, r7\n\tptr.add\tr1, r2, r8\n\tadd!\t1, r0, r7\n\tst.1.inc\tr5, r7, r7\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r9\n\tadd\t@CPI1_0[0], r0, r10\n\tsub!\tr6, r0, r6\n\tadd.ne\tr9, r0, r10\n\tand\t@CPI1_19[0], r8, r6\n\tor\tr6, r10, r6\n.BB1_231:\n\tst.1\tr7, r6\n\tld.1\t64, r8\n\tadd\tstack-[9], r0, r6\n\tld.1\tr6, r6\n\tsub.s!\t128, r6, r7\n\tjump.lt\t@.BB1_256\n\tshr.s\t128, r6, r7\n\tsub.s!\t@CPI1_20[0], r6, r9\n\tadd.le\tr6, r0, r7\n\tsub.s!\t@CPI1_20[0], r6, r9\n\tadd\t0, r0, r9\n\tadd.gt\t16, r0, r9\n\tor\t8, r9, r10\n\tsub.s!\t@CPI1_8[0], r7, r11\n\tadd.le\tr9, r0, r10\n\tshr.s\t64, r7, r9\n\tsub.s!\t@CPI1_8[0], r7, r11\n\tadd.le\tr7, r0, r9\n\tor\t4, r10, r11\n\tsub.s!\t@CPI1_6[0], r9, r7\n\tadd.le\tr10, r0, r11\n\tshr.s\t32, r9, r10\n\tsub.s!\t@CPI1_6[0], r9, r7\n\tadd.le\tr9, r0, r10\n\tor\t2, r11, r7\n\tsub.s!\t65535, r10, r9\n\tadd.le\tr11, r0, r7\n\tshr.s\t16, r10, r9\n\tadd.le\tr10, r0, r9\n\tsub.s!\t255, r9, r9\n\tadd.gt\t1, r7, r7\n\tsub.s\t32, r0, r9\n\tadd\t33, r7, r10\n\tand\tr10, r9, r11\n\tadd\t63, r11, r10\n\tand\tr10, r9, r9\n\tadd\tr8, r9, r9\n\tsub!\tr9, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI1_8[0], r9, r12\n\tjump.gt\t@.BB1_14\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r9\n\tadd\t2, r7, r9\n\tst.1.inc\tr8, r9, r9\n\tand\t31, r11, r10\n\tshr.s!\t5, r11, r11\n\tjump.eq\t@.BB1_238\n\tptr.add\tr1, r2, r12\n\tadd\tr0, r0, r13\n.BB1_237:\n\tshl.s\t5, r13, r14\n\tadd\tr9, r14, r15\n\tptr.add\tr12, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r11, r14\n\tjump.lt\t@.BB1_237\n.BB1_238:\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_240\n.BB1_240:\n\tld.1\tr8, r10\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_484\n\tld.1\tr9, r10\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r7, r11\n\tor\tr11, r10, r10\n\tadd\t@CPI1_21[0], r10, r10\n\tst.1\tr9, r10\n\tshl.s\t3, r7, r7\n\tsub\t248, r7, r7\n\tshl\tr6, r7, r6\n\tsub.s!\t255, r7, r7\n\tadd.gt\tr0, r0, r6\n\tadd\t33, r8, r7\n\tjump\t@.BB1_259\n.BB1_242:\n\tsub.s!\t@CPI1_18[0], r5, r7\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r7\n\tst.1\t64, r7\n\tptr.add\tr1, r2, r8\n\tadd!\t1, r0, r7\n\tst.1.inc\tr5, r7, r7\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r9\n\tadd\t@CPI1_0[0], r0, r10\n\tsub!\tr6, r0, r6\n\tadd.ne\tr9, r0, r10\n\tand\t@CPI1_19[0], r8, r6\n\tor\tr6, r10, r6\n.BB1_245:\n\tst.1\tr7, r6\n\tld.1\t64, r6\n\tadd\tstack-[10], r0, r7\n\tld.1\tr7, r7\n\tsub.s!\t128, r7, r8\n\tjump.lt\t@.BB1_271\n\tshr.s\t128, r7, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd.le\tr7, r0, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t16, r0, r9\n\tor\t8, r9, r10\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tadd.le\tr9, r0, r10\n\tshr.s\t64, r8, r9\n\tsub.s!\t@CPI1_8[0], r8, r11\n\tadd.le\tr8, r0, r9\n\tor\t4, r10, r11\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr10, r0, r11\n\tshr.s\t32, r9, r10\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr9, r0, r10\n\tor\t2, r11, r8\n\tsub.s!\t65535, r10, r9\n\tadd.le\tr11, r0, r8\n\tshr.s\t16, r10, r9\n\tadd.le\tr10, r0, r9\n\tsub.s!\t255, r9, r9\n\tadd.gt\t1, r8, r8\n\tsub.s\t32, r0, r9\n\tadd\t33, r8, r10\n\tand\tr10, r9, r11\n\tadd\t63, r11, r10\n\tand\tr10, r9, r9\n\tadd\tr6, r9, r9\n\tsub!\tr9, r6, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI1_8[0], r9, r12\n\tjump.gt\t@.BB1_14\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r9\n\tadd\t2, r8, r9\n\tst.1.inc\tr6, r9, r9\n\tand\t31, r11, r10\n\tshr.s!\t5, r11, r11\n\tjump.eq\t@.BB1_252\n\tptr.add\tr1, r2, r12\n\tadd\tr0, r0, r13\n.BB1_251:\n\tshl.s\t5, r13, r14\n\tadd\tr9, r14, r15\n\tptr.add\tr12, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r11, r14\n\tjump.lt\t@.BB1_251\n.BB1_252:\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_254\n.BB1_254:\n\tld.1\tr6, r10\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_484\n\tld.1\tr9, r10\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r8, r11\n\tor\tr11, r10, r10\n\tadd\t@CPI1_21[0], r10, r10\n\tst.1\tr9, r10\n\tshl.s\t3, r8, r8\n\tsub\t248, r8, r8\n\tshl\tr7, r8, r7\n\tsub.s!\t255, r8, r8\n\tadd.gt\tr0, r0, r7\n\tadd\t33, r6, r8\n\tjump\t@.BB1_274\n.BB1_256:\n\tsub.s!\t@CPI1_18[0], r8, r7\n\tjump.gt\t@.BB1_14\n\tadd\t64, r8, r7\n\tst.1\t64, r7\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r7\n\tst.1.inc\tr8, r7, r7\n\tld\tr9, r9\n\tst.1\tr7, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r10\n\tadd\t@CPI1_0[0], r0, r11\n\tsub!\tr6, r0, r6\n\tadd.ne\tr10, r0, r11\n\tand\t@CPI1_19[0], r9, r6\n\tor\tr6, r11, r6\n.BB1_259:\n\tst.1\tr7, r6\n\tld.1\t64, r6\n\tadd\tr6, r0, stack-[16]\n\tsub.s!\t@CPI1_18[0], r6, r6\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[7], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[16], r0, r10\n\tadd\t64, r10, r7\n\tst.1\t64, r7\n\tadd\t32, r10, r9\n\tadd\t@CPI1_22[0], r0, r7\n\tst.1\tr9, r7\n\tadd\t21, r0, r7\n\tst.1\tr10, r7\n\tadd\t33, r10, r7\n\tshl.s\t96, r6, r6\n\tst.1\tr7, r6\n\tld.1\t64, r6\n\tadd\tr6, r0, stack-[14]\n\tadd\tstack-[15], r0, r6\n\tld.1\tr6, r6\n\tsub.s!\t128, r6, r7\n\tjump.lt\t@.BB1_308\n\tshr.s\t128, r6, r7\n\tsub.s!\t@CPI1_20[0], r6, r12\n\tadd.le\tr6, r0, r7\n\tsub.s!\t@CPI1_20[0], r6, r12\n\tadd\t0, r0, r12\n\tadd.gt\t16, r0, r12\n\tor\t8, r12, r13\n\tsub.s!\t@CPI1_8[0], r7, r14\n\tadd.le\tr12, r0, r13\n\tshr.s\t64, r7, r12\n\tsub.s!\t@CPI1_8[0], r7, r14\n\tadd.le\tr7, r0, r12\n\tor\t4, r13, r14\n\tsub.s!\t@CPI1_6[0], r12, r7\n\tadd.le\tr13, r0, r14\n\tshr.s\t32, r12, r13\n\tsub.s!\t@CPI1_6[0], r12, r7\n\tadd.le\tr12, r0, r13\n\tor\t2, r14, r7\n\tsub.s!\t65535, r13, r12\n\tadd.le\tr14, r0, r7\n\tshr.s\t16, r13, r12\n\tadd.le\tr13, r0, r12\n\tsub.s!\t255, r12, r12\n\tadd.gt\t1, r7, r7\n\tsub.s\t32, r0, r12\n\tadd\t33, r7, r13\n\tand\tr13, r12, r14\n\tadd\t63, r14, r13\n\tand\tr13, r12, r12\n\tadd\tstack-[14], r12, r12\n\tsub.s!\tstack-[14], r12, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI1_8[0], r12, r15\n\tjump.gt\t@.BB1_14\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r12\n\tadd\t2, r7, r12\n\tadd\tstack-[14], r0, r10\n\tst.1.inc\tr10, r12, r12\n\tand\t31, r14, stack-[15]\n\tshr.s!\t5, r14, r14\n\tjump.eq\t@.BB1_267\n\tptr.add\tr1, r2, r15\n\tadd\tr0, r0, r13\n.BB1_266:\n\tshl.s\t5, r13, r10\n\tadd\tr12, r10, r11\n\tptr.add\tr15, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r13, r13\n\tsub!\tr13, r14, r10\n\tjump.lt\t@.BB1_266\n.BB1_267:\n\tsub!\tstack-[15], r0, r10\n\tjump.eq\t@.BB1_269\n.BB1_269:\n\tadd\tstack-[14], r0, r10\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB1_484\n\tld.1\tr12, r10\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r7, r11\n\tor\tr11, r10, r10\n\tadd\t@CPI1_21[0], r10, r10\n\tst.1\tr12, r10\n\tshl.s\t3, r7, r7\n\tsub\t248, r7, r7\n\tshl\tr6, r7, r6\n\tsub.s!\t255, r7, r7\n\tadd.gt\tr0, r0, r6\n\tadd\tstack-[14], r0, r7\n\tadd\t33, r7, r7\n\tjump\t@.BB1_311\n.BB1_271:\n\tsub.s!\t@CPI1_18[0], r6, r8\n\tjump.gt\t@.BB1_14\n\tadd\t64, r6, r8\n\tst.1\t64, r8\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r8\n\tst.1.inc\tr6, r8, r8\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r7, r10\n\tadd\t@CPI1_0[0], r0, r11\n\tsub!\tr7, r0, r7\n\tadd.ne\tr10, r0, r11\n\tand\t@CPI1_19[0], r9, r7\n\tor\tr7, r11, r7\n.BB1_274:\n\tst.1\tr8, r7\n\tld.1\t64, r7\n\tadd\tr7, r0, stack-[16]\n\tadd\tstack-[9], r0, r7\n\tld.1\tr7, r7\n\tsub.s!\t128, r7, r8\n\tjump.lt\t@.BB1_293\n\tshr.s\t128, r7, r8\n\tsub.s!\t@CPI1_20[0], r7, r10\n\tadd.le\tr7, r0, r8\n\tsub.s!\t@CPI1_20[0], r7, r10\n\tadd\t0, r0, r10\n\tadd.gt\t16, r0, r10\n\tor\t8, r10, r11\n\tsub.s!\t@CPI1_8[0], r8, r12\n\tadd.le\tr10, r0, r11\n\tshr.s\t64, r8, r10\n\tsub.s!\t@CPI1_8[0], r8, r12\n\tadd.le\tr8, r0, r10\n\tor\t4, r11, r12\n\tsub.s!\t@CPI1_6[0], r10, r8\n\tadd.le\tr11, r0, r12\n\tshr.s\t32, r10, r11\n\tsub.s!\t@CPI1_6[0], r10, r8\n\tadd.le\tr10, r0, r11\n\tor\t2, r12, r8\n\tsub.s!\t65535, r11, r10\n\tadd.le\tr12, r0, r8\n\tshr.s\t16, r11, r10\n\tadd.le\tr11, r0, r10\n\tsub.s!\t255, r10, r10\n\tadd.gt\t1, r8, r8\n\tsub.s\t32, r0, r10\n\tadd\t33, r8, r11\n\tand\tr11, r10, r12\n\tadd\t63, r12, r11\n\tand\tr11, r10, r10\n\tadd\tstack-[16], r10, r10\n\tsub.s!\tstack-[16], r10, r11\n\tadd\t0, r0, r11\n\tadd.lt\t1, r0, r11\n\tsub.s!\t@CPI1_8[0], r10, r13\n\tjump.gt\t@.BB1_14\n\tand!\t1, r11, r11\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r10\n\tadd\t2, r8, r10\n\tadd\tstack-[16], r0, r9\n\tst.1.inc\tr9, r10, r10\n\tand\t31, r12, r11\n\tshr.s!\t5, r12, r12\n\tjump.eq\t@.BB1_281\n\tptr.add\tr1, r2, r13\n\tadd\tr0, r0, r14\n.BB1_280:\n\tshl.s\t5, r14, r15\n\tadd\tr10, r15, r9\n\tptr.add\tr13, r15, r15\n\tld\tr15, r15\n\tst.1\tr9, r15\n\tadd\t1, r14, r14\n\tsub!\tr14, r12, r9\n\tjump.lt\t@.BB1_280\n.BB1_281:\n\tsub!\tr11, r0, r9\n\tjump.eq\t@.BB1_283\n.BB1_283:\n\tadd\tstack-[16], r0, r9\n\tld.1\tr9, r9\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_484\n\tld.1\tr10, r9\n\tand\t@CPI1_19[0], r9, r9\n\tshl.s\t248, r8, r11\n\tor\tr11, r9, r9\n\tadd\t@CPI1_21[0], r9, r9\n\tst.1\tr10, r9\n\tshl.s\t3, r8, r8\n\tsub\t248, r8, r8\n\tshl\tr7, r8, r7\n\tsub.s!\t255, r8, r8\n\tadd.gt\tr0, r0, r7\n\tadd\tstack-[16], r0, r8\n\tadd\t33, r8, r8\n\tjump\t@.BB1_296\n.BB1_285:\n\tadd\tstack-[8], r0, r6\n\tsub.s!\t@CPI1_18[0], r6, r6\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[8], r0, r7\n\tadd\t64, r7, r6\n\tst.1\t64, r6\n\tadd!\t1, r0, r6\n\tst.1.inc\tr7, r6, r6\n\tld\tr4, r7\n\tst.1\tr6, r7\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r5, r8\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr5, r0, r5\n\tadd.ne\tr8, r0, r9\n\tand\t@CPI1_19[0], r7, r5\n\tor\tr5, r9, r5\n.BB1_288:\n\tst.1\tr6, r5\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r5\n\tld.1.inc\tr5, r5, r6\n\tand\t@CPI1_8[0], r5, r5\n\tsub.s!\t1, r5, r7\n\tjump.ne\t@.BB1_336\n\tld.1\tr6, r4\n\tsub.s\t1, r0, r5\n\tadd\t@CPI1_0[0], r0, r6\n\tsub!\tr4, r5, r5\n\tadd\tr0, r0, r5\n\tadd.gt\tr6, r0, r5\n\tand\t@CPI1_0[0], r4, r4\n\tsub.s!\t@CPI1_0[0], r4, r7\n\tadd.ge\tr0, r0, r6\n\txor\t@CPI1_0[0], r4, r4\n\tsub.s!\t@CPI1_0[0], r4, r4\n\tadd.ne\tr5, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.ne\t@.BB1_345\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tsub.s!\t@CPI1_18[0], r4, r4\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[7], r0, r5\n\tadd\t64, r5, r4\n\tst.1\t64, r4\n\tadd\t1, r0, r4\n\tst.1.inc\tr5, r4, r5\n\tadd\t@CPI1_21[0], r0, r4\n\tadd\tr5, r0, stack-[15]\n\tst.1\tr5, r4\n\tjump\t@.BB1_346\n.BB1_293:\n\tadd\tstack-[16], r0, r8\n\tsub.s!\t@CPI1_18[0], r8, r8\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[16], r0, r10\n\tadd\t64, r10, r8\n\tst.1\t64, r8\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r8\n\tst.1.inc\tr10, r8, r8\n\tld\tr9, r10\n\tst.1\tr8, r10\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r7, r9\n\tadd\t@CPI1_0[0], r0, r11\n\tsub!\tr7, r0, r7\n\tadd.ne\tr9, r0, r11\n\tand\t@CPI1_19[0], r10, r7\n\tor\tr7, r11, r7\n.BB1_296:\n\tst.1\tr8, r7\n\tld.1\t64, r7\n\tadd\tr7, r0, stack-[14]\n\tsub.s!\t@CPI1_18[0], r7, r7\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r7\n\tadd\tstack-[14], r0, r9\n\tadd\t64, r9, r8\n\tst.1\t64, r8\n\tadd\t32, r9, r10\n\tadd\t@CPI1_22[0], r0, r8\n\tst.1\tr10, r8\n\tadd\t21, r0, r8\n\tst.1\tr9, r8\n\tadd\t33, r9, r8\n\tshl.s\t96, r7, r7\n\tst.1\tr8, r7\n\tld.1\t64, r7\n\tadd\tr7, r0, stack-[13]\n\tadd\tstack-[15], r0, r7\n\tld.1\tr7, r7\n\tsub.s!\t128, r7, r8\n\tjump.lt\t@.BB1_396\n\tshr.s\t128, r7, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd.le\tr7, r0, r8\n\tsub.s!\t@CPI1_20[0], r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t16, r0, r9\n\tor\t8, r9, r11\n\tsub.s!\t@CPI1_8[0], r8, r13\n\tadd.le\tr9, r0, r11\n\tshr.s\t64, r8, r9\n\tsub.s!\t@CPI1_8[0], r8, r13\n\tadd.le\tr8, r0, r9\n\tor\t4, r11, r13\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr11, r0, r13\n\tshr.s\t32, r9, r11\n\tsub.s!\t@CPI1_6[0], r9, r8\n\tadd.le\tr9, r0, r11\n\tor\t2, r13, r8\n\tsub.s!\t65535, r11, r9\n\tadd.le\tr13, r0, r8\n\tshr.s\t16, r11, r9\n\tadd.le\tr11, r0, r9\n\tsub.s!\t255, r9, r9\n\tadd.gt\t1, r8, r8\n\tsub.s\t32, r0, r9\n\tadd\t33, r8, r11\n\tand\tr11, r9, r15\n\tadd\t63, r15, r11\n\tand\tr11, r9, r9\n\tadd\tstack-[13], r9, r11\n\tsub.s!\tstack-[13], r11, r9\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI1_8[0], r11, r9\n\tjump.gt\t@.BB1_14\n\tand!\t1, r13, r9\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r11\n\tadd\t2, r8, r9\n\tadd\tstack-[13], r0, r11\n\tst.1.inc\tr11, r9, r13\n\tand\t31, r15, stack-[15]\n\tshr.s!\t5, r15, r15\n\tjump.eq\t@.BB1_304\n\tptr.add\tr1, r2, r14\n\tadd\tr0, r0, r11\n.BB1_303:\n\tshl.s\t5, r11, r9\n\tadd\tr13, r9, r12\n\tptr.add\tr14, r9, r9\n\tld\tr9, r9\n\tst.1\tr12, r9\n\tadd\t1, r11, r11\n\tsub!\tr11, r15, r9\n\tjump.lt\t@.BB1_303\n.BB1_304:\n\tsub!\tstack-[15], r0, r9\n\tjump.eq\t@.BB1_306\n.BB1_306:\n\tadd\tstack-[13], r0, r9\n\tld.1\tr9, r9\n\tsub!\tr9, r0, r9\n\tjump.eq\t@.BB1_484\n\tld.1\tr13, r9\n\tand\t@CPI1_19[0], r9, r9\n\tshl.s\t248, r8, r11\n\tor\tr11, r9, r9\n\tadd\t@CPI1_21[0], r9, r9\n\tst.1\tr13, r9\n\tshl.s\t3, r8, r8\n\tsub\t248, r8, r8\n\tshl\tr7, r8, r7\n\tsub.s!\t255, r8, r8\n\tadd.gt\tr0, r0, r7\n\tadd\tstack-[13], r0, r8\n\tadd\t33, r8, r8\n\tjump\t@.BB1_399\n.BB1_308:\n\tadd\tstack-[14], r0, r7\n\tsub.s!\t@CPI1_18[0], r7, r7\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[14], r0, r11\n\tadd\t64, r11, r7\n\tst.1\t64, r7\n\tptr.add\tr1, r2, r10\n\tadd!\t1, r0, r7\n\tst.1.inc\tr11, r7, r7\n\tld\tr10, r12\n\tst.1\tr7, r12\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r10\n\tadd\t@CPI1_0[0], r0, r11\n\tsub!\tr6, r0, r6\n\tadd.ne\tr10, r0, r11\n\tand\t@CPI1_19[0], r12, r6\n\tor\tr6, r11, r6\n.BB1_311:\n\tst.1\tr7, r6\n\tld.1\t64, r7\n\tadd\t32, r7, r6\n\tld.1.inc\tr3, r3, r12\n\tsub!\tr3, r0, r10\n\tjump.eq\t@.BB1_315\n\tadd\tr0, r0, r13\n.BB1_314:\n\tadd\tr13, r6, r10\n\tadd\tr12, r13, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r13, r13\n\tsub!\tr13, r3, r10\n\tjump.lt\t@.BB1_314\n.BB1_315:\n\tadd\tr3, r6, r10\n\tst.1\tr10, r0\n\tadd\tr3, r7, r3\n\tadd\t32, r3, r12\n\tld.1.inc\tr4, r4, r13\n\tsub!\tr4, r0, r10\n\tjump.eq\t@.BB1_318\n\tadd\tr0, r0, r14\n.BB1_317:\n\tadd\tr14, r12, r10\n\tadd\tr13, r14, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r14, r14\n\tsub!\tr14, r4, r10\n\tjump.lt\t@.BB1_317\n.BB1_318:\n\tadd\tr4, r12, r10\n\tst.1\tr10, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r12\n\tld.1.inc\tr5, r4, r5\n\tsub!\tr4, r0, r10\n\tjump.eq\t@.BB1_321\n\tadd\tr0, r0, r13\n.BB1_320:\n\tadd\tr13, r12, r10\n\tadd\tr5, r13, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r13, r13\n\tsub!\tr13, r4, r10\n\tjump.lt\t@.BB1_320\n.BB1_321:\n\tadd\tr4, r12, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tld.1.inc\tr8, r4, r8\n\tsub!\tr4, r0, r10\n\tjump.eq\t@.BB1_324\n\tadd\tr0, r0, r12\n.BB1_323:\n\tadd\tr12, r5, r10\n\tadd\tr8, r12, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r12, r12\n\tsub!\tr12, r4, r10\n\tjump.lt\t@.BB1_323\n.BB1_324:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tadd\tstack-[16], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB1_327\n\tadd\tr0, r0, r8\n.BB1_326:\n\tadd\tr8, r5, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r10\n\tjump.lt\t@.BB1_326\n.BB1_327:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tadd\tstack-[14], r0, r4\n\tld.1.inc\tr4, r4, r8\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_330\n\tadd\tr0, r0, r9\n.BB1_329:\n\tadd\tr9, r5, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r4, r10\n\tjump.lt\t@.BB1_329\n.BB1_330:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tsub\tr3, r7, r3\n\tadd\tr4, r3, r3\n\tst.1\tr7, r3\n\tadd\t63, r3, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r5\n\tadd\tr5, r7, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI1_8[0], r4, r8\n\tjump.gt\t@.BB1_14\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r4\n\tadd\tstack-[6], r0, r5\n\tld.1\tr5, r5\n\tld.1.inc\tr5, r8, r5\n\tand\t@CPI1_8[0], r8, r8\n\tsub.s!\t1, r8, r9\n\tjump.ne\t@.BB1_427\n\tld.1\tr5, r5\n\tsub.s\t1, r0, r8\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr5, r8, r8\n\tadd\tr0, r0, r8\n\tadd.gt\tr9, r0, r8\n\tand\t@CPI1_0[0], r5, r5\n\tsub.s!\t@CPI1_0[0], r5, r10\n\tadd.ge\tr0, r0, r9\n\txor\t@CPI1_0[0], r5, r5\n\tsub.s!\t@CPI1_0[0], r5, r5\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r5\n\tjump.ne\t@.BB1_440\n\tsub.s!\t@CPI1_18[0], r4, r5\n\tjump.gt\t@.BB1_14\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tadd\t1, r0, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t@CPI1_21[0], r0, r8\n\tjump\t@.BB1_444\n.BB1_336:\n\tld.1\t64, r6\n\tadd\tr6, r0, stack-[7]\n\tsub.s!\t56, r5, r6\n\tjump.lt\t@.BB1_352\n\tshr.s\t32, r5, r7\n\tsub.s!\t@CPI1_6[0], r5, r6\n\tadd.le\tr5, r0, r7\n\tsub.s!\t@CPI1_6[0], r5, r6\n\tadd\t0, r0, r8\n\tadd.gt\t4, r0, r8\n\tor\t2, r8, r6\n\tsub.s!\t65535, r7, r9\n\tadd.le\tr8, r0, r6\n\tshr.s\t16, r7, r8\n\tadd.le\tr7, r0, r8\n\tsub.s!\t255, r8, r7\n\tadd\t0, r0, r7\n\tadd.gt\t1, r0, r7\n\tadd\tstack-[7], r0, r8\n\tsub.s!\t@CPI1_18[0], r8, r8\n\tjump.gt\t@.BB1_14\n\tor\tr6, r7, r6\n\tadd\tstack-[7], r0, r8\n\tadd\t64, r8, r7\n\tst.1\t64, r7\n\tadd!\t2, r6, r7\n\tst.1.inc\tr8, r7, r7\n\tld\tr4, r4\n\tadd\tr7, r0, stack-[15]\n\tst.1\tr7, r4\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r4, r4\n\tshl.s\t248, r6, r7\n\tor\tr7, r4, r4\n\tor\t@CPI1_23[0], r4, r4\n\tadd\tstack-[15], r0, r7\n\tst.1\tr7, r4\n\tshl.s\t3, r6, r4\n\txor\t248, r4, r4\n\tshl\tr5, r4, r4\n\tadd\tstack-[7], r0, r5\n\tadd\t33, r5, r5\n\tst.1\tr5, r4\n\tjump\t@.BB1_346\n.BB1_340:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_343\n\tadd\tr0, r0, r6\n.BB1_342:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_342\n.BB1_343:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n\tjump\t@.BB1_59\n.BB1_345:\n\tadd\t96, r0, stack-[7]\n\tadd\t128, r0, stack-[15]\n.BB1_346:\n\tld.1\tr3, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB1_355\n\tadd\t96, r0, r4\n\tadd\t128, r0, r3\n.BB1_348:\n\tadd\tstack-[11], r0, r5\n\tld.1.inc\tr5, r5, r7\n\tadd\tstack-[13], r0, r6\n\tld.1\tr6, r6\n\tadd\tr6, r5, r5\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tadd\tr5, r6, r6\n\tadd\tstack-[8], r0, r5\n\tld.1.inc\tr5, r8, r5\n\tadd\tr6, r8, r6\n\tadd\tstack-[7], r0, r8\n\tld.1\tr8, r8\n\tadd\tr6, r8, r6\n\tadd\tstack-[6], r0, r8\n\tld.1\tr8, r8\n\tld.1\tr8, r8\n\tadd\tr6, r8, r6\n\tld.1\tr4, r8\n\tadd\tr6, r8, r6\n\tld.1\t64, r8\n\tand\t@CPI1_8[0], r6, r6\n\tsub.s!\t56, r6, r9\n\tjump.lt\t@.BB1_366\n\tshr.s\t32, r6, r10\n\tsub.s!\t@CPI1_6[0], r6, r9\n\tadd.le\tr6, r0, r10\n\tsub.s!\t@CPI1_6[0], r6, r9\n\tadd\t0, r0, r11\n\tadd.gt\t4, r0, r11\n\tor\t2, r11, r9\n\tsub.s!\t65535, r10, r12\n\tadd.le\tr11, r0, r9\n\tshr.s\t16, r10, r11\n\tadd.le\tr10, r0, r11\n\tsub.s!\t255, r11, r10\n\tadd\t0, r0, r10\n\tadd.gt\t1, r0, r10\n\tsub.s!\t@CPI1_18[0], r8, r11\n\tjump.gt\t@.BB1_14\n\tor\tr9, r10, r10\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tptr.add\tr1, r2, r1\n\tadd!\t2, r10, r2\n\tst.1.inc\tr8, r2, r9\n\tld\tr1, r1\n\tst.1\tr9, r1\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r1, r1\n\tshl.s\t248, r10, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_25[0], r1, r1\n\tst.1\tr9, r1\n\tshl.s\t3, r10, r1\n\txor\t248, r1, r1\n\tshl\tr6, r1, r1\n\tadd\t33, r8, r2\n\tst.1\tr2, r1\n\tjump\t@.BB1_369\n.BB1_352:\n\tadd\tstack-[7], r0, r6\n\tsub.s!\t@CPI1_18[0], r6, r6\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[7], r0, r7\n\tadd\t64, r7, r6\n\tst.1\t64, r6\n\tadd!\t1, r0, r6\n\tst.1.inc\tr7, r6, r6\n\tld\tr4, r4\n\tadd\tr6, r0, stack-[15]\n\tst.1\tr6, r4\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r5, r5\n\tand\t@CPI1_19[0], r4, r4\n\tor\tr4, r5, r4\n\tor\t@CPI1_0[0], r4, r4\n\tadd\tstack-[15], r0, r5\n\tst.1\tr5, r4\n\tjump\t@.BB1_346\n.BB1_355:\n\tadd\t@CPI1_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_17[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tld.1\t64, r5\n\tld\tr1, r3\n\tsub.s!\t128, r3, r1\n\tjump.lt\t@.BB1_431\n\tshr.s\t128, r3, r1\n\tsub.s!\t@CPI1_20[0], r3, r2\n\tadd.le\tr3, r0, r1\n\tsub.s!\t@CPI1_20[0], r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t16, r0, r2\n\tor\t8, r2, r4\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr2, r0, r4\n\tshr.s\t64, r1, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tadd.le\tr1, r0, r2\n\tor\t4, r4, r1\n\tsub.s!\t@CPI1_6[0], r2, r6\n\tadd.le\tr4, r0, r1\n\tshr.s\t32, r2, r6\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.le\tr2, r0, r6\n\tor\t2, r1, r4\n\tsub.s!\t65535, r6, r2\n\tadd.le\tr1, r0, r4\n\tshr.s\t16, r6, r1\n\tadd.le\tr6, r0, r1\n\tsub.s!\t255, r1, r1\n\tadd.gt\t1, r4, r4\n\tadd\t33, r4, r1\n\tand\tstack-[9], r1, r8\n\tadd\t63, r8, r1\n\tand\tstack-[9], r1, r1\n\tadd\tr5, r1, r1\n\tsub!\tr1, r5, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r6\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t2, r4, r1\n\tst.1.inc\tr5, r1, r6\n\tand\t31, r8, r7\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tshr.s!\t5, r8, r8\n\tjump.eq\t@.BB1_362\n\tptr.add\tr1, r2, r9\n\tadd\tr0, r0, r10\n.BB1_361:\n\tshl.s\t5, r10, r11\n\tadd\tr6, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_361\n.BB1_362:\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_364\n.BB1_364:\n\tld.1\tr5, r7\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB1_484\n\tld.1\tr6, r7\n\tand\t@CPI1_19[0], r7, r7\n\tshl.s\t248, r4, r8\n\tor\tr8, r7, r7\n\tadd\t@CPI1_21[0], r7, r7\n\tst.1\tr6, r7\n\tshl.s\t3, r4, r4\n\tsub\t248, r4, r4\n\tshl\tr3, r4, r3\n\tsub.s!\t255, r4, r4\n\tadd.gt\tr0, r0, r3\n\tadd\t33, r5, r4\n\tst.1\tr4, r3\n\tjump\t@.BB1_434\n.BB1_366:\n\tsub.s!\t@CPI1_18[0], r8, r9\n\tjump.gt\t@.BB1_14\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tptr.add\tr1, r2, r1\n\tadd!\t1, r0, r2\n\tst.1.inc\tr8, r2, r9\n\tld\tr1, r1\n\tst.1\tr9, r1\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r1, r1\n\tshl.s\t248, r6, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI1_24[0], r1, r1\n\tst.1\tr9, r1\n.BB1_369:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r6\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB1_372\n\tadd\tr0, r0, r10\n.BB1_371:\n\tadd\tr10, r2, r11\n\tadd\tr10, r9, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_371\n.BB1_372:\n\tadd\tr8, r2, r9\n\tst.1\tr9, r0\n\tadd\tr8, r1, r8\n\tadd\t32, r8, r10\n\tadd\tstack-[11], r0, r9\n\tld.1\tr9, r9\n\tsub!\tr9, r0, r11\n\tjump.eq\t@.BB1_375\n\tadd\tr0, r0, r11\n.BB1_374:\n\tadd\tr11, r10, r12\n\tadd\tr7, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB1_374\n.BB1_375:\n\tadd\tr9, r10, r7\n\tst.1\tr7, r0\n\tadd\tr9, r8, r7\n\tadd\t32, r7, r9\n\tadd\tstack-[13], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB1_378\n\tadd\tr0, r0, r10\n.BB1_377:\n\tadd\tr10, r9, r11\n\tadd\tstack-[16], r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_377\n.BB1_378:\n\tadd\tr8, r9, r9\n\tst.1\tr9, r0\n\tadd\tr8, r7, r7\n\tadd\t32, r7, r9\n\tadd\tstack-[10], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB1_381\n\tadd\tr0, r0, r10\n.BB1_380:\n\tadd\tr10, r9, r11\n\tadd\tstack-[14], r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_380\n.BB1_381:\n\tadd\tr8, r9, r9\n\tst.1\tr9, r0\n\tadd\tr8, r7, r7\n\tadd\t32, r7, r9\n\tadd\tstack-[8], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB1_384\n\tadd\tr0, r0, r10\n.BB1_383:\n\tadd\tr10, r9, r11\n\tadd\tr5, r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r8, r11\n\tjump.lt\t@.BB1_383\n.BB1_384:\n\tadd\tr8, r9, r5\n\tst.1\tr5, r0\n\tadd\tr8, r7, r5\n\tadd\t32, r5, r8\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r7\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB1_387\n\tadd\tr0, r0, r9\n.BB1_386:\n\tadd\tr9, r8, r10\n\tadd\tstack-[15], r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB1_386\n.BB1_387:\n\tadd\tr7, r8, r8\n\tst.1\tr8, r0\n\tadd\tr7, r5, r5\n\tadd\t32, r5, r7\n\tld.1.inc\tr6, r6, r8\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB1_390\n\tadd\tr0, r0, r9\n.BB1_389:\n\tadd\tr9, r7, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB1_389\n.BB1_390:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r5\n\tadd\t32, r5, r6\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB1_393\n\tadd\tr0, r0, r7\n.BB1_392:\n\tadd\tr7, r6, r8\n\tadd\tr3, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB1_392\n.BB1_393:\n\tadd\tr4, r6, r3\n\tst.1\tr3, r0\n\tsub\tr5, r1, r3\n\tadd\tr4, r3, r3\n\tst.1\tr1, r3\n\tadd\t63, r3, r3\n\tand\tstack-[9], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_8[0], r3, r5\n\tjump.gt\t@.BB1_14\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r3\n\tadd\t@CPI1_6[0], r0, r3\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_6[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB1_83\n.BB1_396:\n\tadd\tstack-[13], r0, r8\n\tsub.s!\t@CPI1_18[0], r8, r8\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[13], r0, r11\n\tadd\t64, r11, r8\n\tst.1\t64, r8\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r8\n\tst.1.inc\tr11, r8, r8\n\tld\tr9, r11\n\tst.1\tr8, r11\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r7, r9\n\tadd\t@CPI1_0[0], r0, r12\n\tsub!\tr7, r0, r7\n\tadd.ne\tr9, r0, r12\n\tand\t@CPI1_19[0], r11, r7\n\tor\tr7, r12, r7\n.BB1_399:\n\tst.1\tr8, r7\n\tld.1\t64, r8\n\tadd\t32, r8, r7\n\tld.1.inc\tr3, r3, r13\n\tsub!\tr3, r0, r9\n\tjump.eq\t@.BB1_403\n\tadd\tr0, r0, r11\n.BB1_402:\n\tadd\tr11, r7, r9\n\tadd\tr13, r11, r12\n\tld.1\tr12, r12\n\tst.1\tr9, r12\n\tadd\t32, r11, r11\n\tsub!\tr11, r3, r9\n\tjump.lt\t@.BB1_402\n.BB1_403:\n\tadd\tr3, r7, r9\n\tst.1\tr9, r0\n\tadd\tr3, r8, r3\n\tadd\t32, r3, r13\n\tld.1.inc\tr4, r4, r14\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_406\n\tadd\tr0, r0, r11\n.BB1_405:\n\tadd\tr11, r13, r9\n\tadd\tr14, r11, r12\n\tld.1\tr12, r12\n\tst.1\tr9, r12\n\tadd\t32, r11, r11\n\tsub!\tr11, r4, r9\n\tjump.lt\t@.BB1_405\n.BB1_406:\n\tadd\tr4, r13, r9\n\tst.1\tr9, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r13\n\tld.1.inc\tr5, r4, r5\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_409\n\tadd\tr0, r0, r11\n.BB1_408:\n\tadd\tr11, r13, r9\n\tadd\tr5, r11, r12\n\tld.1\tr12, r12\n\tst.1\tr9, r12\n\tadd\t32, r11, r11\n\tsub!\tr11, r4, r9\n\tjump.lt\t@.BB1_408\n.BB1_409:\n\tadd\tr4, r13, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tld.1.inc\tr6, r4, r6\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_412\n\tadd\tr0, r0, r11\n.BB1_411:\n\tadd\tr11, r5, r9\n\tadd\tr6, r11, r12\n\tld.1\tr12, r12\n\tst.1\tr9, r12\n\tadd\t32, r11, r11\n\tsub!\tr11, r4, r9\n\tjump.lt\t@.BB1_411\n.BB1_412:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tadd\tstack-[16], r0, r4\n\tld.1.inc\tr4, r4, r6\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_415\n\tadd\tr0, r0, r9\n.BB1_414:\n\tadd\tr9, r5, r11\n\tadd\tr6, r9, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r9, r9\n\tsub!\tr9, r4, r11\n\tjump.lt\t@.BB1_414\n.BB1_415:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tadd\tstack-[14], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_418\n\tadd\tr0, r0, r6\n.BB1_417:\n\tadd\tr6, r5, r9\n\tadd\tr6, r10, r11\n\tld.1\tr11, r11\n\tst.1\tr9, r11\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r9\n\tjump.lt\t@.BB1_417\n.BB1_418:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tadd\tr4, r3, r3\n\tadd\t32, r3, r5\n\tadd\tstack-[13], r0, r4\n\tld.1.inc\tr4, r4, r6\n\tsub!\tr4, r0, r9\n\tjump.eq\t@.BB1_421\n\tadd\tr0, r0, r9\n.BB1_420:\n\tadd\tr9, r5, r10\n\tadd\tr6, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r4, r10\n\tjump.lt\t@.BB1_420\n.BB1_421:\n\tadd\tr4, r5, r5\n\tst.1\tr5, r0\n\tsub\tr3, r8, r3\n\tadd\tr4, r3, r3\n\tst.1\tr8, r3\n\tadd\t63, r3, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r4\n\tadd\tr4, r8, r5\n\tsub!\tr5, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_8[0], r5, r6\n\tjump.gt\t@.BB1_14\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r5\n\tadd\tstack-[6], r0, r4\n\tld.1\tr4, r4\n\tld.1.inc\tr4, r6, r4\n\tand\t@CPI1_8[0], r6, r6\n\tsub.s!\t1, r6, r9\n\tjump.ne\t@.BB1_451\n\tld.1\tr4, r4\n\tsub.s\t1, r0, r6\n\tadd\t@CPI1_0[0], r0, r9\n\tsub!\tr4, r6, r6\n\tadd\tr0, r0, r6\n\tadd.gt\tr9, r0, r6\n\tand\t@CPI1_0[0], r4, r4\n\tsub.s!\t@CPI1_0[0], r4, r10\n\tadd.ge\tr0, r0, r9\n\txor\t@CPI1_0[0], r4, r4\n\tsub.s!\t@CPI1_0[0], r4, r4\n\tadd.ne\tr6, r0, r9\n\tsub!\tr9, r0, r4\n\tjump.ne\t@.BB1_455\n\tsub.s!\t@CPI1_18[0], r5, r4\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r4\n\tst.1\t64, r4\n\tadd\t1, r0, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t@CPI1_21[0], r0, r6\n\tjump\t@.BB1_480\n.BB1_427:\n\tsub.s!\t56, r8, r5\n\tjump.lt\t@.BB1_441\n\tshr.s\t32, r8, r9\n\tsub.s!\t@CPI1_6[0], r8, r5\n\tadd.le\tr8, r0, r9\n\tsub.s!\t@CPI1_6[0], r8, r5\n\tadd\t0, r0, r10\n\tadd.gt\t4, r0, r10\n\tor\t2, r10, r5\n\tsub.s!\t65535, r9, r11\n\tadd.le\tr10, r0, r5\n\tshr.s\t16, r9, r10\n\tadd.le\tr9, r0, r10\n\tsub.s!\t255, r10, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\tsub.s!\t@CPI1_18[0], r4, r10\n\tjump.gt\t@.BB1_14\n\tor\tr5, r9, r9\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tptr.add\tr1, r2, r10\n\tadd!\t2, r9, r5\n\tst.1.inc\tr4, r5, r5\n\tld\tr10, r10\n\tst.1\tr5, r10\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r9, r11\n\tor\tr11, r10, r10\n\tor\t@CPI1_23[0], r10, r10\n\tst.1\tr5, r10\n\tshl.s\t3, r9, r9\n\txor\t248, r9, r9\n\tshl\tr8, r9, r8\n\tadd\t33, r4, r9\n\tst.1\tr9, r8\n\tjump\t@.BB1_445\n.BB1_431:\n\tsub.s!\t@CPI1_18[0], r5, r1\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r1\n\tst.1\t64, r1\n\tadd!\t1, r0, r1\n\tst.1.inc\tr5, r1, r6\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r4\n\tld\tr4, r4\n\tst.1\tr6, r4\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r3, r7\n\tadd\t@CPI1_0[0], r0, r8\n\tsub!\tr3, r0, r3\n\tadd.ne\tr7, r0, r8\n\tand\t@CPI1_19[0], r4, r3\n\tor\tr3, r8, r3\n\tst.1\tr6, r3\n.BB1_434:\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_437\n\tadd\tr0, r0, r7\n.BB1_436:\n\tadd\tr7, r3, r8\n\tadd\tr7, r6, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_436\n.BB1_437:\n\tadd\tr5, r3, r6\n\tadd\t@CPI1_35[0], r0, r7\n\tst.1\tr6, r7\n\tadd\t2, r5, r6\n\tst.1\tr4, r6\n\tadd\t65, r5, r5\n\tand\tstack-[9], r5, r6\n\tadd\tr6, r4, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI1_8[0], r5, r7\n\tjump.gt\t@.BB1_14\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB1_14\n\tst.1\t64, r5\n\tjump\t@.BB1_348\n.BB1_440:\n\tadd\t96, r0, r4\n\tadd\t128, r0, r5\n\tjump\t@.BB1_445\n.BB1_441:\n\tsub.s!\t@CPI1_18[0], r4, r5\n\tjump.gt\t@.BB1_14\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r5\n\tst.1.inc\tr4, r5, r5\n\tld\tr9, r9\n\tst.1\tr5, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r8, r8\n\tand\t@CPI1_19[0], r9, r9\n\tor\tr9, r8, r8\n\tor\t@CPI1_0[0], r8, r8\n.BB1_444:\n\tst.1\tr5, r8\n.BB1_445:\n\tld.1\t64, r8\n\tsub.s!\t@CPI1_18[0], r8, r9\n\tjump.gt\t@.BB1_14\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tptr.add\tr1, r2, r2\n\tadd!\t1, r0, r13\n\tst.1.inc\tr8, r13, r1\n\tld\tr2, r10\n\tst.1\tr1, r10\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r10, r2\n\tor\t@CPI1_24[0], r2, r9\n\tst.1\tr1, r9\n\tld.1\tr7, r9\n\tld.1\tr4, r11\n\tadd\tr11, r9, r9\n\tadd\tstack-[6], r0, r11\n\tld.1\tr11, r11\n\tld.1\tr11, r11\n\tadd\tr9, r11, r9\n\tld.1\tr8, r11\n\tadd\tr9, r11, r9\n\tld.1\t64, r11\n\tand\t@CPI1_8[0], r9, r9\n\tsub.s!\t56, r9, r12\n\tjump.lt\t@.BB1_456\n\tshr.s\t32, r9, r13\n\tsub.s!\t@CPI1_6[0], r9, r12\n\tadd.le\tr9, r0, r13\n\tsub.s!\t@CPI1_6[0], r9, r12\n\tadd\t0, r0, r14\n\tadd.gt\t4, r0, r14\n\tor\t2, r14, r12\n\tsub.s!\t65535, r13, r15\n\tadd.le\tr14, r0, r12\n\tshr.s\t16, r13, r14\n\tadd.le\tr13, r0, r14\n\tsub.s!\t255, r14, r13\n\tadd\t0, r0, r13\n\tadd.gt\t1, r0, r13\n\tsub.s!\t@CPI1_18[0], r11, r14\n\tjump.gt\t@.BB1_14\n\tor\tr12, r13, r13\n\tadd\t64, r11, r12\n\tst.1\t64, r12\n\tadd\t32, r11, r12\n\tst.1\tr12, r10\n\tadd!\t2, r13, r10\n\tst.1\tr11, r10\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r13, r10\n\tor\tr10, r2, r2\n\tor\t@CPI1_25[0], r2, r2\n\tst.1\tr12, r2\n\tshl.s\t3, r13, r2\n\txor\t248, r2, r2\n\tshl\tr9, r2, r2\n\tadd\t33, r11, r9\n\tst.1\tr9, r2\n\tjump\t@.BB1_459\n.BB1_451:\n\tsub.s!\t56, r6, r4\n\tjump.lt\t@.BB1_477\n\tshr.s\t32, r6, r9\n\tsub.s!\t@CPI1_6[0], r6, r4\n\tadd.le\tr6, r0, r9\n\tsub.s!\t@CPI1_6[0], r6, r4\n\tadd\t0, r0, r10\n\tadd.gt\t4, r0, r10\n\tor\t2, r10, r4\n\tsub.s!\t65535, r9, r11\n\tadd.le\tr10, r0, r4\n\tshr.s\t16, r9, r10\n\tadd.le\tr9, r0, r10\n\tsub.s!\t255, r10, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\tsub.s!\t@CPI1_18[0], r5, r10\n\tjump.gt\t@.BB1_14\n\tor\tr4, r9, r9\n\tadd\t64, r5, r4\n\tst.1\t64, r4\n\tptr.add\tr1, r2, r10\n\tadd!\t2, r9, r4\n\tst.1.inc\tr5, r4, r4\n\tld\tr10, r10\n\tst.1\tr4, r10\n\tjump.eq\t@.BB1_484\n\tand\t@CPI1_19[0], r10, r10\n\tshl.s\t248, r9, r11\n\tor\tr11, r10, r10\n\tor\t@CPI1_23[0], r10, r10\n\tst.1\tr4, r10\n\tshl.s\t3, r9, r9\n\txor\t248, r9, r9\n\tshl\tr6, r9, r6\n\tadd\t33, r5, r9\n\tst.1\tr9, r6\n\tjump\t@.BB1_481\n.BB1_455:\n\tadd\t128, r0, r4\n\tjump\t@.BB1_482\n.BB1_456:\n\tsub.s!\t@CPI1_18[0], r11, r12\n\tjump.gt\t@.BB1_14\n\tadd\t64, r11, r12\n\tst.1\t64, r12\n\tadd\t32, r11, r12\n\tst.1\tr12, r10\n\tst.1\tr11, r13\n\tsub!\tr13, r0, r10\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r9, r9\n\tor\tr9, r2, r2\n\tadd\t@CPI1_24[0], r2, r2\n\tst.1\tr12, r2\n.BB1_459:\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tld.1\t64, r2\n\tadd\t32, r2, r9\n\tadd\t@CPI1_26[0], r0, r13\n\tst.1\tr9, r13\n\tadd\t33, r2, r13\n\tld.1\tr11, r11\n\tsub!\tr11, r0, r14\n\tjump.eq\t@.BB1_462\n\tadd\tr0, r0, r14\n.BB1_461:\n\tadd\tr14, r13, r15\n\tadd\tr14, r12, r10\n\tld.1\tr10, r10\n\tst.1\tr15, r10\n\tadd\t32, r14, r14\n\tsub!\tr14, r11, r10\n\tjump.lt\t@.BB1_461\n.BB1_462:\n\tadd\tr11, r13, r10\n\tst.1\tr10, r0\n\tadd\tr11, r2, r11\n\tadd\t33, r11, r12\n\tld.1\tr7, r7\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB1_465\n\tadd\tr0, r0, r13\n.BB1_464:\n\tadd\tr13, r12, r10\n\tadd\tr13, r6, r14\n\tld.1\tr14, r14\n\tst.1\tr10, r14\n\tadd\t32, r13, r13\n\tsub!\tr13, r7, r10\n\tjump.lt\t@.BB1_464\n.BB1_465:\n\tadd\tr7, r12, r6\n\tst.1\tr6, r0\n\tadd\tr7, r11, r6\n\tadd\t33, r6, r7\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r10\n\tjump.eq\t@.BB1_468\n\tadd\tr0, r0, r11\n.BB1_467:\n\tadd\tr11, r7, r10\n\tadd\tr5, r11, r12\n\tld.1\tr12, r12\n\tst.1\tr10, r12\n\tadd\t32, r11, r11\n\tsub!\tr11, r4, r10\n\tjump.lt\t@.BB1_467\n.BB1_468:\n\tadd\tr4, r7, r5\n\tst.1\tr5, r0\n\tadd\tr4, r6, r4\n\tadd\t33, r4, r6\n\tadd\tstack-[16], r0, r5\n\tld.1.inc\tr5, r5, r7\n\tsub!\tr5, r0, r10\n\tjump.eq\t@.BB1_471\n\tadd\tr0, r0, r10\n.BB1_470:\n\tadd\tr10, r6, r11\n\tadd\tr7, r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r5, r11\n\tjump.lt\t@.BB1_470\n.BB1_471:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\tr5, r4, r4\n\tadd\t33, r4, r6\n\tld.1\tr8, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_474\n\tadd\tr0, r0, r7\n.BB1_473:\n\tadd\tr7, r6, r8\n\tadd\tr7, r1, r10\n\tld.1\tr10, r10\n\tst.1\tr8, r10\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_473\n.BB1_474:\n\tadd\tr5, r6, r1\n\tst.1\tr1, r0\n\tsub\tr4, r2, r1\n\tadd\tr5, r1, r1\n\tadd\t1, r1, r4\n\tst.1\tr2, r4\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tadd\t64, r1, r1\n\tsub.s!\t@CPI1_8[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tsub.s!\t@CPI1_6[0], r9, r3\n\tadd.ge\tr1, r0, r9\n\tshl.s\t64, r9, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tjump\t@.BB1_526\n.BB1_477:\n\tsub.s!\t@CPI1_18[0], r5, r4\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r4\n\tst.1\t64, r4\n\tptr.add\tr1, r2, r9\n\tadd!\t1, r0, r4\n\tst.1.inc\tr5, r4, r4\n\tld\tr9, r9\n\tst.1\tr4, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r6\n\tand\t@CPI1_19[0], r9, r9\n\tor\tr9, r6, r6\n\tor\t@CPI1_0[0], r6, r6\n.BB1_480:\n\tst.1\tr4, r6\n.BB1_481:\n\tadd\tr5, r0, stack-[11]\n.BB1_482:\n\tld.1\t64, r5\n\tsub.s!\t@CPI1_18[0], r5, r6\n\tjump.gt\t@.BB1_14\n\tadd\t64, r5, r6\n\tst.1\t64, r6\n\tptr.add\tr1, r2, r2\n\tadd!\t1, r0, r12\n\tst.1.inc\tr5, r12, r1\n\tld\tr2, r9\n\tst.1\tr1, r9\n\tjump.ne\t@.BB1_487\n.BB1_484:\n\tadd\t@CPI1_48[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_485:\n\tld.1\t64, r5\n\tadd\t@CPI1_41[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r2\n\tadd\t32769, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_6[0], r5, r3\n\tadd\tr5, r0, stack-[16]\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, stack-[13]\n\tshl.s\t192, r2, r1\n\tor\tstack-[13], r1, r1\n\tadd\tstack-[19], r0, stack-[15]\n\tsub!\tstack-[19], r0, r2\n\tjump.ne\t@.BB1_491\n\tor\t@CPI1_12[0], r1, r1\n\tadd\t@CPI1_13[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tjump\t@.BB1_496\n.BB1_487:\n\tand\t@CPI1_19[0], r9, r2\n\tor\t@CPI1_24[0], r2, r6\n\tst.1\tr1, r6\n\tld.1\tr8, r6\n\tadd\tstack-[11], r0, r10\n\tld.1\tr10, r10\n\tadd\tr10, r6, r6\n\tadd\tstack-[6], r0, r10\n\tld.1\tr10, r10\n\tld.1\tr10, r10\n\tadd\tr6, r10, r6\n\tld.1\tr5, r10\n\tadd\tr6, r10, r6\n\tld.1\t64, r10\n\tand\t@CPI1_8[0], r6, r6\n\tsub.s!\t56, r6, r11\n\tjump.lt\t@.BB1_505\n\tshr.s\t32, r6, r12\n\tsub.s!\t@CPI1_6[0], r6, r11\n\tadd.le\tr6, r0, r12\n\tsub.s!\t@CPI1_6[0], r6, r11\n\tadd\t0, r0, r13\n\tadd.gt\t4, r0, r13\n\tor\t2, r13, r11\n\tsub.s!\t65535, r12, r14\n\tadd.le\tr13, r0, r11\n\tshr.s\t16, r12, r13\n\tadd.le\tr12, r0, r13\n\tsub.s!\t255, r13, r12\n\tadd\t0, r0, r12\n\tadd.gt\t1, r0, r12\n\tsub.s!\t@CPI1_18[0], r10, r13\n\tjump.gt\t@.BB1_14\n\tor\tr11, r12, r12\n\tadd\t64, r10, r11\n\tst.1\t64, r11\n\tadd\t32, r10, r11\n\tst.1\tr11, r9\n\tadd!\t2, r12, r9\n\tst.1\tr10, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r12, r9\n\tor\tr9, r2, r2\n\tor\t@CPI1_25[0], r2, r2\n\tst.1\tr11, r2\n\tshl.s\t3, r12, r2\n\txor\t248, r2, r2\n\tshl\tr6, r2, r2\n\tadd\t33, r10, r6\n\tst.1\tr6, r2\n\tjump\t@.BB1_508\n.BB1_491:\n\tor\t@CPI1_42[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\t@CPI1_13[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tsub.s!\tstack-[15], r3, r4\n\tadd\tstack-[15], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_494\n\tadd\tr0, r0, r6\n.BB1_493:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[16], r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_493\n.BB1_494:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_496\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[16], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_496:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_500\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[16], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI1_43[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, stack-[17]\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @abi_encode_bytes32_bytes32_struct_Transaction, @DEFAULT_UNWIND\n\tcontext.gas_left\tr2\n\tadd\tstack-[11], r0, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI1_3[0], r3, r4\n\tsub.s!\t4, r4, r3\n\tjump.ne\t@.BB1_527\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB1_537\n.BB1_500:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_503\n\tadd\tr0, r0, r6\n.BB1_502:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_502\n.BB1_503:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n\tjump\t@.BB1_59\n.BB1_505:\n\tsub.s!\t@CPI1_18[0], r10, r11\n\tjump.gt\t@.BB1_14\n\tadd\t64, r10, r11\n\tst.1\t64, r11\n\tadd\t32, r10, r11\n\tst.1\tr11, r9\n\tst.1\tr10, r12\n\tsub!\tr12, r0, r9\n\tjump.eq\t@.BB1_484\n\tshl.s\t248, r6, r6\n\tor\tr6, r2, r2\n\tadd\t@CPI1_24[0], r2, r2\n\tst.1\tr11, r2\n.BB1_508:\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r9\n\tld.1\t64, r2\n\tadd\t32, r2, r6\n\tadd\t@CPI1_27[0], r0, r12\n\tst.1\tr6, r12\n\tadd\t33, r2, r12\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r13\n\tjump.eq\t@.BB1_511\n\tadd\tr0, r0, r13\n.BB1_510:\n\tadd\tr13, r12, r14\n\tadd\tr13, r11, r15\n\tld.1\tr15, r15\n\tst.1\tr14, r15\n\tadd\t32, r13, r13\n\tsub!\tr13, r10, r14\n\tjump.lt\t@.BB1_510\n.BB1_511:\n\tadd\tr10, r12, r11\n\tst.1\tr11, r0\n\tadd\tr10, r2, r10\n\tadd\t33, r10, r11\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r12\n\tjump.eq\t@.BB1_514\n\tadd\tr0, r0, r12\n.BB1_513:\n\tadd\tr12, r11, r13\n\tadd\tr12, r7, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r8, r13\n\tjump.lt\t@.BB1_513\n.BB1_514:\n\tadd\tr8, r11, r7\n\tst.1\tr7, r0\n\tadd\tr8, r10, r7\n\tadd\t33, r7, r10\n\tadd\tstack-[11], r0, r8\n\tld.1\tr8, r8\n\tsub!\tr8, r0, r11\n\tjump.eq\t@.BB1_517\n\tadd\tr0, r0, r11\n.BB1_516:\n\tadd\tr11, r10, r12\n\tadd\tr4, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r8, r12\n\tjump.lt\t@.BB1_516\n.BB1_517:\n\tadd\tr8, r10, r4\n\tst.1\tr4, r0\n\tadd\tr8, r7, r4\n\tadd\t33, r4, r8\n\tld.1.inc\tr9, r7, r9\n\tsub!\tr7, r0, r10\n\tjump.eq\t@.BB1_520\n\tadd\tr0, r0, r10\n.BB1_519:\n\tadd\tr10, r8, r11\n\tadd\tr9, r10, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tsub!\tr10, r7, r11\n\tjump.lt\t@.BB1_519\n.BB1_520:\n\tadd\tr7, r8, r8\n\tst.1\tr8, r0\n\tadd\tr7, r4, r4\n\tadd\t33, r4, r7\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB1_523\n\tadd\tr0, r0, r8\n.BB1_522:\n\tadd\tr8, r7, r9\n\tadd\tr8, r1, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB1_522\n.BB1_523:\n\tadd\tr5, r7, r1\n\tst.1\tr1, r0\n\tsub\tr4, r2, r1\n\tadd\tr5, r1, r1\n\tadd\t1, r1, r4\n\tst.1\tr2, r4\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tadd\t64, r1, r1\n\tsub.s!\t@CPI1_8[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB1_14\n\tst.1\t64, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tsub.s!\t@CPI1_6[0], r6, r3\n\tadd.ge\tr1, r0, r6\n\tshl.s\t64, r6, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI1_6[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n.BB1_526:\n\tsub.s!\t@CPI1_6[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tjump\t@.BB1_84\n.BB1_527:\n\tsub.s\tstack-[16], r1, r1\n\tadd\t@CPI1_6[0], r0, r3\n\tsub.s!\t@CPI1_6[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tstack-[13], r1, r1\n\tsub.s!\t@CPI1_6[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tsub!\tstack-[15], r0, r2\n\tjump.ne\t@.BB1_529\n\tadd\tr4, r0, r2\n\tjump\t@.BB1_530\n.BB1_529:\n\tor\t@CPI1_27[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tr0, r0, r5\n.BB1_530:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, r3\n\tsub.s!\tstack-[17], r3, r4\n\tadd\tstack-[17], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB1_534\n\tadd\tr0, r0, r6\n.BB1_533:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[16], r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_533\n.BB1_534:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_536\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[16], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB1_536:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_547\n.BB1_537:\n\tsub!\tstack-[17], r3, r1\n\tadd\tr3, r0, r2\n\tadd.lt\tstack-[17], r0, r2\n\tadd\tr2, r0, r4\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[16], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_8[0], r1, r3\n\tjump.gt\t@.BB1_14\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_14\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t32, r4, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_0[0], r4, r4\n\tsub!\tr4, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI1_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tst.1\t64, r1\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB1_2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tand!\t@CPI1_44[0], r1, r1\n\tjump.ne\t@.BB1_2\n\tadd\t@CPI1_39[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI1_13[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_40[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI1_45[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_546\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_2\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI1_43[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_46[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_6[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_6[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI1_6[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_38[0], r1, r1\n\tadd\t@CPI1_13[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_6[0], r3, stack[@returndatasize]\n\tand\t@CPI1_6[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_552\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI1_8[0], r1, r1\n\tjump.gt\t@.BB1_14\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI1_6[0], r0, r1\n\tadd\tstack-[15], r0, r3\n\tsub.s!\t@CPI1_6[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tmul\t@CPI1_47[0], r3, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB1_546:\n\trevert\n.BB1_547:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_550\n\tadd\tr0, r0, r6\n.BB1_549:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_549\n.BB1_550:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n\tjump\t@.BB1_59\n.BB1_552:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_555\n\tadd\tr0, r0, r6\n.BB1_554:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_554\n.BB1_555:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_60\n\tjump\t@.BB1_59\n.func_end1:\n\nabi_encode_array_address_dyn:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI2_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tret\n.func_end2:\n\nabi_encode_array_string_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_6\n\tadd\tr0, r0, r6\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\t31, r7, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tadd\tr7, r3, r7\n\tst.1\tr7, r0\n\tadd\tr8, r3, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r1, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr3, r7, r3\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r9\n.BB3_4:\n\tadd\tr9, r3, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin4:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_6\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB4_2\n.BB4_5:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB4_6\n.BB4_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI4_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB4_5\n\tadd\tr0, r0, r10\n.BB4_4:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI4_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB4_4\n\tjump\t@.BB4_5\n.BB4_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_encode_bytes32_bytes32_struct_Transaction:\n.func_begin6:\n\tadd\t64, r1, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t96, r1, r3\n\tld.1.inc\tr2, r4, r5\n\tst.1\tr3, r4\n\tld.1\tr5, r3\n\tadd\t128, r1, r4\n\tst.1\tr4, r3\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tadd\t160, r1, r4\n\tst.1\tr4, r3\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tadd\t192, r1, r4\n\tst.1\tr4, r3\n\tadd\t128, r2, r3\n\tld.1\tr3, r3\n\tadd\t224, r1, r4\n\tst.1\tr4, r3\n\tadd\t160, r2, r3\n\tld.1\tr3, r3\n\tadd\t256, r1, r4\n\tst.1\tr4, r3\n\tadd\t192, r2, r3\n\tld.1\tr3, r3\n\tadd\t288, r1, r4\n\tst.1\tr4, r3\n\tadd\t224, r2, r3\n\tld.1\tr3, r3\n\tadd\t320, r1, r4\n\tst.1\tr4, r3\n\tadd\t256, r2, r3\n\tld.1\tr3, r3\n\tadd\t352, r1, r4\n\tst.1\tr4, r3\n\tadd\t288, r2, r3\n\tld.1\tr3, r3\n\tadd\t384, r1, r4\n\tst.1\tr4, r3\n\tadd\t416, r1, r3\n\tadd\t320, r2, r4\n\tld.1\tr4, r4\n\tadd\tr0, r0, r5\n.BB6_1:\n\tld.1.inc\tr4, r6, r4\n\tst.1.inc\tr3, r6, r3\n\tsub.s!\t3, r5, r6\n\tadd\t1, r5, r5\n\tjump.lt\t@.BB6_1\n\tadd\t352, r2, r3\n\tld.1\tr3, r3\n\tadd\t544, r1, r4\n\tadd\t608, r0, r5\n\tst.1\tr4, r5\n\tadd\t704, r1, r4\n\tld.1.inc\tr3, r3, r5\n\tst.1\tr4, r3\n\tadd\t736, r1, r4\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB6_5\n\tadd\tr0, r0, r6\n.BB6_4:\n\tadd\tr6, r4, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB6_4\n.BB6_5:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\t31, r3, r5\n\tsub.s\t32, r0, r3\n\tand\tr5, r3, r5\n\tadd\t384, r2, r6\n\tld.1\tr6, r6\n\tadd\t576, r1, r7\n\tadd\t640, r5, r8\n\tst.1\tr7, r8\n\tadd\tr5, r4, r4\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_8\n\tadd\tr0, r0, r7\n.BB6_7:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB6_7\n.BB6_8:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r1, r5\n\tsub.s\t96, r5, r6\n\tadd\t416, r2, r5\n\tld.1\tr5, r5\n\tadd\t608, r1, r7\n\tst.1\tr7, r6\n\tld.1\tr5, r6\n\tst.1.inc\tr4, r6, r4\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB6_11\n\tadd\tr0, r0, r7\n.BB6_10:\n\tadd\t32, r5, r5\n\tld.1\tr5, r8\n\tst.1.inc\tr4, r8, r4\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_10\n.BB6_11:\n\tsub\tr4, r1, r5\n\tsub.s\t96, r5, r5\n\tadd\t448, r2, r6\n\tld.1\tr6, r6\n\tadd\t640, r1, r7\n\tst.1\tr7, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_14\n\tadd\tr0, r0, r7\n.BB6_13:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB6_13\n.BB6_14:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr5, r4, r5\n\tsub\tr5, r1, r4\n\tsub.s\t96, r4, r4\n\tadd\t480, r2, r2\n\tld.1\tr2, r2\n\tadd\t672, r1, r1\n\tst.1\tr1, r4\n\tld.1.inc\tr2, r2, r4\n\tst.1.inc\tr5, r2, r1\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB6_17\n\tadd\tr0, r0, r5\n.BB6_16:\n\tadd\tr5, r1, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB6_16\n.BB6_17:\n\tadd\tr2, r1, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end6:\n\n__cxa_throw:\n.func_begin7:\n\trevert\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_6:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2233625728\nCPI0_3:\n\t.cell 3124842405\nCPI0_4:\n\t.cell 3792478064\nCPI0_5:\n\t.cell 3792478065\nCPI0_6:\n\t.cell 4202047188\nCPI0_7:\n\t.cell 3124842406\nCPI0_8:\n\t.cell 3233282713\nCPI0_9:\n\t.cell 2957397979\nCPI0_10:\n\t.cell 2957397980\nCPI0_11:\n\t.cell 3041954473\nCPI0_12:\n\t.cell 2233625729\nCPI0_13:\n\t.cell 2439649222\nCPI0_14:\n\t.cell 1046363170\nCPI0_15:\n\t.cell 1725540767\nCPI0_16:\n\t.cell 1725540768\nCPI0_17:\n\t.cell 1946948254\nCPI0_18:\n\t.cell 1046363171\nCPI0_19:\n\t.cell 1064470260\nCPI0_20:\n\t.cell 517440283\nCPI0_21:\n\t.cell 517440284\nCPI0_22:\n\t.cell 719206528\nCPI0_23:\n\t.cell 177362148\nCPI0_24:\n\t.cell 358520873\nCPI0_25:\n\t.cell 2535301202817642044428229017600\nCPI0_26:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_27:\nCPI1_3:\nCPI2_0:\nCPI4_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_28:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_29:\nCPI1_13:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_30:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_31:\n\t.cell 5387515053331158197795811229696\nCPI0_32:\n\t.cell 2535301200456458802993406410752\nCPI0_33:\nCPI1_8:\nCPI5_0:\n\t.cell 18446744073709551615\nCPI0_34:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_35:\nCPI1_10:\n\t.cell 18446744073709551487\nCPI0_36:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_37:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_38:\n\t.cell 18446744073709551423\nCPI0_39:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_40:\nCPI1_45:\nCPI4_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_41:\nCPI1_18:\n\t.cell 18446744073709551551\nCPI0_42:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_43:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_44:\nCPI1_1:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI0_45:\nCPI1_2:\n\t.cell 1000000000000000000\nCPI0_46:\nCPI1_5:\n\t.cell -51723044313523656053393963764110524395896352204932251959347227769995480006656\nCPI0_47:\n\t.cell 316912654779423833243821015040\nCPI0_48:\nCPI1_11:\n\t.cell 20359749130148582612428476031180930620585922044424978539360586139996071657472\nCPI0_49:\nCPI1_12:\nCPI5_2:\n\t.cell 2852213850513516153367582212096\nCPI0_50:\nCPI1_14:\n\t.cell 18446744073709551583\nCPI0_51:\nCPI1_9:\n\t.cell 18446744073709551103\nCPI0_52:\nCPI1_15:\n\t.cell 16777216\nCPI0_53:\nCPI1_7:\n\t.cell 316912650057057350374175801344\nCPI0_54:\nCPI1_39:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_55:\nCPI1_40:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_56:\nCPI1_41:\n\t.cell -24243573542908756656742960469620706294859471809197549687606805108482832859136\nCPI0_57:\n\t.cell -14650547230956386859427514876906105594017592711315430934568270296915099254784\nCPI0_58:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_59:\n\t.cell -46967347869762817211770011756586609677844163125355452868590611683642280247296\nCPI0_60:\nCPI1_38:\n\t.cell 5387515050969974956360988622848\nCPI0_61:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_62:\n\t.cell -26169279673760072341673943167871893214131042372482409454972450661548556448747\nCPI0_63:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_64:\n\t.cell 36516136433507714556481507284757523525550975291680945358964353894568634540880\nCPI0_65:\nCPI1_48:\nCPI5_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_66:\n\t.cell -18002263324862296164297574372220909754226456243825434961346737007256845270391\nCPI0_67:\n\t.cell 452356070936548512558868251319301742702693497199541052500301018000170983672\nCPI0_68:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_69:\n\t.cell 904625697166532776746648320380374280103671765658434360802338178844445376512\nCPI0_70:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_71:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_72:\n\t.cell -5883797128923490009923284826678827595714978823192929338615473490105089392640\nCPI0_73:\n\t.cell 1390849295786071768276380950238675083608645509734\nCPI0_74:\n\t.cell -18446744073709551484\nCPI0_75:\n\t.cell -18446744073709551616\nCPI0_76:\n\t.cell 452320427257589735736092501655702212210535795424078143435447840818844483830\nCPI0_77:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_78:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_79:\n\t.cell -25085042922932715679007901429792258562186342537147911894151979128382061281280\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI1_4:\n\t.cell 18446744073709551488\nCPI1_16:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI1_17:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI1_19:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI1_20:\n\t.cell 340282366920938463463374607431768211455\nCPI1_21:\n\t.cell -57443731770074831323412168344153766786583156455220123566449660816425654157312\nCPI1_22:\n\t.cell -48849787646992769944319009300540211125598274780817112954146168253338351566848\nCPI1_23:\n\t.cell -32566525097995179962879339533693474083732183187211408636097445502225567711232\nCPI1_24:\n\t.cell -28948022309329048855892746252171976963317496166410141009864396001978282409984\nCPI1_25:\n\t.cell -3618502788666131106986593281521497120414687020801267626233049500247285301248\nCPI1_26:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI1_27:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI1_28:\n\t.cell -55835707851169356820239430771708952621760504720314608712511928897999773914424\nCPI1_29:\n\t.cell 18446744073709551135\nCPI1_30:\n\t.cell -27604387271559067812153012136426895368291669229177506800640289263950542709906\nCPI1_31:\n\t.cell -37322242893773753060542304183707406641248651690316488621496580158119782706011\nCPI1_32:\n\t.cell 11626432092274322716100935491593643203982292366959775758281036558588690070895\nCPI1_33:\n\t.cell 18446744073709551455\nCPI1_34:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI1_35:\n\t.cell -57669888194366464517598830424248860356609074394020202793089226410191109488640\nCPI1_36:\n\t.cell -13000608119627727876772300249704890262799149961116506745709105103651939024896\nCPI1_37:\n\t.cell -37977571911845989512430043814285979273712922650878732108812190966532310630528\nCPI1_42:\n\t.cell 904625697166532776746648320380374280103671758052530757071778528429403537408\nCPI1_43:\n\t.cell 14551399762452420340928884176894323592566315527181406485860923357520346480640\nCPI1_44:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI1_46:\n\t.cell 56321387761444176829776271388729339949599216430141105139410976023259448868864\nCPI1_47:\n\t.cell 79228162532711081667253501952\nCPI1_49:\n\t.cell 31404626005388016465557136004425644622526497411135616472760694282821012815872\nCPI1_50:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI1_51:\n\t.cell 7922816251426433759354395033600\n","methodIdentifiers":{"IS_TEST()":"fa7626d4","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSelectors()":"b0464fdc","excludeSenders()":"1ed7831c","failed()":"ba414fa6","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23","testZkOwnerCanExecuteCommands()":"740c129e","testZkValidateTransaction()":"155e9829","testZkValidateTransactionX()":"c0b7fa99"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testZkOwnerCanExecuteCommands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testZkValidateTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testZkValidateTransactionX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/zksync/ZkMinimalAccountTest.sol\":\"ZkMinimalAccountTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x0eb1245b5541ff0fbc0f2a23c746e2b4eb9c46e801a4847f15d7d96d1cecc576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b002e499336c8f6ec05230762cccd3b48d67a2ec547e2789cfb70132af0b430f\",\"dweb:/ipfs/QmfRGPNgBrfxmLt9PQUEjocVmC47Mx14Vie1tziTARRZfq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/Constants.sol\":{\"keccak256\":\"0x163819ef9fd77d6b0cb2c5b4cc0d618a22414d2f22d8afdfbb75920448c69ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3391a314e50637dac6f3c3bddc6c31cd5e43f9de9bf8bbe8bdf7a12fbcbd14e\",\"dweb:/ipfs/QmdCYspfDCnQ9beD9BheqciY8JoSPifDtohxUL42zBneTM\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xb2040f8a83e5d14747aaddad17ad94d622dab1312a986814e0055137b3dc0262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a66f04c92e98d87ee9f37e8b6f77341a0fdc77720f757a1a0e819c3a2a570c9f\",\"dweb:/ipfs/QmZT1Uvw4GPHHL8MNQBCwKd4kX2RJm3nEnhqD6t8JpduJ9\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IAccountCodeStorage.sol\":{\"keccak256\":\"0x9031242f2281715d47db8acb57f44c87cc8a7f1c613ca35a2c6c7022859c8430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74abeb3c11cb167d785028f630e4c53c166033aaa129185a6b025497b0960405\",\"dweb:/ipfs/QmRq5MpFF3EPem2edKzZfSiyQiTPkwSfmLZtHeikkrVMbs\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IBootloaderUtilities.sol\":{\"keccak256\":\"0x46e24f2a46fad9b16f9cded86a1029becb9c7517e16170fac0faf8d51972e1f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ec10dbf579693f8c0a302c187589544debdf6a627508b38dafecdbd10bd86d\",\"dweb:/ipfs/QmRvoSZMj1uUVaNKRL1iGctycGNVaWYWf4RzrucJwW7zQr\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IComplexUpgrader.sol\":{\"keccak256\":\"0xb64fd23e8bd7ac499f0cb48f36827d96f801731544d28a2a1aec968c05a80720\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c1e28b73a5e7e9a19b3e8335dc9ce7ccf624f3dc154ecbdb612af28a20debff\",\"dweb:/ipfs/QmSeZns3BD4L2v3fTxj3gn45wGnMHL2EATXFEz6HexV4SU\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/ICompressor.sol\":{\"keccak256\":\"0x6c5008e891e59bd9fb4798e1da7683fd0f61ce8ed19c170b73d15e57254461d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d61300e06e3634e25534a684b2306959ffe6e7b0d2168d1814cba1237a619\",\"dweb:/ipfs/Qmb1EzeSAfptjBQTpvLVTPBfTfiLVuUqGUUACethaNNKxv\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IContractDeployer.sol\":{\"keccak256\":\"0xe9997c0f1875867d4e7d2791f2ab745a7cbdbd872ff23419bb7862947dd97b80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6812232b953ad190fc5309fed04b957f248b758c9a3045f94c195af58abf320\",\"dweb:/ipfs/QmTcGd9UuLFaq5gzTaK5qLNwV7zVdPPZ6egHorZ1f4nZCf\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IEthToken.sol\":{\"keccak256\":\"0xe713df1e77da2e0d56e8f8f704f4763dea586b94883a208d97debdb7d0cdb5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd25197d549ffd30c6b267d4f5567ecbe8f620cc79555afd1e77e09a55a0ac5\",\"dweb:/ipfs/QmX13sqkfGw1xBvdawKNkaSFnnTjzBXwRUgwZL1Q5fnH5f\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IImmutableSimulator.sol\":{\"keccak256\":\"0x8b1be1464f9a0b24643d86475d23499ea780a4be31987923cbcece3be7d8d58b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3f73fdb4bb8e6b30ee82f2b794ed7edf40678cf3ca4780c53d5670441cdd24e\",\"dweb:/ipfs/QmRYrLmCJDa9bGzZuaU6nJrHgRUNPrqrqnWDNPFX12qehG\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IKnownCodesStorage.sol\":{\"keccak256\":\"0x1ebaabd76fd92a25beca7c81a7fa7f73b3ecae77da561082dfca638d5195d59c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b66f23c3dd1576e576d663e317126c57d789c97700a80e0401b639f9a6ef4f05\",\"dweb:/ipfs/QmcaEa3GsYKctybncRjBtZHweU4Tmapma38yfVs6XJDGtz\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IL1Messenger.sol\":{\"keccak256\":\"0x5b23b42c606acb34691c6ec17d7d630934f187a379c6fd681830e19afd135f02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c228e8e2c669e3f80612e527d4e055398f6faf16b580859f05e7aea67458e69a\",\"dweb:/ipfs/Qmah6pKcF7C4h6zVEzxVqhNXGRmEfEsF6eoiXkqdyWFEk9\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/INonceHolder.sol\":{\"keccak256\":\"0xf7f071f2a1ab8b7a67ba0edcd2eaa4948f09899f13e64994ed10f1d88d3fe036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56ee462cb77b8c1d5f783e32466537b229ef7250f6ef022475ad3883488764ea\",\"dweb:/ipfs/QmdrQAZMXEquGMJ5Mj6as8xR87JxrHfbixRSYif5qN2QEX\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IPaymasterFlow.sol\":{\"keccak256\":\"0x331cd236f75306835d5a4a6f1cd907e8192f7cd3ec6bd4fab2646d992a357226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4ba66ac0ca09bdc53139838aa1e952d9f82b77b605a9156bf4d973aa6e1973b\",\"dweb:/ipfs/QmeXsypqDGzgbTuwGbexMPF9QYVp1aEqMxsov1ppiYqfbh\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IPubdataChunkPublisher.sol\":{\"keccak256\":\"0x717de5e02e7ff56691520e87fd51caa1121ba6123504f405ee500584699b2d67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a57971e84da1965214aef213e8da14140671c3558bee8b04cdceb49139af63f\",\"dweb:/ipfs/QmZRNWa2CgUsyPf4UWaKzzpUT8KPj3iUdcBQDTJsMQ2nHA\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/ISystemContext.sol\":{\"keccak256\":\"0xc0b63bbfe27293d73a52a6f9fab6848984e831bedbdb2bc37d32777b6439b824\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15436605170eabca18a01106582cb89131b519867328b319955d0a0fde14b0f1\",\"dweb:/ipfs/QmTs4P4Ager6CtTS3ScLAVRu8jiWa4Mr7y1oXHrYmAPsMs\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/EfficientCall.sol\":{\"keccak256\":\"0x7b1c7c3274b7d615c8b1ecd32aeac39e72cd52cdb2a7df96eee562e27ff19c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3827a1e0acf4c55e72a2209c5632ce09fb5b10674d52af56dbb289008394c127\",\"dweb:/ipfs/QmethwdovxmGao4YCJ1i8dPDB6SKGi2WsSuRBK5EgbSDwB\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/MemoryTransactionHelper.sol\":{\"keccak256\":\"0x26d50dbc1527ca5e1deaf2c56b0cdab9a71d1a424efc1532790ead0203c65647\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b25f782ed759995743115e88f94c6b9c6a4f41cce2826604b1c8f29520af83f\",\"dweb:/ipfs/QmZRced7PuvTEbFbo71A3f1gFk4aL59Bz3uqyWXEQrsDKq\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/RLPEncoder.sol\":{\"keccak256\":\"0x58a20223793ece388e8e4bf4767b0eb2f67ef66f888fa5f032e02475a92f424e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2791dd64bb644f4e6e9ac17a41cee474cfdc97884adc86004333e38890cacff\",\"dweb:/ipfs/QmTCTgMeYpoet3nTC9q5heYQibVeCrhiNHE5gk3QwYf825\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/SystemContractHelper.sol\":{\"keccak256\":\"0xf0e83cfa63c2f51179432cd13b476fe39669eaa8defb0b4ecc63dde1e22d6456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5f75f94f23333a72b8bfa3bbf48fc5e0d3359eec1812719f1729b5c1dae81fd\",\"dweb:/ipfs/QmZEXFa8pTTq52yd6wc5k6j437niu9HUm5bEdZWcnSZEr7\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/SystemContractsCaller.sol\":{\"keccak256\":\"0xf0718f5b54d39bd7bba8334c9034c239bd28f5e77cbe0abbcc56c3fe3d834424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b030fcd5ca63bbe4aeca4480905c0be8a1672874397391a0f1f82c7237f654d\",\"dweb:/ipfs/QmWatsrGs99jS8HudiULVXNdJwmYUhP6QBqdtfLTx5a9Pq\"]},\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/Utils.sol\":{\"keccak256\":\"0xf5435912eb2791ef7a6badc916abb1ba990106cb9fcd1a56b04ce7b66895beda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a29571679e5332de84a5468669da3e5e7eeb69fb9b765203f4a217fed6be468\",\"dweb:/ipfs/QmcXYnHPCXYa9vXTMUj2Twd2GeY2EmT637zCJ2WHAMznn9\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\":{\"keccak256\":\"0x3ae81a443846c6d9bd387d6c6a5d7271a25095c83bb93817eefdaa22e13ca9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f98462a56f254dc0046038e92527e3b7ee5bf0e03f60e3459fbd400c14be01a7\",\"dweb:/ipfs/QmevANfRaMrqy8Jh33LxEs5vP2xBPQspxtij8bsonw3GHM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMinimal.s.sol\":{\"keccak256\":\"0x7e902c16c0771d0c9c52a51848938ddf9b39416c7c3b317a4552753de4aed949\",\"urls\":[\"bzz-raw://860124669056f6054469067a48384fc95140e62ea16b6431e80badcfbc89ad44\",\"dweb:/ipfs/QmPBANK16HHz5gFMdSicTRHPGvnEyVAHTafynrLEZEBZNw\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x4fd788cce6ce3775c1667569aa950deb16c124f64209d5af2d914acd5601bcbd\",\"urls\":[\"bzz-raw://e3c3e9a051b20b56c33f18bcf5c853b8946cb22966c457f5f27504b8452c13d3\",\"dweb:/ipfs/Qmdg7VsWBMoPbepz9gEqNvi9HHkwvp2X5c9Gcet7hmF22L\"]},\"script/SendPackedUserOp.s.sol\":{\"keccak256\":\"0x53a567a751c6b0d12cc7a6e4b007d1c365ac62aebc9ccb484cfeef2ba2a507f0\",\"urls\":[\"bzz-raw://b8951c936fa1aee24c9c77ebbb63cc5d60bde8d08c220a6484200f6c84b9bb74\",\"dweb:/ipfs/QmUGwcBTe3E1kW6tnjZNyTt49U8ySMgJHhSNko7sY5CPq1\"]},\"src/ethereum/MinimalAccount.sol\":{\"keccak256\":\"0x6cd2108f8155292a9fc320659ac13f19b1ddeac4e1c957a93f0dddde80818417\",\"urls\":[\"bzz-raw://5d459860d93e209a5eedc979437686de82b40e4b866c698e1f02f19be0bca791\",\"dweb:/ipfs/QmZ7sE4AJBVy4ry4YN7ZoPqenDWV3KKHbX6Wg1BiBdf8wT\"]},\"src/zksync/ZkMinimalAccount.sol\":{\"keccak256\":\"0x77d8ce47f008e0dcc3764d3c1f0d98ffc2f4c0a50ba793ad45ed8cc1aa80524c\",\"urls\":[\"bzz-raw://39ee23dec493181b59aeb28ca6ec42e543dd3894ea376d67e531995da52d168c\",\"dweb:/ipfs/QmdwNXxpfmHtXEwLEkeBa5T4xgu7BuBdU4Wt4Lw1rAcVwU\"]},\"test/zksync/ZkMinimalAccountTest.sol\":{\"keccak256\":\"0x47dac6bfeeabf1fb5d080f59e7d2c7b05f58bd33d239486aceebe41c9ac060f7\",\"urls\":[\"bzz-raw://c64215d514f7744b46bc1e157eead5d97caa2ab5cb4637db25b8fb1cbf0e077b\",\"dweb:/ipfs/QmNT6iXxvt3Z19bAQhHWtoiLAEbdhK9UsD3FjDkyeTKtbx\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 17:\"lib/forge-std/src/StdAssertions.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 21:\"lib/forge-std/src/StdInvariant.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 28:\"lib/forge-std/src/Test.sol\", 84:\"test/zksync/ZkMinimalAccountTest.sol\"\nobject \"ZkMinimalAccountTest_52446\" {\n    code {\n        {\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := not(255)\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _2), /** @src 18:3166:3170  \"true\" */ 0x01))\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            sstore(/** @src 28:1038:1042  \"true\" */ 0x1f, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ or(and(sload(/** @src 28:1038:1042  \"true\" */ 0x1f), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _2), /** @src 18:3166:3170  \"true\" */ 0x01))\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            let _3 := datasize(\"ZkMinimalAccountTest_52446_deployed\")\n            codecopy(_1, dataoffset(\"ZkMinimalAccountTest_52446_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 17:\"lib/forge-std/src/StdAssertions.sol\", 21:\"lib/forge-std/src/StdInvariant.sol\", 28:\"lib/forge-std/src/Test.sol\", 39:\"lib/foundry-era-contracts/src/system-contracts/contracts/Constants.sol\", 40:\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IAccount.sol\", 55:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/MemoryTransactionHelper.sol\", 56:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/RLPEncoder.sol\", 84:\"test/zksync/ZkMinimalAccountTest.sol\"\n    object \"ZkMinimalAccountTest_52446_deployed\" {\n        code {\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0a9254e4 { external_fun_setUp() }\n                    case 0x155e9829 {\n                        external_fun_testZkValidateTransaction()\n                    }\n                    case 0x1ed7831c { external_fun_excludeSenders() }\n                    case 0x2ade3880 {\n                        external_fun_targetInterfaces()\n                    }\n                    case 0x3e5e3c23 { external_fun_targetSenders() }\n                    case 0x3f7286f4 {\n                        external_fun_targetContracts()\n                    }\n                    case 0x66d9a9a0 {\n                        external_fun_targetArtifactSelectors()\n                    }\n                    case 0x740c129e {\n                        external_fun_testZkOwnerCanExecuteCommands()\n                    }\n                    case 0x85226c81 {\n                        external_fun_targetArtifacts()\n                    }\n                    case 0x916a17c6 {\n                        external_fun_targetSelectors()\n                    }\n                    case 0xb0464fdc {\n                        external_fun_excludeSelectors()\n                    }\n                    case 0xb5508aa9 {\n                        external_fun_excludeArtifacts()\n                    }\n                    case 0xba414fa6 { external_fun_failed() }\n                    case 0xc0b7fa99 {\n                        external_fun_testZkValidateTransaction()\n                    }\n                    case 0xe20c9f71 {\n                        external_fun_excludeContracts()\n                    }\n                    case 0xfa7626d4 { external_fun_IS_TEST() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function external_fun_setUp()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 84:1510:1532  \"new ZkMinimalAccount()\"\n                let _2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:1510:1532  \"new ZkMinimalAccount()\"\n                let _3 := datasize(\"ZkMinimalAccount_51406\")\n                let _4 := add(_2, _3)\n                let _5 := 0xffffffffffffffff\n                if or(gt(_4, _5), lt(_4, _2)) { panic_error_0x41() }\n                datacopy(_2, dataoffset(\"ZkMinimalAccount_51406\"), _3)\n                let expr_address := create(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ _2, sub(_4, _2))\n                if iszero(expr_address) { revert_forward() }\n                /// @src 84:1493:1532  \"minimalAccount = new ZkMinimalAccount()\"\n                update_storage_value_offsett_contract_ZkMinimalAccount_to_contract_ZkMinimalAccount(expr_address)\n                /// @src 84:1542:1574  \"minimalAccount.transferOwnership\"\n                let expr_address_1 := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:1493:1532  \"minimalAccount = new ZkMinimalAccount()\" */ 0x1f)))\n                /// @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\"\n                if iszero(extcodesize(expr_address_1))\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\"\n                let _6 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\"\n                mstore(_6, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0xf2fde38b))\n                /// @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\"\n                let _7 := call(gas(), expr_address_1, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\" */ _6, sub(abi_encode_address_11679(add(_6, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4)), /** @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\" */ _6), _6, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                /// @src 84:1542:1597  \"minimalAccount.transferOwnership(ANVIL_DEFAULT_ACCOUNT)\"\n                if iszero(_7) { revert_forward() }\n                if _7\n                {\n                    finalize_allocation_11680(_6)\n                    abi_decode(_6, _6)\n                }\n                /// @src 84:1614:1629  \"new ERC20Mock()\"\n                let _8 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:1614:1629  \"new ERC20Mock()\"\n                let _9 := datasize(\"ERC20Mock_47219\")\n                let _10 := add(_8, _9)\n                if or(gt(_10, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ _5), /** @src 84:1614:1629  \"new ERC20Mock()\" */ lt(_10, _8)) { panic_error_0x41() }\n                datacopy(_8, dataoffset(\"ERC20Mock_47219\"), _9)\n                let expr_address_2 := create(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 84:1614:1629  \"new ERC20Mock()\" */ _8, sub(_10, _8))\n                if iszero(expr_address_2) { revert_forward() }\n                /// @src 84:1607:1629  \"usdc = new ERC20Mock()\"\n                update_storage_value_offsett_contract_ERC20Mock_to_contract_ERC20Mock(expr_address_2)\n                /// @src 84:1647:1670  \"address(minimalAccount)\"\n                let expr := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:1493:1532  \"minimalAccount = new ZkMinimalAccount()\" */ 0x1f)))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _11 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                if iszero(extcodesize(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _11))\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                let _12 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                mstore(_12, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0xc88a5e6d))\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                let _13 := call(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _11, _1, /** @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\" */ _12, sub(abi_encode_address_uint256(add(_12, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4), /** @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\" */ expr), _12), _12, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                /// @src 84:1639:1679  \"vm.deal(address(minimalAccount), AMOUNT)\"\n                if iszero(_13) { revert_forward() }\n                if _13\n                {\n                    finalize_allocation_11680(_12)\n                    abi_decode(_12, _12)\n                }\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                return(_1, _1)\n            }\n            function external_fun_testZkValidateTransaction()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 84:2418:2422  \"usdc\"\n                let _2 := 0x20\n                /// @src 84:2410:2423  \"address(usdc)\"\n                let expr := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ convert_uint160_to_contract_ZkMinimalAccount(sload(/** @src 84:2418:2422  \"usdc\" */ _2)))\n                /// @src 84:2536:2559  \"address(minimalAccount)\"\n                let expr_1 := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:2544:2558  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                let expr_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                mstore(add(expr_mpos, /** @src 84:2418:2422  \"usdc\" */ _2), /** @src 84:2511:2534  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                /// @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                let _3 := sub(abi_encode_address_uint256(add(expr_mpos, 36), expr_1), expr_mpos)\n                mstore(expr_mpos, add(_3, not(31)))\n                finalize_allocation(expr_mpos, _3)\n                /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                let _4 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                mstore(_4, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x8da5cb5b))\n                /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                let _5 := staticcall(gas(), expr_1, _4, /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ 4, /** @src 84:2650:2672  \"minimalAccount.owner()\" */ _4, /** @src 84:2418:2422  \"usdc\" */ _2)\n                /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                if iszero(_5) { revert_forward() }\n                let expr_2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1\n                /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                if _5\n                {\n                    let _6 := /** @src 84:2418:2422  \"usdc\" */ _2\n                    /// @src 84:2650:2672  \"minimalAccount.owner()\"\n                    if gt(/** @src 84:2418:2422  \"usdc\" */ _2, /** @src 84:2650:2672  \"minimalAccount.owner()\" */ returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_4, _6)\n                    expr_2 := abi_decode_address_fromMemory(_4, add(_4, _6))\n                }\n                /// @src 84:2729:2758  \"_signTransaction(transaction)\"\n                let expr_mpos_1 := fun_signTransaction(/** @src 84:2623:2705  \"_createUnsignedTransaction(minimalAccount.owner(), 113, dest, value, functionData)\" */ fun_createUnsignedTransaction(expr_2, expr, expr_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _7 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                if iszero(extcodesize(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _7))\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                let _8 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                mstore(_8, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0xca669fa7))\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                let _9 := call(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _7, _1, /** @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\" */ _8, sub(abi_encode_address_20908(add(_8, /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ 4)), /** @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\" */ _8), _8, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                /// @src 84:2784:2819  \"vm.prank(BOOTLOADER_FORMAL_ADDRESS)\"\n                if iszero(_9) { revert_forward() }\n                if _9\n                {\n                    finalize_allocation_11680(_8)\n                    abi_decode(_8, _8)\n                }\n                /// @src 84:2844:2878  \"minimalAccount.validateTransaction\"\n                let expr_address := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:2544:2558  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                let _10 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                mstore(_10, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x202bcce7))\n                /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                let _11 := call(gas(), expr_address, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\" */ _10, sub(abi_encode_bytes32_bytes32_struct_Transaction(add(_10, /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ 4), /** @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\" */ expr_mpos_1), _10), _10, /** @src 84:2418:2422  \"usdc\" */ _2)\n                /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                if iszero(_11) { revert_forward() }\n                let expr_3 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1\n                /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                if _11\n                {\n                    let _12 := /** @src 84:2418:2422  \"usdc\" */ _2\n                    /// @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                    if gt(/** @src 84:2418:2422  \"usdc\" */ _2, /** @src 84:2844:2921  \"minimalAccount.validateTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\" */ returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_10, _12)\n                    expr_3 := abi_decode_bytes4_fromMemory(_10, add(_10, _12))\n                }\n                /// @src 84:2950:2999  \"assertEq(magic, ACCOUNT_VALIDATION_SUCCESS_MAGIC)\"\n                fun_assertEq(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 84:2950:2999  \"assertEq(magic, ACCOUNT_VALIDATION_SUCCESS_MAGIC)\" */ expr_3, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(224, 0xffffffff)))\n                return(_1, _1)\n            }\n            function array_storeLengthForEncoding_array_address_dyn(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function external_fun_excludeSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31))), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20)\n            }\n            function abi_encode_array_struct_FuzzInterface_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let _3 := 5\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                let i_1 := 0\n                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _4 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_4), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    let memberValue0 := mload(add(_4, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    let _5 := 96\n                    pos_1 := add(tail_2, _5)\n                    let tail_4 := add(add(tail_2, shl(_3, length_1)), _5)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_2 := i\n                    for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                    {\n                        mstore(pos_1, add(sub(tail_4, tail_2), not(95)))\n                        tail_4 := abi_encode_string(mload(srcPtr_1), tail_4)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                        pos_1 := add(pos_1, _1)\n                    }\n                    tail_2 := tail_4\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetInterfaces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 36516136433507714556481507284757523525550975291680945358964353894568634540880\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_11684(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_string__dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzInterface_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_targetSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let srcPtr := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_targetContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let srcPtr := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function abi_encode_bytes4(value, pos)\n            {\n                mstore(pos, and(value, shl(224, 0xffffffff)))\n            }\n            function abi_encode_array_bytes4_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_array_struct_FuzzArtifactSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let memberValue0 := mload(_3)\n                    mstore(tail_2, _2)\n                    let tail_3 := abi_encode_string(memberValue0, add(tail_2, _2))\n                    let memberValue0_1 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), sub(tail_3, tail_2))\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0_1, tail_3)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifactSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_11684(memPtr_1)\n                    mstore(memPtr_1, copy_array_from_storage_to_memory_string(spos))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzArtifactSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_testZkOwnerCanExecuteCommands()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 84:1792:1796  \"usdc\"\n                let _2 := 0x20\n                /// @src 84:1784:1797  \"address(usdc)\"\n                let expr := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ convert_uint160_to_contract_ZkMinimalAccount(sload(/** @src 84:1792:1796  \"usdc\" */ _2)))\n                /// @src 84:1910:1933  \"address(minimalAccount)\"\n                let expr_1 := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:1918:1932  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _3 := 64\n                /// @src 84:1862:1942  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                let expr_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:1862:1942  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                mstore(add(expr_mpos, /** @src 84:1792:1796  \"usdc\" */ _2), /** @src 84:2511:2534  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                /// @src 84:1862:1942  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                let _4 := sub(abi_encode_address_uint256(add(expr_mpos, 36), expr_1), expr_mpos)\n                mstore(expr_mpos, add(_4, /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)))\n                /// @src 84:1862:1942  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                finalize_allocation(expr_mpos, _4)\n                /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                let _5 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                let _6 := shl(224, 0x8da5cb5b)\n                /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                mstore(_5, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                let _7 := staticcall(gas(), expr_1, _5, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4, /** @src 84:2024:2046  \"minimalAccount.owner()\" */ _5, /** @src 84:1792:1796  \"usdc\" */ _2)\n                /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                if iszero(_7) { revert_forward() }\n                let expr_2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1\n                /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                if _7\n                {\n                    let _8 := /** @src 84:1792:1796  \"usdc\" */ _2\n                    /// @src 84:2024:2046  \"minimalAccount.owner()\"\n                    if gt(/** @src 84:1792:1796  \"usdc\" */ _2, /** @src 84:2024:2046  \"minimalAccount.owner()\" */ returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_5, _8)\n                    expr_2 := abi_decode_address_fromMemory(_5, add(_5, _8))\n                }\n                /// @src 84:1997:2079  \"_createUnsignedTransaction(minimalAccount.owner(), 113, dest, value, functionData)\"\n                let expr_mpos_1 := fun_createUnsignedTransaction(expr_2, expr, expr_mpos)\n                /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                let _9 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                mstore(_9, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                let _10 := staticcall(gas(), expr_1, _9, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4, /** @src 84:2114:2136  \"minimalAccount.owner()\" */ _9, /** @src 84:1792:1796  \"usdc\" */ _2)\n                /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                if iszero(_10) { revert_forward() }\n                let expr_3 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1\n                /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                if _10\n                {\n                    let _11 := /** @src 84:1792:1796  \"usdc\" */ _2\n                    /// @src 84:2114:2136  \"minimalAccount.owner()\"\n                    if gt(/** @src 84:1792:1796  \"usdc\" */ _2, /** @src 84:2114:2136  \"minimalAccount.owner()\" */ returndatasize()) { _11 := returndatasize() }\n                    finalize_allocation(_9, _11)\n                    expr_3 := abi_decode_address_fromMemory(_9, add(_9, _11))\n                }\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _12 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                if iszero(extcodesize(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _12))\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                let _13 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                mstore(_13, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0xca669fa7))\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                let _14 := call(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _12, _1, /** @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\" */ _13, sub(abi_encode_address(add(_13, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4), /** @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\" */ expr_3), _13), _13, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                /// @src 84:2105:2137  \"vm.prank(minimalAccount.owner())\"\n                if iszero(_14) { revert_forward() }\n                if _14\n                {\n                    finalize_allocation_11680(_13)\n                    abi_decode(_13, _13)\n                }\n                /// @src 84:2147:2180  \"minimalAccount.executeTransaction\"\n                let expr_address := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:1918:1932  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(_1, _1)\n                }\n                /// @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                let _15 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                mstore(_15, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0xdf9c1589))\n                /// @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                let _16 := call(gas(), expr_address, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\" */ _15, sub(abi_encode_bytes32_bytes32_struct_Transaction(add(_15, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4), /** @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\" */ expr_mpos_1), _15), _15, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                /// @src 84:2147:2223  \"minimalAccount.executeTransaction(EMPTY_BYTES32, EMPTY_BYTES32, transaction)\"\n                if iszero(_16) { revert_forward() }\n                if _16\n                {\n                    finalize_allocation_11680(_15)\n                    abi_decode(_15, _15)\n                }\n                /// @src 84:2261:2275  \"usdc.balanceOf\"\n                let expr_address_1 := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ convert_uint160_to_contract_ZkMinimalAccount(sload(/** @src 84:1792:1796  \"usdc\" */ _2)))\n                /// @src 84:2276:2299  \"address(minimalAccount)\"\n                let expr_4 := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:1918:1932  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                let _17 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(_3)\n                /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                mstore(_17, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x70a08231))\n                /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                let _18 := staticcall(gas(), expr_address_1, _17, sub(abi_encode_address(add(_17, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 4), /** @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\" */ expr_4), _17), _17, /** @src 84:1792:1796  \"usdc\" */ _2)\n                /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                if iszero(_18) { revert_forward() }\n                let expr_5 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1\n                /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                if _18\n                {\n                    let _19 := /** @src 84:1792:1796  \"usdc\" */ _2\n                    /// @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\"\n                    if gt(/** @src 84:1792:1796  \"usdc\" */ _2, /** @src 84:2261:2300  \"usdc.balanceOf(address(minimalAccount))\" */ returndatasize()) { _19 := returndatasize() }\n                    finalize_allocation(_17, _19)\n                    expr_5 := abi_decode_uint256_fromMemory(_17, add(_17, _19))\n                }\n                /// @src 84:2302:2308  \"AMOUNT\"\n                fun_assertEq_11691(expr_5)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                return(_1, _1)\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_11684(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_11684(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let spos := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_failed()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_failed()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_excludeContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let srcPtr := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_IS_TEST()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 28:1016:1042  \"bool public IS_TEST = true\" */ 31), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function convert_uint160_to_contract_ZkMinimalAccount(value) -> converted\n            {\n                converted := and(value, sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1))\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function update_storage_value_offsett_contract_ZkMinimalAccount_to_contract_ZkMinimalAccount(value)\n            {\n                let _1 := sload(/** @src 84:1493:1532  \"minimalAccount = new ZkMinimalAccount()\" */ 0x1f)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                sstore(/** @src 84:1493:1532  \"minimalAccount = new ZkMinimalAccount()\" */ 0x1f, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ or(and(_1, not(sub(shl(168, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 256))), and(shl(8, value), sub(shl(168, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 256))))\n            }\n            function extract_from_storage_value_offsett_contract_ZkMinimalAccount(slot_value) -> value\n            {\n                value := and(shr(8, slot_value), sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1))\n            }\n            /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n            function finalize_allocation_11680(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_11684(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ newFreePtr)\n            }\n            function finalize_allocation_20913(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 32)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(add(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ size, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 31), /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)))\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_address_11679(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(headStart, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266)\n            }\n            function abi_encode_address_20908(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(headStart, /** @src 39:1149:1155  \"0x8000\" */ 32769)\n            }\n            /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n            }\n            /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n            function update_storage_value_offsett_contract_ERC20Mock_to_contract_ERC20Mock(value)\n            {\n                sstore(/** @src 84:1607:1629  \"usdc = new ERC20Mock()\" */ 0x20, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 84:1607:1629  \"usdc = new ERC20Mock()\" */ 0x20), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ value, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1))))\n            }\n            /// @src 84:1310:1314  \"1e18\"\n            function abi_encode_address_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(headStart, and(value0, sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(add(headStart, 32), 0x0de0b6b3a7640000)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1))))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                value0 := value\n            }\n            /// @src 84:1353:1363  \"bytes32(0)\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                let value := mload(headStart)\n                if iszero(eq(value, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 84:1353:1363  \"bytes32(0)\" */ value, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(224, 0xffffffff))))\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                value0 := value\n            }\n            function abi_encode_array_uint256(value, pos)\n            {\n                pos := pos\n                let srcPtr := value\n                let i := 0\n                for { } lt(i, 0x04) { i := add(i, 1) }\n                {\n                    /// @src 84:1310:1314  \"1e18\"\n                    mstore(pos, /** @src 84:1353:1363  \"bytes32(0)\" */ mload(srcPtr))\n                    let _1 := 0x20\n                    pos := add(pos, _1)\n                    srcPtr := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 84:1353:1363  \"bytes32(0)\" */ srcPtr, _1)\n                }\n            }\n            function abi_encode_array_bytes32_dyn(value, pos) -> end\n            {\n                let length := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 84:1353:1363  \"bytes32(0)\" */ value)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                pos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, 0x20)\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                let srcPtr := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 84:1353:1363  \"bytes32(0)\" */ value, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20)\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 84:1310:1314  \"1e18\"\n                    mstore(pos, /** @src 84:1353:1363  \"bytes32(0)\" */ mload(srcPtr))\n                    pos := add(pos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                    /// @src 84:1353:1363  \"bytes32(0)\"\n                    srcPtr := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 84:1353:1363  \"bytes32(0)\" */ srcPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                }\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                end := pos\n            }\n            function abi_encode_bytes32_bytes32_struct_Transaction(headStart, value2) -> tail\n            {\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(headStart, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                mstore(add(headStart, 64), 96)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 96), mload(value2))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 128), mload(add(value2, 32)))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 160), mload(add(value2, 64)))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 192), mload(add(value2, 96)))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, 224), mload(add(value2, 128)))\n                let _1 := mload(add(value2, 160))\n                let _2 := 256\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, _2), _1)\n                let _3 := mload(add(value2, 192))\n                let _4 := 288\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, _4), _3)\n                let _5 := mload(add(value2, 224))\n                let _6 := 320\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, _6), _5)\n                let _7 := mload(add(value2, _2))\n                let _8 := 352\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, _8), _7)\n                let _9 := mload(add(value2, _4))\n                let _10 := 384\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1353:1363  \"bytes32(0)\" */ add(headStart, _10), _9)\n                let memberValue0 := mload(add(value2, _6))\n                let _11 := 416\n                abi_encode_array_uint256(memberValue0, add(headStart, _11))\n                let memberValue0_1 := mload(add(value2, _8))\n                let _12 := 0x0260\n                mstore(add(headStart, 544), _12)\n                let tail_1 := abi_encode_string(memberValue0_1, add(headStart, 704))\n                let memberValue0_2 := mload(add(value2, _10))\n                let _13 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ not(95)\n                /// @src 84:1353:1363  \"bytes32(0)\"\n                mstore(add(headStart, 576), add(sub(tail_1, headStart), _13))\n                let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n                let memberValue0_3 := mload(add(value2, _11))\n                mstore(add(headStart, _12), add(sub(tail_2, headStart), _13))\n                let tail_3 := abi_encode_array_bytes32_dyn(memberValue0_3, tail_2)\n                let memberValue0_4 := mload(add(value2, 0x01c0))\n                mstore(add(headStart, 640), add(sub(tail_3, headStart), _13))\n                let tail_4 := abi_encode_string(memberValue0_4, tail_3)\n                let memberValue0_5 := mload(add(value2, 0x01e0))\n                mstore(add(headStart, 672), add(sub(tail_4, headStart), _13))\n                tail := abi_encode_string(memberValue0_5, tail_4)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function array_dataslot_array_address_dyn_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function allocate_memory_11723() -> memPtr\n            {\n                memPtr := mload(64)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                let newFreePtr := add(memPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 512)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ newFreePtr)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                let newFreePtr := add(memPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 128)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ newFreePtr)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function array_allocation_size_array_struct_FuzzInterface_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let slotValue := sload(slot)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := 1\n                length := shr(1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_array_address_dyn_storage(slot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_array_string__dyn(slot) -> memPtr\n            {\n                let length := sload(slot)\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _2 := 0x20\n                mpos := add(memPtr_1, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ slot)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n            }\n            function copy_array_from_storage_to_memory_array_bytes4_dyn(slot) -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                let srcPtr := array_dataslot_array_address_dyn_storage(slot)\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                for { }\n                lt(add(itemCounter, 7), length)\n                {\n                    itemCounter := add(itemCounter, 8)\n                }\n                {\n                    let data := sload(srcPtr)\n                    /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let _2 := 224\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(_2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data), pos)\n                    let _3 := 0x20\n                    /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let _4 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(224, 0xffffffff)\n                    /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let _5 := 192\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(_5, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, _3))\n                    /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let _6 := 160\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(_6, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, _1))\n                    let _7 := 96\n                    /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let _8 := 128\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(_8, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, _7))\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _7, data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _8))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _3, data), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _5))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _2))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    pos := add(pos, 256)\n                    srcPtr := add(srcPtr, 1)\n                }\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data_1), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(192, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(160, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(128, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(shl(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ and(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ data_1, shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            /// @ast-id 3987 @src 17:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let value := and(sload(/** @src 17:1302:1309  \"_failed\" */ 0x08), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xff)\n                /// @src 17:1298:1441  \"if (_failed) {...\"\n                switch /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ value\n                case /** @src 17:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(228, 0x0667f9d7))\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _2)\n                    /// @src 84:1310:1314  \"1e18\"\n                    mstore(/** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _2, /** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(32, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        expr := abi_decode_uint256_fromMemory(_1, add(_1, _4))\n                    }\n                    /// @src 17:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var := /** @src 17:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 17:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 17:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 17:1325:1339  \"return _failed\"\n                    var := value\n                    leave\n                }\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function allocate_and_zero_memory_array_array_uint256() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                let newFreePtr := add(memPtr_1, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 128)\n                /// @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ newFreePtr)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                memPtr := memPtr_1\n                calldatacopy(memPtr_1, calldatasize(), 128)\n            }\n            function allocate_and_zero_memory_struct_struct_Transaction() -> memPtr\n            {\n                memPtr := allocate_memory_11723()\n                let _1 := 0\n                mstore(memPtr, _1)\n                mstore(add(memPtr, 32), _1)\n                mstore(add(memPtr, 64), _1)\n                let _2 := 96\n                mstore(add(memPtr, _2), _1)\n                mstore(add(memPtr, 128), _1)\n                mstore(add(memPtr, 160), _1)\n                mstore(add(memPtr, 192), _1)\n                mstore(add(memPtr, 224), _1)\n                mstore(add(memPtr, 256), _1)\n                mstore(add(memPtr, 288), _1)\n                mstore(add(memPtr, 320), allocate_and_zero_memory_array_array_uint256())\n                mstore(add(memPtr, 352), _2)\n                mstore(add(memPtr, 384), _2)\n                mstore(add(memPtr, 416), _2)\n                mstore(add(memPtr, 448), _2)\n                mstore(add(memPtr, 480), _2)\n            }\n            function abi_decode_uint64_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xffffffffffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                value0 := value\n            }\n            function allocate_and_zero_memory_array_array_bytes32_dyn() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_20913(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                memPtr := memPtr_1\n                calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20)\n            }\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_20913(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 52445 @src 84:5255:6269  \"function _createUnsignedTransaction(...\"\n            function fun_createUnsignedTransaction(var_from, var_to, var_data_mpos) -> var_mpos\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transaction())\n                /// @src 84:5501:5524  \"address(minimalAccount)\"\n                let expr := convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ extract_from_storage_value_offsett_contract_ZkMinimalAccount(sload(/** @src 84:5509:5523  \"minimalAccount\" */ 0x1f)))\n                /// @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\"\n                let _1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\"\n                mstore(_1, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x2d0335ab))\n                /// @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\"\n                let _2 := staticcall(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\" */ _1, sub(abi_encode_address(add(_1, 4), expr), _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0\n                /// @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(32, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr_1 := abi_decode_uint64_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 84:5566:5582  \"new bytes32[](0)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn()\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _4 := sub(shl(160, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1), 1)\n                /// @src 84:6040:6088  \"[uint256(0), uint256(0), uint256(0), uint256(0)]\"\n                let expr_mpos_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ allocate_memory()\n                mstore(expr_mpos_1, 0)\n                mstore(/** @src 84:6040:6088  \"[uint256(0), uint256(0), uint256(0), uint256(0)]\" */ add(expr_mpos_1, /** @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\" */ 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                mstore(/** @src 84:6040:6088  \"[uint256(0), uint256(0), uint256(0), uint256(0)]\" */ add(expr_mpos_1, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64), 0)\n                mstore(/** @src 84:6040:6088  \"[uint256(0), uint256(0), uint256(0), uint256(0)]\" */ add(expr_mpos_1, 96), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                /// @src 84:5599:6262  \"Transaction({...\"\n                let expr_mpos_2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ allocate_memory_11723()\n                mstore(expr_mpos_2, 113)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, /** @src 84:5489:5525  \"vm.getNonce(address(minimalAccount))\" */ 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 84:5728:5741  \"uint160(from)\" */ var_from, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _4))\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 64), and(/** @src 84:5768:5779  \"uint160(to)\" */ var_to, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _4))\n                /// @src 84:5804:5812  \"16777216\"\n                let _5 := 0x01000000\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, /** @src 84:6040:6088  \"[uint256(0), uint256(0), uint256(0), uint256(0)]\" */ 96), /** @src 84:5804:5812  \"16777216\" */ _5)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 128), /** @src 84:5804:5812  \"16777216\" */ _5)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 160), /** @src 84:5804:5812  \"16777216\" */ _5)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 192), /** @src 84:5804:5812  \"16777216\" */ _5)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 224), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 256), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 84:5473:5525  \"uint256 nonce = vm.getNonce(address(minimalAccount))\" */ expr_1, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff))\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 288), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 320), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ expr_mpos_1)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 352), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ var_data_mpos)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 384), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ allocate_memory_array_string())\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 416), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ expr_mpos)\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 448), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ allocate_memory_array_string())\n                mstore(/** @src 84:5599:6262  \"Transaction({...\" */ add(expr_mpos_2, 480), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ allocate_memory_array_string())\n                /// @src 84:5592:6262  \"return Transaction({...\"\n                var_mpos := expr_mpos_2\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                value0 := value\n                value1 := /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(headStart, 32))\n                value2 := /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(headStart, 64))\n            }\n            function abi_encode_uint256_bytes32(headStart, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(headStart, /** @src 84:4272:4338  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(headStart, 32), /** @src 84:1310:1314  \"1e18\" */ value1)\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function abi_encode_packed_bytes32_bytes32_uint8(pos, value0, value1, value2) -> end\n            {\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(pos, value0)\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(pos, 32), /** @src 84:1310:1314  \"1e18\" */ value1)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                mstore(add(pos, 64), and(shl(248, value2), shl(248, 255)))\n                end := add(pos, 65)\n            }\n            /// @ast-id 52295 @src 84:3909:4577  \"function _signTransaction(Transaction memory transaction) internal view returns (Transaction memory) {...\"\n            function fun_signTransaction(var_transaction_52239_mpos) -> var__mpos\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transaction())\n                /// @src 84:4054:4101  \"MemoryTransactionHelper.encodeHash(transaction)\"\n                let var_resultHash := /** @src -1:-1:-1 */ 0\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := mload(/** @src 55:4734:4753  \"_transaction.txType\" */ var_transaction_52239_mpos)\n                /// @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\"\n                switch /** @src 55:4734:4771  \"_transaction.txType == LEGACY_TX_TYPE\" */ iszero(_1)\n                case /** @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\" */ 0 {\n                    /// @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\"\n                    switch /** @src 55:4863:4901  \"_transaction.txType == EIP_712_TX_TYPE\" */ eq(_1, /** @src 55:649:653  \"0x71\" */ 0x71)\n                    case /** @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\" */ 0 {\n                        /// @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\"\n                        switch /** @src 55:4993:5032  \"_transaction.txType == EIP_1559_TX_TYPE\" */ eq(_1, /** @src 55:903:907  \"0x02\" */ 0x02)\n                        case /** @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\" */ 0 {\n                            /// @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\"\n                            switch /** @src 55:5125:5164  \"_transaction.txType == EIP_2930_TX_TYPE\" */ eq(_1, /** @src 55:817:821  \"0x01\" */ 0x01)\n                            case /** @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\" */ 0 {\n                                /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                let _2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                                /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                mstore(_2, shl(229, 4594637))\n                                /// @src 55:817:821  \"0x01\"\n                                mstore(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ add(_2, 4), /** @src 55:817:821  \"0x01\" */ 32)\n                                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                                mstore(/** @src 55:817:821  \"0x01\" */ add(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ _2, /** @src 55:817:821  \"0x01\" */ 36), 23)\n                                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ _2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 68), /** @src 55:817:821  \"0x01\" */ \"Encoding unsupported tx\")\n                                /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                revert(_2, /** @src 55:817:821  \"0x01\" */ 100)\n                            }\n                            default /// @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\"\n                            {\n                                /// @src 55:5180:5236  \"resultHash = _encodeHashEIP2930Transaction(_transaction)\"\n                                var_resultHash := /** @src 55:5193:5236  \"_encodeHashEIP2930Transaction(_transaction)\" */ fun_encodeHashEIP2930Transaction(var_transaction_52239_mpos)\n                            }\n                        }\n                        default /// @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\"\n                        {\n                            /// @src 55:5048:5104  \"resultHash = _encodeHashEIP1559Transaction(_transaction)\"\n                            var_resultHash := /** @src 55:5061:5104  \"_encodeHashEIP1559Transaction(_transaction)\" */ fun_encodeHashEIP1559Transaction(var_transaction_52239_mpos)\n                        }\n                    }\n                    default /// @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\"\n                    {\n                        /// @src 55:4917:4972  \"resultHash = _encodeHashEIP712Transaction(_transaction)\"\n                        var_resultHash := /** @src 55:4930:4972  \"_encodeHashEIP712Transaction(_transaction)\" */ fun_encodeHashEIP712Transaction(var_transaction_52239_mpos)\n                    }\n                }\n                default /// @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\"\n                {\n                    /// @src 55:4787:4842  \"resultHash = _encodeHashLegacyTransaction(_transaction)\"\n                    var_resultHash := /** @src 55:4800:4842  \"_encodeHashLegacyTransaction(_transaction)\" */ fun_encodeHashLegacyTransaction(var_transaction_52239_mpos)\n                }\n                /// @src 84:4360:4411  \"vm.sign(ANVIL_DEFAULT_KEY, unsignedTransactionHash)\"\n                let _3 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:4360:4411  \"vm.sign(ANVIL_DEFAULT_KEY, unsignedTransactionHash)\"\n                mstore(_3, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(226, 0x38d07aa9))\n                /// @src 84:4360:4411  \"vm.sign(ANVIL_DEFAULT_KEY, unsignedTransactionHash)\"\n                let _4 := staticcall(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 84:4360:4411  \"vm.sign(ANVIL_DEFAULT_KEY, unsignedTransactionHash)\" */ _3, sub(abi_encode_uint256_bytes32(add(_3, 4), var_resultHash), _3), _3, 96)\n                if iszero(_4) { revert_forward() }\n                let expr_component := /** @src -1:-1:-1 */ 0\n                let expr_component_1 := 0\n                let expr_component_2 := 0\n                /// @src 84:4360:4411  \"vm.sign(ANVIL_DEFAULT_KEY, unsignedTransactionHash)\"\n                if _4\n                {\n                    let _5 := 96\n                    if gt(96, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_3, _5)\n                    let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_3, add(_3, _5))\n                    expr_component := expr_component_3\n                    expr_component_1 := expr_component_4\n                    expr_component_2 := expr_component_5\n                }\n                /// @src 84:4511:4536  \"abi.encodePacked(r, s, v)\"\n                let expr_52289_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 84:4511:4536  \"abi.encodePacked(r, s, v)\"\n                let _6 := sub(abi_encode_packed_bytes32_bytes32_uint8(add(expr_52289_mpos, 0x20), expr_component_1, expr_component_2, expr_component), expr_52289_mpos)\n                mstore(expr_52289_mpos, add(_6, /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)))\n                /// @src 84:4511:4536  \"abi.encodePacked(r, s, v)\"\n                finalize_allocation(expr_52289_mpos, _6)\n                /// @src 84:4481:4536  \"signedTransaction.signature = abi.encodePacked(r, s, v)\"\n                mstore(/** @src 84:4481:4508  \"signedTransaction.signature\" */ add(var_transaction_52239_mpos, 384), /** @src 84:4481:4536  \"signedTransaction.signature = abi.encodePacked(r, s, v)\" */ expr_52289_mpos)\n                /// @src 84:4546:4570  \"return signedTransaction\"\n                var__mpos := var_transaction_52239_mpos\n            }\n            /// @ast-id 4294 @src 17:3710:3820  \"function assertEq(bytes32 left, bytes32 right) internal pure virtual {...\"\n            function fun_assertEq(var_left)\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 17:3789:3813  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1))\n                /// @src 17:3789:3813  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 17:3789:3813  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 17:3789:3813  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7c84c69b))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 17:3789:3813  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 84:1310:1314  \"1e18\" */ var_left)\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 17:3789:3813  \"vm.assertEq(left, right)\" */ _2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 36), /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x202bcce7))\n                /// @src 17:3789:3813  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 17:3789:3813  \"vm.assertEq(left, right)\" */ _2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 68, /** @src 17:3789:3813  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_11680(_2) }\n            }\n            /// @ast-id 4117 @src 17:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_11691(var_left)\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1))\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(0, 0)\n                }\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(64)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(226, 0x260a5b15))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 84:1310:1314  \"1e18\" */ var_left)\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 36), /** @src 84:1310:1314  \"1e18\" */ 0x0de0b6b3a7640000)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 68, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_11680(_2) }\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5) -> outPtr\n            {\n                outPtr := mload(64)\n                let _1 := 0x20\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _1), length)\n                let _2 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, _1), add(_2, _1), length_1)\n                let _3 := add(_2, length_1)\n                let length_2 := mload(param_2)\n                copy_memory_to_memory_with_cleanup(add(param_2, _1), add(_3, _1), length_2)\n                let _4 := add(_3, length_2)\n                let length_3 := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, _1), add(_4, _1), length_3)\n                let _5 := add(_4, length_3)\n                let length_4 := mload(param_4)\n                copy_memory_to_memory_with_cleanup(add(param_4, _1), add(_5, _1), length_4)\n                let _6 := add(_5, length_4)\n                let length_5 := mload(param_5)\n                copy_memory_to_memory_with_cleanup(add(param_5, _1), add(_6, _1), length_5)\n                let _7 := sub(add(_6, length_5), outPtr)\n                mstore(outPtr, _7)\n                finalize_allocation(outPtr, add(_7, _1))\n            }\n            function convert_uint256_to_uint64(value) -> converted\n            {\n                converted := and(value, 0xffffffffffffffff)\n            }\n            function memory_array_index_access_bytes(baseRef) -> addr\n            {\n                if iszero(mload(baseRef))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(baseRef, 32)\n            }\n            function read_from_memoryt_bytes1(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), shl(248, 255))\n            }\n            function copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_11684(memPtr_1)\n                mstore(memPtr_1, 1)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), shl(248, 129))\n            }\n            function bytes_concat_stringliteral_5fe7_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4) -> outPtr\n            {\n                outPtr := mload(64)\n                let _1 := 0x20\n                mstore(add(outPtr, _1), shl(248, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _2 := 33\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _2), length)\n                let _3 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, _1), add(_3, _2), length_1)\n                let _4 := add(_3, length_1)\n                let length_2 := mload(param_2)\n                copy_memory_to_memory_with_cleanup(add(param_2, _1), add(_4, _2), length_2)\n                let _5 := add(_4, length_2)\n                let length_3 := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, _1), add(_5, _2), length_3)\n                let _6 := add(_5, length_3)\n                let length_4 := mload(param_4)\n                copy_memory_to_memory_with_cleanup(add(param_4, _1), add(_6, _2), length_4)\n                let _7 := sub(add(_6, length_4), outPtr)\n                mstore(outPtr, add(_7, 1))\n                finalize_allocation(outPtr, add(_7, _2))\n            }\n            /// @ast-id 44675 @src 55:10300:13260  \"function _encodeHashEIP2930Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n            function fun_encodeHashEIP2930Transaction(var_transaction_44511_mpos) -> var\n            {\n                /// @src 55:10856:10895  \"RLPEncoder.encodeUint256(block.chainid)\"\n                let expr_44525_mpos := fun_encodeUint256(/** @src 55:10881:10894  \"block.chainid\" */ chainid())\n                /// @src 55:10937:10981  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                let expr_44533_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:10962:10980  \"_transaction.nonce\" */ add(var_transaction_44511_mpos, 256)))\n                /// @src 55:11026:11077  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                let expr_44541_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:11051:11076  \"_transaction.maxFeePerGas\" */ add(var_transaction_44511_mpos, 160)))\n                /// @src 55:11122:11169  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\"\n                let expr_44549_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:11147:11168  \"_transaction.gasLimit\" */ add(var_transaction_44511_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96)))\n                /// @src 55:11208:11267  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                let expr_44563_mpos := fun_encodeAddress(/** @src 55:11233:11266  \"address(uint160(_transaction.to))\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 55:11241:11265  \"uint160(_transaction.to)\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:11249:11264  \"_transaction.to\" */ add(var_transaction_44511_mpos, 64)))))\n                /// @src 55:11410:11511  \"bytes.concat(encodedChainId, encodedNonce, encodedGasPrice, encodedGasLimit, encodedTo, encodedValue)\"\n                let expr_44583_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes(expr_44525_mpos, expr_44533_mpos, expr_44541_mpos, expr_44549_mpos, expr_44563_mpos, /** @src 55:11309:11353  \"RLPEncoder.encodeUint256(_transaction.value)\" */ fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:11334:11352  \"_transaction.value\" */ add(var_transaction_44511_mpos, 288))))\n                /// @src 55:11698:11728  \"bytes memory encodedDataLength\"\n                let var_encodedDataLength_44588_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 55:11698:11728  \"bytes memory encodedDataLength\"\n                var_encodedDataLength_44588_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96\n                /// @src 55:11866:11883  \"_transaction.data\"\n                let _1 := add(var_transaction_44511_mpos, 352)\n                let _257_mpos := mload(_1)\n                /// @src 55:11859:11891  \"uint64(_transaction.data.length)\"\n                let expr := convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:11866:11890  \"_transaction.data.length\" */ _257_mpos))\n                /// @src 55:11905:12346  \"if (txDataLen != 1) {...\"\n                switch /** @src 55:11909:11923  \"txDataLen != 1\" */ iszero(eq(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:11909:11923  \"txDataLen != 1\" */ expr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff), /** @src 55:11922:11923  \"1\" */ 0x01))\n                case /** @src 55:11905:12346  \"if (txDataLen != 1) {...\" */ 0 {\n                    /// @src 55:12140:12346  \"if (_transaction.data[0] >= 0x80) {...\"\n                    if /** @src 55:12144:12172  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:12144:12164  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_257_mpos)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255)), shl(255, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1)))\n                    /// @src 55:12140:12346  \"if (_transaction.data[0] >= 0x80) {...\"\n                    {\n                        /// @src 55:12304:12331  \"encodedDataLength = hex\\\"81\\\"\"\n                        var_encodedDataLength_44588_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                    }\n                }\n                default /// @src 55:11905:12346  \"if (txDataLen != 1) {...\"\n                {\n                    /// @src 55:12054:12119  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                    var_encodedDataLength_44588_mpos := /** @src 55:12074:12119  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                }\n                /// @src 55:12542:12569  \"RLPEncoder.encodeListLen(0)\"\n                let expr_44629_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength_11736()\n                /// @src 55:12665:12696  \"encodedFixedLengthParams.length\"\n                let expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:12665:12696  \"encodedFixedLengthParams.length\" */ expr_44583_mpos)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum := add(expr_1, mload(/** @src 55:12699:12723  \"encodedDataLength.length\" */ var_encodedDataLength_44588_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_1 := add(sum, mload(/** @src 55:12726:12743  \"_transaction.data\" */ mload(_1)))\n                /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength(/** @src 55:12935:12953  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(sum_1, mload(/** @src 55:12769:12799  \"encodedAccessListLength.length\" */ expr_44629_mpos))))\n                /// @src 55:13005:13243  \"bytes.concat(...\"\n                let expr_44671_mpos := bytes_concat_stringliteral_5fe7_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44583_mpos, var_encodedDataLength_44588_mpos, /** @src 55:13171:13188  \"_transaction.data\" */ mload(_1), /** @src 55:13005:13243  \"bytes.concat(...\" */ expr_44629_mpos)\n                /// @src 55:12975:13253  \"return keccak256(...\"\n                var := /** @src 55:12982:13253  \"keccak256(...\" */ keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:12982:13253  \"keccak256(...\" */ expr_44671_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20), mload(/** @src 55:12982:13253  \"keccak256(...\" */ expr_44671_mpos))\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5, param_6) -> outPtr\n            {\n                outPtr := mload(64)\n                let _1 := 0x20\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _1), length)\n                let _2 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, _1), add(_2, _1), length_1)\n                let _3 := add(_2, length_1)\n                let length_2 := mload(param_2)\n                copy_memory_to_memory_with_cleanup(add(param_2, _1), add(_3, _1), length_2)\n                let _4 := add(_3, length_2)\n                let length_3 := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, _1), add(_4, _1), length_3)\n                let _5 := add(_4, length_3)\n                let length_4 := mload(param_4)\n                copy_memory_to_memory_with_cleanup(add(param_4, _1), add(_5, _1), length_4)\n                let _6 := add(_5, length_4)\n                let length_5 := mload(param_5)\n                copy_memory_to_memory_with_cleanup(add(param_5, _1), add(_6, _1), length_5)\n                let _7 := add(_6, length_5)\n                let length_6 := mload(param_6)\n                copy_memory_to_memory_with_cleanup(add(param_6, _1), add(_7, _1), length_6)\n                let _8 := sub(add(_7, length_6), outPtr)\n                mstore(outPtr, _8)\n                finalize_allocation(outPtr, add(_8, _1))\n            }\n            function bytes_concat_stringliteral_f2ee_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4) -> outPtr\n            {\n                outPtr := mload(64)\n                let _1 := 0x20\n                mstore(add(outPtr, _1), shl(249, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _2 := 33\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _2), length)\n                let _3 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, _1), add(_3, _2), length_1)\n                let _4 := add(_3, length_1)\n                let length_2 := mload(param_2)\n                copy_memory_to_memory_with_cleanup(add(param_2, _1), add(_4, _2), length_2)\n                let _5 := add(_4, length_2)\n                let length_3 := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, _1), add(_5, _2), length_3)\n                let _6 := add(_5, length_3)\n                let length_4 := mload(param_4)\n                copy_memory_to_memory_with_cleanup(add(param_4, _1), add(_6, _2), length_4)\n                let _7 := sub(add(_6, length_4), outPtr)\n                mstore(outPtr, add(_7, 1))\n                finalize_allocation(outPtr, add(_7, _2))\n            }\n            /// @ast-id 44852 @src 55:13413:16679  \"function _encodeHashEIP1559Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n            function fun_encodeHashEIP1559Transaction(var_transaction_mpos) -> var\n            {\n                /// @src 55:14012:14051  \"RLPEncoder.encodeUint256(block.chainid)\"\n                let expr_44693_mpos := fun_encodeUint256(/** @src 55:14037:14050  \"block.chainid\" */ chainid())\n                /// @src 55:14093:14137  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                let expr_44701_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14118:14136  \"_transaction.nonce\" */ add(var_transaction_mpos, 256)))\n                /// @src 55:14194:14253  \"RLPEncoder.encodeUint256(_transaction.maxPriorityFeePerGas)\"\n                let expr_44709_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14219:14252  \"_transaction.maxPriorityFeePerGas\" */ add(var_transaction_mpos, 192)))\n                /// @src 55:14302:14353  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                let expr_44717_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14327:14352  \"_transaction.maxFeePerGas\" */ add(var_transaction_mpos, 160)))\n                /// @src 55:14398:14445  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\"\n                let expr_44725_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14423:14444  \"_transaction.gasLimit\" */ add(var_transaction_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96)))\n                /// @src 55:14484:14543  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                let expr_44739_mpos := fun_encodeAddress(/** @src 55:14509:14542  \"address(uint160(_transaction.to))\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 55:14517:14541  \"uint160(_transaction.to)\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14525:14540  \"_transaction.to\" */ add(var_transaction_mpos, 64)))))\n                /// @src 55:14670:14930  \"bytes.concat(...\"\n                let expr_44760_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes(expr_44693_mpos, expr_44701_mpos, expr_44709_mpos, expr_44717_mpos, expr_44725_mpos, expr_44739_mpos, /** @src 55:14585:14629  \"RLPEncoder.encodeUint256(_transaction.value)\" */ fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:14610:14628  \"_transaction.value\" */ add(var_transaction_mpos, 288))))\n                /// @src 55:15117:15147  \"bytes memory encodedDataLength\"\n                let var_encodedDataLength_44765_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 55:15117:15147  \"bytes memory encodedDataLength\"\n                var_encodedDataLength_44765_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96\n                /// @src 55:15285:15302  \"_transaction.data\"\n                let _1 := add(var_transaction_mpos, 352)\n                let _314_mpos := mload(_1)\n                /// @src 55:15278:15310  \"uint64(_transaction.data.length)\"\n                let expr := convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:15285:15309  \"_transaction.data.length\" */ _314_mpos))\n                /// @src 55:15324:15765  \"if (txDataLen != 1) {...\"\n                switch /** @src 55:15328:15342  \"txDataLen != 1\" */ iszero(eq(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:15328:15342  \"txDataLen != 1\" */ expr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff), /** @src 55:15341:15342  \"1\" */ 0x01))\n                case /** @src 55:15324:15765  \"if (txDataLen != 1) {...\" */ 0 {\n                    /// @src 55:15559:15765  \"if (_transaction.data[0] >= 0x80) {...\"\n                    if /** @src 55:15563:15591  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:15563:15583  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_314_mpos)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255)), shl(255, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1)))\n                    /// @src 55:15559:15765  \"if (_transaction.data[0] >= 0x80) {...\"\n                    {\n                        /// @src 55:15723:15750  \"encodedDataLength = hex\\\"81\\\"\"\n                        var_encodedDataLength_44765_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                    }\n                }\n                default /// @src 55:15324:15765  \"if (txDataLen != 1) {...\"\n                {\n                    /// @src 55:15473:15538  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                    var_encodedDataLength_44765_mpos := /** @src 55:15493:15538  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                }\n                /// @src 55:15961:15988  \"RLPEncoder.encodeListLen(0)\"\n                let expr_44806_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength_11736()\n                /// @src 55:16084:16115  \"encodedFixedLengthParams.length\"\n                let expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:16084:16115  \"encodedFixedLengthParams.length\" */ expr_44760_mpos)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum := add(expr_1, mload(/** @src 55:16118:16142  \"encodedDataLength.length\" */ var_encodedDataLength_44765_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_1 := add(sum, mload(/** @src 55:16145:16162  \"_transaction.data\" */ mload(_1)))\n                /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength(/** @src 55:16354:16372  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(sum_1, mload(/** @src 55:16188:16218  \"encodedAccessListLength.length\" */ expr_44806_mpos))))\n                /// @src 55:16424:16662  \"bytes.concat(...\"\n                let expr_44848_mpos := bytes_concat_stringliteral_f2ee_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44760_mpos, var_encodedDataLength_44765_mpos, /** @src 55:16590:16607  \"_transaction.data\" */ mload(_1), /** @src 55:16424:16662  \"bytes.concat(...\" */ expr_44806_mpos)\n                /// @src 55:16394:16672  \"return keccak256(...\"\n                var := /** @src 55:16401:16672  \"keccak256(...\" */ keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:16401:16672  \"keccak256(...\" */ expr_44848_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20), mload(/** @src 55:16401:16672  \"keccak256(...\" */ expr_44848_mpos))\n            }\n            /// @src 55:3664:3940  \"keccak256(...\"\n            function abi_encode_array_bytes32_dyn_memory_ptr(value, pos) -> end\n            {\n                let length := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:3664:3940  \"keccak256(...\" */ value)\n                pos := pos\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := 0x20\n                /// @src 55:3664:3940  \"keccak256(...\"\n                let srcPtr := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:3664:3940  \"keccak256(...\" */ value, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20)\n                /// @src 55:3664:3940  \"keccak256(...\"\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 84:1310:1314  \"1e18\"\n                    mstore(pos, /** @src 55:3664:3940  \"keccak256(...\" */ mload(srcPtr))\n                    pos := /** @src 84:1353:1363  \"bytes32(0)\" */ add(pos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                    /// @src 55:3664:3940  \"keccak256(...\"\n                    srcPtr := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:3664:3940  \"keccak256(...\" */ srcPtr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1)\n                }\n                /// @src 55:3664:3940  \"keccak256(...\"\n                end := pos\n            }\n            function abi_encode_bytes32_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_bytes32_bytes32_bytes32(headStart, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13) -> tail\n            {\n                tail := add(headStart, 448)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(headStart, /** @src 55:3664:3940  \"keccak256(...\" */ 0x848e1bfa1ac4e3576b728bda6721b215c70a7799a5b4866282a71bab954baac8)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 32), /** @src 84:1310:1314  \"1e18\" */ value1)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 64), /** @src 84:1310:1314  \"1e18\" */ value2)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 96), /** @src 84:1310:1314  \"1e18\" */ value3)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 128), /** @src 84:1310:1314  \"1e18\" */ value4)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 160), /** @src 84:1310:1314  \"1e18\" */ value5)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 192), /** @src 84:1310:1314  \"1e18\" */ value6)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 224), /** @src 84:1310:1314  \"1e18\" */ value7)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 256), /** @src 84:1310:1314  \"1e18\" */ value8)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 288), /** @src 84:1310:1314  \"1e18\" */ value9)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 320), /** @src 84:1310:1314  \"1e18\" */ value10)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 352), /** @src 84:1310:1314  \"1e18\" */ value11)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 384), /** @src 84:1310:1314  \"1e18\" */ value12)\n                mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 416), /** @src 84:1310:1314  \"1e18\" */ value13)\n            }\n            /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n            function abi_encode_bytes32_bytes32_bytes32_uint256(headStart, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(headStart, /** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ 0xc2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 32), /** @src 55:6712:6731  \"keccak256(\\\"zkSync\\\")\" */ 0x19b453ce45aaaaf3a300f5a9ec95869b4f28ab10430b572ee218c3a6a5e07d6f)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 64), /** @src 55:6733:6747  \"keccak256(\\\"2\\\")\" */ 0xad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5)\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 96), /** @src 84:1310:1314  \"1e18\" */ value3)\n            }\n            /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n            function abi_encode_packed_stringliteral_301a_bytes32_bytes32(pos, value0, value1) -> end\n            {\n                mstore(pos, shl(240, 6401))\n                /// @src 84:1310:1314  \"1e18\"\n                mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(pos, 2), /** @src 84:1310:1314  \"1e18\" */ value0)\n                mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(pos, 34), /** @src 84:1310:1314  \"1e18\" */ value1)\n                /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n                end := add(pos, 66)\n            }\n            /// @ast-id 44323 @src 55:5621:6857  \"function _encodeHashEIP712Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n            function fun_encodeHashEIP712Transaction(var__transaction_mpos) -> var_\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := mload(/** @src 55:5851:5870  \"_transaction.txType\" */ var__transaction_mpos)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _2 := mload(/** @src 55:5888:5905  \"_transaction.from\" */ add(var__transaction_mpos, 32))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _3 := mload(/** @src 55:5923:5938  \"_transaction.to\" */ add(var__transaction_mpos, 64))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _4 := mload(/** @src 55:5956:5977  \"_transaction.gasLimit\" */ add(var__transaction_mpos, 96))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _5 := mload(/** @src 55:5995:6030  \"_transaction.gasPerPubdataByteLimit\" */ add(var__transaction_mpos, 128))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _6 := mload(/** @src 55:6048:6073  \"_transaction.maxFeePerGas\" */ add(var__transaction_mpos, 160))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _7 := mload(/** @src 55:6091:6124  \"_transaction.maxPriorityFeePerGas\" */ add(var__transaction_mpos, 192))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _8 := mload(/** @src 55:6142:6164  \"_transaction.paymaster\" */ add(var__transaction_mpos, 224))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _9 := mload(/** @src 55:6182:6200  \"_transaction.nonce\" */ add(var__transaction_mpos, 256))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _10 := mload(/** @src 55:6218:6236  \"_transaction.value\" */ add(var__transaction_mpos, 288))\n                /// @src 55:6380:6397  \"_transaction.data\"\n                let _374_mpos := mload(add(var__transaction_mpos, 352))\n                /// @src 55:6370:6398  \"keccak256(_transaction.data)\"\n                let expr := keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:6370:6398  \"keccak256(_transaction.data)\" */ _374_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:6370:6398  \"keccak256(_transaction.data)\" */ _374_mpos))\n                /// @src 55:6443:6467  \"_transaction.factoryDeps\"\n                let _377_mpos := mload(add(var__transaction_mpos, 416))\n                /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                let expr_44287_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                let _11 := sub(/** @src 55:3664:3940  \"keccak256(...\" */ abi_encode_array_bytes32_dyn_memory_ptr(/** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _377_mpos, add(expr_44287_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)), /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ expr_44287_mpos)\n                let _12 := /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)\n                /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                mstore(expr_44287_mpos, add(_11, _12))\n                finalize_allocation(expr_44287_mpos, _11)\n                /// @src 55:6416:6469  \"keccak256(abi.encodePacked(_transaction.factoryDeps))\"\n                let expr_1 := keccak256(/** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ add(expr_44287_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:6416:6469  \"keccak256(abi.encodePacked(_transaction.factoryDeps))\" */ expr_44287_mpos))\n                /// @src 55:6566:6593  \"_transaction.paymasterInput\"\n                let _mpos := mload(add(var__transaction_mpos, 448))\n                /// @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\"\n                let expr_2 := keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\" */ _mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\" */ _mpos))\n                /// @src 55:5777:6608  \"abi.encode(...\"\n                let expr_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                /// @src 55:5777:6608  \"abi.encode(...\"\n                let _13 := add(expr_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                /// @src 55:5777:6608  \"abi.encode(...\"\n                let _14 := sub(abi_encode_bytes32_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_bytes32_bytes32_bytes32(_13, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, expr, expr_1, expr_2), expr_mpos)\n                mstore(expr_mpos, add(_14, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                /// @src 55:5777:6608  \"abi.encode(...\"\n                finalize_allocation(expr_mpos, _14)\n                /// @src 55:5754:6618  \"keccak256(...\"\n                let expr_3 := keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _13, mload(/** @src 55:5754:6618  \"keccak256(...\" */ expr_mpos))\n                /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                let expr_44310_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                let _15 := add(expr_44310_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                let _16 := sub(abi_encode_bytes32_bytes32_bytes32_uint256(_15, /** @src 55:6749:6762  \"block.chainid\" */ chainid()), /** @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\" */ expr_44310_mpos)\n                mstore(expr_44310_mpos, add(_16, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                finalize_allocation(expr_44310_mpos, _16)\n                /// @src 55:6667:6764  \"keccak256(abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid))\"\n                let expr_4 := keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _15, mload(/** @src 55:6667:6764  \"keccak256(abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid))\" */ expr_44310_mpos))\n                /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                let expr_44319_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                let _17 := add(expr_44319_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                let _18 := sub(abi_encode_packed_stringliteral_301a_bytes32_bytes32(_17, expr_4, expr_3), expr_44319_mpos)\n                mstore(expr_44319_mpos, add(_18, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                finalize_allocation(expr_44319_mpos, _18)\n                /// @src 55:6775:6850  \"return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\"\n                var_ := /** @src 55:6782:6850  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\" */ keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _17, mload(/** @src 55:6782:6850  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\" */ expr_44319_mpos))\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function bytes_concat_bytes_bytes(param, param_1) -> outPtr\n            {\n                outPtr := mload(64)\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, 0x20), add(outPtr, 0x20), length)\n                let _1 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, 0x20), add(_1, 0x20), length_1)\n                let _2 := sub(add(_1, length_1), outPtr)\n                mstore(outPtr, _2)\n                finalize_allocation(outPtr, add(_2, 0x20))\n            }\n            function bytes_concat_bytes_stringliteral_d329(param) -> outPtr\n            {\n                outPtr := mload(64)\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, 0x20), add(outPtr, 0x20), length)\n                let _1 := add(outPtr, length)\n                mstore(add(_1, 0x20), shl(247, 257))\n                let _2 := sub(_1, outPtr)\n                mstore(outPtr, add(_2, 2))\n                finalize_allocation(outPtr, add(_2, 34))\n            }\n            function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7) -> outPtr\n            {\n                outPtr := mload(64)\n                let _1 := 0x20\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _1), length)\n                let _2 := add(outPtr, length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, _1), add(_2, _1), length_1)\n                let _3 := add(_2, length_1)\n                let length_2 := mload(param_2)\n                copy_memory_to_memory_with_cleanup(add(param_2, _1), add(_3, _1), length_2)\n                let _4 := add(_3, length_2)\n                let length_3 := mload(param_3)\n                copy_memory_to_memory_with_cleanup(add(param_3, _1), add(_4, _1), length_3)\n                let _5 := add(_4, length_3)\n                let length_4 := mload(param_4)\n                copy_memory_to_memory_with_cleanup(add(param_4, _1), add(_5, _1), length_4)\n                let _6 := add(_5, length_4)\n                let length_5 := mload(param_5)\n                copy_memory_to_memory_with_cleanup(add(param_5, _1), add(_6, _1), length_5)\n                let _7 := add(_6, length_5)\n                let length_6 := mload(param_6)\n                copy_memory_to_memory_with_cleanup(add(param_6, _1), add(_7, _1), length_6)\n                let _8 := add(_7, length_6)\n                let length_7 := mload(param_7)\n                copy_memory_to_memory_with_cleanup(add(param_7, _1), add(_8, _1), length_7)\n                let _9 := sub(add(_8, length_7), outPtr)\n                mstore(outPtr, _9)\n                finalize_allocation(outPtr, add(_9, _1))\n            }\n            /// @ast-id 44507 @src 55:7009:10147  \"function _encodeHashLegacyTransaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n            function fun_encodeHashLegacyTransaction(var_transaction_44327_mpos) -> var\n            {\n                /// @src 55:7544:7588  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                let expr_44338_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:7569:7587  \"_transaction.nonce\" */ add(var_transaction_44327_mpos, 256)))\n                /// @src 55:7769:7820  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                let expr_44349_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:7794:7819  \"_transaction.maxFeePerGas\" */ add(var_transaction_44327_mpos, 160)))\n                /// @src 55:7944:7990  \"bytes.concat(encodedGasPrice, encodedGasLimit)\"\n                let expr_44365_mpos := bytes_concat_bytes_bytes(expr_44349_mpos, /** @src 55:7865:7912  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\" */ fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:7890:7911  \"_transaction.gasLimit\" */ add(var_transaction_44327_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96))))\n                /// @src 55:8036:8095  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                let expr_44381_mpos := fun_encodeAddress(/** @src 55:8061:8094  \"address(uint160(_transaction.to))\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 55:8069:8093  \"uint160(_transaction.to)\" */ convert_uint160_to_contract_ZkMinimalAccount(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:8077:8092  \"_transaction.to\" */ add(var_transaction_44327_mpos, 64)))))\n                /// @src 55:8133:8177  \"RLPEncoder.encodeUint256(_transaction.value)\"\n                let expr_44389_mpos := fun_encodeUint256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:8158:8176  \"_transaction.value\" */ add(var_transaction_44327_mpos, 288)))\n                /// @src 55:8353:8383  \"bytes memory encodedDataLength\"\n                let var_encodedDataLength_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 55:8353:8383  \"bytes memory encodedDataLength\"\n                var_encodedDataLength_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96\n                /// @src 55:8521:8538  \"_transaction.data\"\n                let _1 := add(var_transaction_44327_mpos, 352)\n                let _415_mpos := mload(_1)\n                /// @src 55:8514:8546  \"uint64(_transaction.data.length)\"\n                let expr := convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:8521:8545  \"_transaction.data.length\" */ _415_mpos))\n                /// @src 55:8560:9001  \"if (txDataLen != 1) {...\"\n                switch /** @src 55:8564:8578  \"txDataLen != 1\" */ iszero(eq(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:8564:8578  \"txDataLen != 1\" */ expr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff), /** @src 55:8577:8578  \"1\" */ 0x01))\n                case /** @src 55:8560:9001  \"if (txDataLen != 1) {...\" */ 0 {\n                    /// @src 55:8795:9001  \"if (_transaction.data[0] >= 0x80) {...\"\n                    if /** @src 55:8799:8827  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(/** @src 55:8799:8819  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_415_mpos)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255)), shl(255, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1)))\n                    /// @src 55:8795:9001  \"if (_transaction.data[0] >= 0x80) {...\"\n                    {\n                        /// @src 55:8959:8986  \"encodedDataLength = hex\\\"81\\\"\"\n                        var_encodedDataLength_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                    }\n                }\n                default /// @src 55:8560:9001  \"if (txDataLen != 1) {...\"\n                {\n                    /// @src 55:8709:8774  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                    var_encodedDataLength_mpos := /** @src 55:8729:8774  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                }\n                /// @src 55:9189:9216  \"bytes memory encodedChainId\"\n                let var_encodedChainId_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 55:9189:9216  \"bytes memory encodedChainId\"\n                var_encodedChainId_mpos := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 96\n                /// @src 55:9226:9367  \"if (_transaction.reserved[0] != 0) {...\"\n                if /** @src 55:9230:9259  \"_transaction.reserved[0] != 0\" */ iszero(iszero(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:9230:9251  \"_transaction.reserved\" */ mload(add(var_transaction_44327_mpos, 320)))))\n                /// @src 55:9226:9367  \"if (_transaction.reserved[0] != 0) {...\"\n                {\n                    /// @src 55:9275:9356  \"encodedChainId = bytes.concat(RLPEncoder.encodeUint256(block.chainid), hex\\\"8080\\\")\"\n                    var_encodedChainId_mpos := /** @src 55:9292:9356  \"bytes.concat(RLPEncoder.encodeUint256(block.chainid), hex\\\"8080\\\")\" */ bytes_concat_bytes_stringliteral_d329(/** @src 55:9305:9344  \"RLPEncoder.encodeUint256(block.chainid)\" */ fun_encodeUint256(/** @src 55:9330:9343  \"block.chainid\" */ chainid()))\n                }\n                /// @src 55:9462:9481  \"encodedNonce.length\"\n                let expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ mload(/** @src 55:9462:9481  \"encodedNonce.length\" */ expr_44338_mpos)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum := add(expr_1, mload(/** @src 55:9484:9506  \"encodedGasParam.length\" */ expr_44365_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_1 := add(sum, mload(/** @src 55:9509:9525  \"encodedTo.length\" */ expr_44381_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_2 := add(sum_1, mload(/** @src 55:9528:9547  \"encodedValue.length\" */ expr_44389_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_3 := add(sum_2, mload(/** @src 55:9566:9590  \"encodedDataLength.length\" */ var_encodedDataLength_mpos))\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let sum_4 := add(sum_3, mload(/** @src 55:9593:9610  \"_transaction.data\" */ mload(_1)))\n                /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength(/** @src 55:9777:9795  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(sum_4, mload(/** @src 55:9620:9641  \"encodedChainId.length\" */ var_encodedChainId_mpos))))\n                /// @src 55:9847:10130  \"bytes.concat(...\"\n                let expr_44503_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44338_mpos, expr_44365_mpos, expr_44381_mpos, expr_44389_mpos, var_encodedDataLength_mpos, /** @src 55:10067:10084  \"_transaction.data\" */ mload(_1), /** @src 55:9847:10130  \"bytes.concat(...\" */ var_encodedChainId_mpos)\n                /// @src 55:9817:10140  \"return keccak256(...\"\n                var := /** @src 55:9824:10140  \"keccak256(...\" */ keccak256(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 55:9824:10140  \"keccak256(...\" */ expr_44503_mpos, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0x20), mload(/** @src 55:9824:10140  \"keccak256(...\" */ expr_44503_mpos))\n            }\n            /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n            function allocate_and_zero_memory_array_bytes_11744() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_11684(memPtr_1)\n                mstore(memPtr_1, /** @src 56:1005:1006  \"1\" */ 0x01)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 0x20), calldatasize(), 0x20)\n            }\n            function allocate_and_zero_memory_array_bytes(length) -> memPtr\n            {\n                let _1 := array_allocation_size_string(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_string(length), /** @src 84:2488:2568  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ not(31)))\n            }\n            /// @ast-id 45189 @src 56:835:1603  \"function encodeUint256(uint256 _val) internal pure returns (bytes memory encoded) {...\"\n            function fun_encodeUint256(var_val) -> var_encoded_mpos\n            {\n                /// @src 56:951:1587  \"if (_val < 128) {...\"\n                switch /** @src 56:955:965  \"_val < 128\" */ lt(var_val, /** @src 56:962:965  \"128\" */ 0x80)\n                case /** @src 56:951:1587  \"if (_val < 128) {...\" */ 0 {\n                    /// @src 56:1246:1267  \"_highestByteSet(_val)\"\n                    let expr := fun_highestByteSet(var_val)\n                    /// @src 56:1286:1314  \"encoded = new bytes(hbs + 2)\"\n                    var_encoded_mpos := /** @src 56:1296:1314  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:1306:1313  \"hbs + 2\" */ expr, /** @src 56:1312:1313  \"2\" */ 0x02))\n                    /// @src 56:1332:1370  \"encoded[0] = bytes1(uint8(hbs + 0x81))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:1340:1341  \"0\" */ 0x00, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, add(/** @src 56:1358:1368  \"hbs + 0x81\" */ expr, /** @src 56:1364:1368  \"0x81\" */ 0x81)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255))))\n                    /// @src 56:1486:1573  \"assembly {...\"\n                    mstore(add(var_encoded_mpos, 0x21), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(shl(3, sub(/** @src 56:1403:1405  \"31\" */ 0x1f, /** @src 56:1403:1411  \"31 - hbs\" */ expr)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ var_val))\n                }\n                default /// @src 56:951:1587  \"if (_val < 128) {...\"\n                {\n                    /// @src 56:985:1007  \"encoded = new bytes(1)\"\n                    var_encoded_mpos := /** @src 56:995:1007  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_11744()\n                    /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                    let expr_1 := /** @src 56:1148:1149  \"0\" */ 0x00\n                    /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                    switch /** @src 56:1140:1149  \"_val == 0\" */ iszero(var_val)\n                    case /** @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\" */ 0 {\n                        expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, /** @src 56:1181:1192  \"uint8(_val)\" */ var_val), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255))\n                    }\n                    default /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                    {\n                        expr_1 := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(255, /** @src 84:1510:1532  \"new ZkMinimalAccount()\" */ 1)\n                    }\n                    /// @src 56:1126:1193  \"encoded[0] = (_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:1148:1149  \"0\" */ 0x00, /** @src 56:1126:1193  \"encoded[0] = (_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\" */ expr_1))\n                }\n            }\n            /// @ast-id 45098 @src 56:228:829  \"function encodeAddress(address _val) internal pure returns (bytes memory encoded) {...\"\n            function fun_encodeAddress(var__val) -> var_encoded_45080_mpos\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let memPtr := mload(64)\n                finalize_allocation_11684(memPtr)\n                mstore(memPtr, /** @src 56:441:445  \"0x15\" */ 0x15)\n                /// @src 56:421:446  \"encoded = new bytes(0x15)\"\n                var_encoded_45080_mpos := memPtr\n                /// @src 56:501:823  \"assembly {...\"\n                mstore(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(memPtr, 0x20), /** @src 56:501:823  \"assembly {...\" */ shl(250, 37))\n                mstore(add(memPtr, 0x21), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(96, /** @src 56:478:491  \"bytes20(_val)\" */ var__val), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ not(/** @src 84:1410:1452  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 0xffffffffffffffffffffffff)))\n            }\n            /// @ast-id 45209 @src 56:1879:2038  \"function encodeNonSingleBytesLen(uint64 _len) internal pure returns (bytes memory) {...\"\n            function fun_encodeNonSingleBytesLen(var_len) -> var_45195_mpos\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := and(/** @src 56:1979:1988  \"_len != 1\" */ var_len, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff)\n                if /** @src 56:1979:1988  \"_len != 1\" */ eq(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 56:1987:1988  \"1\" */ 0x01)\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, /** @src 56:1987:1988  \"1\" */ 0x01)\n                    /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                    revert(0, 0x24)\n                }\n                /// @src 56:2006:2031  \"_encodeLength(_len, 0x80)\"\n                let var_encoded_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                switch /** @src 56:2489:2498  \"_len < 56\" */ lt(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 56:2496:2498  \"56\" */ 0x38)\n                case /** @src 56:2485:3020  \"if (_len < 56) {...\" */ 0 {\n                    /// @src 56:2653:2683  \"_highestByteSet(uint256(_len))\"\n                    let expr := fun_highestByteSet(_1)\n                    /// @src 56:2702:2730  \"encoded = new bytes(hbs + 2)\"\n                    var_encoded_mpos := /** @src 56:2712:2730  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:2722:2729  \"hbs + 2\" */ expr, /** @src 56:2728:2729  \"2\" */ 0x02))\n                    /// @src 56:2748:2794  \"encoded[0] = bytes1(uint8(_offset + hbs + 56))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src -1:-1:-1 */ 0, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, add(/** @src 56:2774:2787  \"_offset + hbs\" */ expr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 184)), shl(248, 255))))\n                    /// @src 56:2919:3006  \"assembly {...\"\n                    mstore(add(var_encoded_mpos, 0x21), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(shl(3, sub(/** @src 56:2827:2829  \"31\" */ 0x1f, /** @src 56:2827:2835  \"31 - hbs\" */ expr)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1))\n                }\n                default /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                {\n                    /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                    var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_11744()\n                    /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src -1:-1:-1 */ 0, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, add(_1, /** @src 56:2026:2030  \"0x80\" */ 0x80)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255))))\n                }\n                /// @src 56:1999:2031  \"return _encodeLength(_len, 0x80)\"\n                var_45195_mpos := var_encoded_mpos\n            }\n            /// @ast-id 45405 @src 56:3234:3908  \"function _highestByteSet(uint256 _number) private pure returns (uint256 hbs) {...\"\n            function fun_highestByteSet(var_number) -> var_hbs\n            {\n                /// @src 56:3298:3309  \"uint256 hbs\"\n                var_hbs := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0\n                /// @src 56:3345:3453  \"if (_number > type(uint128).max) {...\"\n                if /** @src 56:3349:3376  \"_number > type(uint128).max\" */ gt(var_number, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffffffffffffffffffff)\n                /// @src 56:3345:3453  \"if (_number > type(uint128).max) {...\"\n                {\n                    /// @src 56:3396:3411  \"_number >>= 128\"\n                    var_number := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shr(128, /** @src 56:3396:3411  \"_number >>= 128\" */ var_number)\n                    /// @src 56:3429:3438  \"hbs += 16\"\n                    var_hbs := /** @src 56:3436:3438  \"16\" */ 0x10\n                }\n                /// @src 56:3466:3571  \"if (_number > type(uint64).max) {...\"\n                if /** @src 56:3470:3496  \"_number > type(uint64).max\" */ gt(var_number, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff)\n                /// @src 56:3466:3571  \"if (_number > type(uint64).max) {...\"\n                {\n                    /// @src 56:3516:3530  \"_number >>= 64\"\n                    var_number := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shr(64, /** @src 56:3516:3530  \"_number >>= 64\" */ var_number)\n                    /// @src 56:3548:3556  \"hbs += 8\"\n                    var_hbs := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:3548:3556  \"hbs += 8\" */ var_hbs, /** @src 56:3555:3556  \"8\" */ 0x08)\n                }\n                /// @src 56:3584:3689  \"if (_number > type(uint32).max) {...\"\n                if /** @src 56:3588:3614  \"_number > type(uint32).max\" */ gt(var_number, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffff)\n                /// @src 56:3584:3689  \"if (_number > type(uint32).max) {...\"\n                {\n                    /// @src 56:3634:3648  \"_number >>= 32\"\n                    var_number := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shr(32, /** @src 56:3634:3648  \"_number >>= 32\" */ var_number)\n                    /// @src 56:3666:3674  \"hbs += 4\"\n                    var_hbs := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:3666:3674  \"hbs += 4\" */ var_hbs, /** @src 56:3673:3674  \"4\" */ 0x04)\n                }\n                /// @src 56:3702:3807  \"if (_number > type(uint16).max) {...\"\n                if /** @src 56:3706:3732  \"_number > type(uint16).max\" */ gt(var_number, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffff)\n                /// @src 56:3702:3807  \"if (_number > type(uint16).max) {...\"\n                {\n                    /// @src 56:3752:3766  \"_number >>= 16\"\n                    var_number := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shr(16, /** @src 56:3752:3766  \"_number >>= 16\" */ var_number)\n                    /// @src 56:3784:3792  \"hbs += 2\"\n                    var_hbs := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:3784:3792  \"hbs += 2\" */ var_hbs, /** @src 56:3791:3792  \"2\" */ 0x02)\n                }\n                /// @src 56:3820:3892  \"if (_number > type(uint8).max) {...\"\n                if /** @src 56:3824:3849  \"_number > type(uint8).max\" */ gt(var_number, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xff)\n                /// @src 56:3820:3892  \"if (_number > type(uint8).max) {...\"\n                {\n                    /// @src 56:3869:3877  \"hbs += 1\"\n                    var_hbs := /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:3869:3877  \"hbs += 1\" */ var_hbs, /** @src 56:3876:3877  \"1\" */ 0x01)\n                }\n            }\n            /// @ast-id 45314 @src 56:2354:3036  \"function _encodeLength(uint64 _len, uint256 _offset) private pure returns (bytes memory encoded) {...\"\n            function fun_encodeLength_11736() -> var_encoded_mpos\n            {\n                /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_11744()\n                /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                mstore8(memory_array_index_access_bytes(var_encoded_mpos), /** @src 56:2336:2340  \"0xc0\" */ 0xc0)\n            }\n            /// @ast-id 45314 @src 56:2354:3036  \"function _encodeLength(uint64 _len, uint256 _offset) private pure returns (bytes memory encoded) {...\"\n            function fun_encodeLength(var_len) -> var_encoded_mpos\n            {\n                /// @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\"\n                let _1 := and(/** @src 56:2489:2498  \"_len < 56\" */ var_len, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 0xffffffffffffffff)\n                /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                switch /** @src 56:2489:2498  \"_len < 56\" */ lt(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1, /** @src 56:2496:2498  \"56\" */ 0x38)\n                case /** @src 56:2485:3020  \"if (_len < 56) {...\" */ 0 {\n                    /// @src 56:2653:2683  \"_highestByteSet(uint256(_len))\"\n                    let expr := fun_highestByteSet(_1)\n                    /// @src 56:2702:2730  \"encoded = new bytes(hbs + 2)\"\n                    var_encoded_mpos := /** @src 56:2712:2730  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ add(/** @src 56:2722:2729  \"hbs + 2\" */ expr, /** @src 56:2728:2729  \"2\" */ 0x02))\n                    /// @src 56:2748:2794  \"encoded[0] = bytes1(uint8(_offset + hbs + 56))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:2756:2757  \"0\" */ 0x00, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, add(/** @src 56:2774:2787  \"_offset + hbs\" */ expr, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ 248)), shl(248, 255))))\n                    /// @src 56:2919:3006  \"assembly {...\"\n                    mstore(add(var_encoded_mpos, 0x21), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(shl(3, sub(/** @src 56:2827:2829  \"31\" */ 0x1f, /** @src 56:2827:2835  \"31 - hbs\" */ expr)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ _1))\n                }\n                default /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                {\n                    /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                    var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_11744()\n                    /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                    mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:2566:2567  \"0\" */ 0x00, /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ and(shl(248, add(_1, /** @src 56:2336:2340  \"0xc0\" */ 0xc0)), /** @src 84:1141:6271  \"contract ZkMinimalAccountTest is Test {...\" */ shl(248, 255))))\n                }\n            }\n        }\n        /// @use-src 61:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 62:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 63:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 64:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 65:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n        object \"ERC20Mock_47219\" {\n            code {\n                {\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := 64\n                    let newFreePtr := add(_1, _2)\n                    let _3 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr)\n                    mstore(_1, 9)\n                    let _4 := 32\n                    mstore(add(_1, _4), \"ERC20Mock\")\n                    let memPtr := mload(_2)\n                    let newFreePtr_1 := add(memPtr, _2)\n                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr_1)\n                    let _5 := 4\n                    mstore(memPtr, _5)\n                    mstore(add(memPtr, _4), \"E20M\")\n                    let newLen := mload(_1)\n                    if gt(newLen, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    /// @src 63:1962:1975  \"_name = name_\"\n                    let _6 := 0x03\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _7 := sload(/** @src 63:1962:1975  \"_name = name_\" */ _6)\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _8 := 1\n                    length := shr(_8, _7)\n                    let outOfPlaceEncoding := and(_7, _8)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    let _9 := 31\n                    if gt(length, _9)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 63:1962:1975  \"_name = name_\" */ _6)\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let deleteStart := add(data, shr(5, add(newLen, _9)))\n                        if lt(newLen, _4) { deleteStart := data }\n                        let _10 := add(data, shr(5, add(length, _9)))\n                        let start := deleteStart\n                        for { } lt(start, _10) { start := add(start, _8) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    srcOffset := _4\n                    switch gt(newLen, _9)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 63:1962:1975  \"_name = name_\" */ _6)\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                        {\n                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                            dstPtr := add(dstPtr, _8)\n                            srcOffset := add(srcOffset, _4)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(_1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ add(shl(_8, newLen), _8))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        if newLen\n                        {\n                            value := mload(add(_1, srcOffset))\n                        }\n                        sstore(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), not(0)))), shl(_8, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr)\n                    if gt(newLen_1, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    let _11 := sload(_5)\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    length_1 := shr(_8, _11)\n                    let outOfPlaceEncoding_1 := and(_11, _8)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    if gt(length_1, _9)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _9)))\n                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                        let _12 := add(data_1, shr(5, add(length_1, _9)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _12) { start_1 := add(start_1, _8) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    srcOffset_1 := _4\n                    switch gt(newLen_1, _9)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _8)\n                            srcOffset_1 := add(srcOffset_1, _4)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(_5, add(shl(_8, newLen_1), _8))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr, srcOffset_1))\n                        }\n                        sstore(_5, or(and(value_1, not(shr(shl(/** @src 63:1962:1975  \"_name = name_\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), not(0)))), shl(_8, newLen_1)))\n                    }\n                    let _13 := mload(_2)\n                    let _14 := datasize(\"ERC20Mock_47219_deployed\")\n                    codecopy(_13, dataoffset(\"ERC20Mock_47219_deployed\"), _14)\n                    return(_13, _14)\n                }\n            }\n            /// @use-src 62:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 63:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n            object \"ERC20Mock_47219_deployed\" {\n                code {\n                    {\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 63:2151:2156  \"_name\" */ 0x03)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(1, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, 1)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 63:2151:2156  \"_name\" */ 0x03)\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_3706()\n                                let _7 := calldataload(36)\n                                /// @src 63:10057:10146  \"if (owner == address(0)) {...\"\n                                if /** @src 63:10061:10080  \"owner == address(0)\" */ iszero(/** @src 69:735:745  \"msg.sender\" */ caller())\n                                /// @src 63:10057:10146  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    let _8 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_8, shl(224, 0xe602df05))\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_8, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                let _9 := and(/** @src 63:10159:10180  \"spender == address(0)\" */ value0, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 63:10155:10245  \"if (spender == address(0)) {...\"\n                                if /** @src 63:10159:10180  \"spender == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _9)\n                                /// @src 63:10155:10245  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    let _10 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_10, shl(225, 0x4a1406b1))\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_10, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                mstore(_4, /** @src 69:735:745  \"msg.sender\" */ caller())\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(0x20, /** @src 63:9105:9109  \"true\" */ 0x01)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _11 := keccak256(_4, _2)\n                                mstore(_4, _9)\n                                mstore(0x20, _11)\n                                sstore(keccak256(_4, _2), _7)\n                                /// @src 63:10333:10364  \"Approval(owner, spender, value)\"\n                                let _12 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_12, _7)\n                                /// @src 63:10333:10364  \"Approval(owner, spender, value)\"\n                                log3(_12, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 63:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 69:735:745  \"msg.sender\" */ caller(), /** @src 63:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 63:9105:9109  \"true\" */ 0x01)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _13 := sload(/** @src 63:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _13)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_3706()\n                                let value1 := abi_decode_address()\n                                let value := calldataload(68)\n                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(_4, _14)\n                                mstore(32, 1)\n                                let _15 := keccak256(_4, _2)\n                                mstore(_4, /** @src 69:735:745  \"msg.sender\" */ caller())\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(32, _15)\n                                let _16 := sload(keccak256(_4, _2))\n                                /// @src 63:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 63:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 63:10848:10865  \"type(uint256).max\" */ not(0)))\n                                /// @src 63:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 63:10881:11011  \"if (currentAllowance < value) {...\"\n                                    if /** @src 63:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                    /// @src 63:10881:11011  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 63:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _17 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 63:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 69:735:745  \"msg.sender\" */ caller(), /** @src 63:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                    }\n                                    /// @src 63:10057:10146  \"if (owner == address(0)) {...\"\n                                    if /** @src 63:10061:10080  \"owner == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _14)\n                                    /// @src 63:10057:10146  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        let _18 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_18, shl(224, 0xe602df05))\n                                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                        /// @src 63:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_18, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                    }\n                                    /// @src 63:10155:10245  \"if (spender == address(0)) {...\"\n                                    if /** @src 63:10159:10180  \"spender == address(0)\" */ iszero(/** @src 69:735:745  \"msg.sender\" */ caller())\n                                    /// @src 63:10155:10245  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        let _19 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_19, shl(225, 0x4a1406b1))\n                                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                        /// @src 63:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_19, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                    }\n                                    mstore(_4, _14)\n                                    mstore(32, 1)\n                                    let _20 := keccak256(_4, _2)\n                                    mstore(_4, /** @src 69:735:745  \"msg.sender\" */ caller())\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(32, _20)\n                                    sstore(keccak256(_4, _2), sub(/** @src 63:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                }\n                                /// @src 63:5249:5254  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 63:3075:3077  \"18\" */ 0x12)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_3706()\n                                let value_1 := calldataload(36)\n                                let _21 := and(/** @src 63:7791:7812  \"account == address(0)\" */ value0_2, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 63:7787:7878  \"if (account == address(0)) {...\"\n                                if /** @src 63:7791:7812  \"account == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _21)\n                                /// @src 63:7787:7878  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 63:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    let _22 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 63:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_22, shl(224, 0xec442f05))\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 63:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 63:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_22, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                let _23 := sload(/** @src 63:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let sum := add(_23, value_1)\n                                if gt(_23, sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, 36)\n                                }\n                                sstore(/** @src 63:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ sum)\n                                mstore(_4, _21)\n                                mstore(0x20, _4)\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, add(sload(/** @src 63:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_1))\n                                /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                                let _24 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_24, value_1)\n                                /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_24, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 63:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4, /** @src 63:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_3706(), sub(shl(160, 1), 1)))\n                                mstore(32, _4)\n                                let _25 := sload(keccak256(_4, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _25)\n                                return(memPos_4, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr := mload(_2)\n                                let ret_1 := _4\n                                let slotValue_1 := sload(_3)\n                                let length_1 := _4\n                                let _26 := 1\n                                length_1 := shr(1, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _27 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                }\n                                case 1 {\n                                    mstore(_4, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := _4\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _26)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _27)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0x9dc29fac {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_3706()\n                                let value_2 := calldataload(36)\n                                let _28 := and(/** @src 63:8317:8338  \"account == address(0)\" */ value0_3, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 63:8313:8402  \"if (account == address(0)) {...\"\n                                if /** @src 63:8317:8338  \"account == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _28)\n                                /// @src 63:8313:8402  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 63:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    let _29 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 63:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_29, shl(225, 0x4b637e8f))\n                                    /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 63:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_29, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 63:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    revert(_29, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                mstore(_4, _28)\n                                mstore(0x20, _4)\n                                let _30 := sload(keccak256(_4, _2))\n                                /// @src 63:6599:6714  \"if (fromBalance < value) {...\"\n                                if /** @src 63:6603:6622  \"fromBalance < value\" */ lt(_30, value_2)\n                                /// @src 63:6599:6714  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 63:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _31 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 63:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_31, shl(226, 0x391434e3))\n                                    revert(_31, sub(abi_encode_address_uint256_uint256(add(_31, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 63:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ value0_3, _30, value_2), _31))\n                                }\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(_4, _28)\n                                mstore(0x20, _4)\n                                sstore(keccak256(_4, _2), sub(/** @src 63:6852:6871  \"fromBalance - value\" */ _30, value_2))\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                sstore(/** @src 63:7073:7094  \"_totalSupply -= value\" */ 0x02, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(sload(/** @src 63:7073:7094  \"_totalSupply -= value\" */ 0x02), /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_2))\n                                /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                                let _32 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_32, value_2)\n                                /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_32, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 63:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _28, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                return(_4, _4)\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_3706()\n                                /// @src 63:3754:3759  \"value\"\n                                fun_transfer(/** @src 69:735:745  \"msg.sender\" */ caller(), /** @src 63:3754:3759  \"value\" */ value0_4, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ calldataload(36))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, 1)\n                                return(memPos_5, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address_3706()\n                                let value1_1 := abi_decode_address()\n                                let _33 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_5, _33))\n                                mstore(32, /** @src 63:3952:3963  \"_allowances\" */ 0x01)\n                                /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _34 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _33))\n                                mstore(32, _34)\n                                let _35 := sload(keccak256(_4, _2))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, _35)\n                                return(memPos_6, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, 32)\n                        let length := mload(value0)\n                        mstore(add(headStart, 32), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address_3706() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 47464 @src 63:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 63:5739:5757  \"from == address(0)\" */ var_from, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                        /// @src 63:5735:5821  \"if (from == address(0)) {...\"\n                        if /** @src 63:5739:5757  \"from == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        /// @src 63:5735:5821  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 63:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                            /// @src 63:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, /** @src 63:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            mstore(/** @src 63:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 63:5755:5756  \"0\" */ 0x00)\n                            /// @src 63:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 63:5834:5850  \"to == address(0)\" */ var_to, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                        /// @src 63:5830:5916  \"if (to == address(0)) {...\"\n                        if /** @src 63:5834:5850  \"to == address(0)\" */ iszero(/** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        /// @src 63:5830:5916  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 63:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                            /// @src 63:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 63:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            mstore(/** @src 63:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 63:5755:5756  \"0\" */ 0x00)\n                            /// @src 63:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                        }\n                        /// @src 63:6356:6896  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        mstore(0x20, /** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _7 := sload(keccak256(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40))\n                        /// @src 63:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 63:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                        /// @src 63:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 63:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _8 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                            /// @src 63:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_8, shl(226, 0x391434e3))\n                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                        }\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        mstore(0x20, /** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        sstore(keccak256(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40), sub(/** @src 63:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                        /// @src 62:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 63:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 63:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ var_value))\n                        /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                        let _9 := /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                        mstore(_9, var_value)\n                        /// @src 63:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_9, /** @src 62:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 63:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 40:\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IAccount.sol\", 60:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 82:\"src/zksync/ZkMinimalAccount.sol\"\n        object \"ZkMinimalAccount_51406\" {\n            code {\n                {\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    /// @src 60:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 60:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 82:3195:3205  \"msg.sender\" */ caller())\n                    /// @src 60:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_1, shl(224, 0x1e4fbdf7))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        mstore(/** @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_1, 4), /** @src 60:1297:1298  \"0\" */ 0x00)\n                        /// @src 60:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 36)\n                    }\n                    let _2 := sload(/** @src 60:1297:1298  \"0\" */ 0x00)\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    sstore(/** @src 60:1297:1298  \"0\" */ 0x00, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 82:3195:3205  \"msg.sender\" */ caller()))\n                    /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                    /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src 60:1297:1298  \"0\" */ 0x00, 0x00, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 82:3195:3205  \"msg.sender\" */ caller())\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    let _4 := datasize(\"ZkMinimalAccount_51406_deployed\")\n                    codecopy(_3, dataoffset(\"ZkMinimalAccount_51406_deployed\"), _4)\n                    return(_3, _4)\n                }\n            }\n            /// @use-src 39:\"lib/foundry-era-contracts/src/system-contracts/contracts/Constants.sol\", 40:\"lib/foundry-era-contracts/src/system-contracts/contracts/interfaces/IAccount.sol\", 55:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/MemoryTransactionHelper.sol\", 56:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/RLPEncoder.sol\", 58:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/SystemContractsCaller.sol\", 59:\"lib/foundry-era-contracts/src/system-contracts/contracts/libraries/Utils.sol\", 60:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 82:\"src/zksync/ZkMinimalAccount.sol\"\n            object \"ZkMinimalAccount_51406_deployed\" {\n                code {\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        mstore(64, 128)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x202bcce7 {\n                                let param, param_1, param_2 := abi_decode_bytes32t_bytes32t_struct_Transaction(calldatasize())\n                                /// @src 82:2817:2931  \"if (msg.sender != BOOTLOADER_FORMAL_ADDRESS) {...\"\n                                if /** @src 82:2821:2860  \"msg.sender != BOOTLOADER_FORMAL_ADDRESS\" */ iszero(eq(/** @src 82:2821:2831  \"msg.sender\" */ caller(), /** @src 39:1149:1155  \"0x8000\" */ 32769))\n                                /// @src 82:2817:2931  \"if (msg.sender != BOOTLOADER_FORMAL_ADDRESS) {...\"\n                                {\n                                    /// @src 82:2883:2920  \"ZkMinimalAccount__NotFromBootLoader()\"\n                                    let _1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                    /// @src 82:2883:2920  \"ZkMinimalAccount__NotFromBootLoader()\"\n                                    mstore(_1, shl(224, 0xb70cd795))\n                                    revert(_1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 4)\n                                }\n                                /// @src 82:2940:2941  \"_\"\n                                let _2 := /** @src 82:3952:3986  \"_validateTransaction(_transaction)\" */ fun_validateTransaction(/** @src 82:2940:2941  \"_\" */ param_2)\n                                /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                                let memPos := mload(64)\n                                mstore(memPos, and(_2, shl(224, 0xffffffff)))\n                                return(memPos, 32)\n                            }\n                            case 0x715018a6 {\n                                external_fun_renounceOwnership()\n                            }\n                            case 0x8da5cb5b { external_fun_owner() }\n                            case 0xa28c1aee {\n                                external_fun_prepareForPaymaster()\n                            }\n                            case 0xdf9c1589 {\n                                external_fun_executeTransaction()\n                            }\n                            case 0xe2f318e3 {\n                                external_fun_payForTransaction()\n                            }\n                            case 0xeeb8cb09 {\n                                external_fun_executeTransactionFromOutside()\n                            }\n                            case 0xf2fde38b {\n                                external_fun_transferOwnership()\n                            }\n                        }\n                        if iszero(calldatasize()) { stop() }\n                        revert(0, 0)\n                    }\n                    function panic_error_0x41()\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    function finalize_allocation_10728(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function allocate_memory() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 0x0200)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_decode_array_uint256(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 128)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                        let dst := memPtr\n                        let srcEnd := add(offset, 128)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let src := offset\n                        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, 0x20)\n                        }\n                        array := memPtr\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function abi_decode_bytes(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := array_allocation_size_bytes(_1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _2)\n                        mstore(memPtr, _1)\n                        if gt(add(add(offset, _1), 0x20), end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                        mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        array := memPtr\n                    }\n                    function abi_decode_array_bytes32_dyn(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := 0x20\n                        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n                        let _3 := shl(5, _1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, add(_3, _2))\n                        let dst := memPtr\n                        mstore(memPtr, _1)\n                        dst := add(memPtr, _2)\n                        let srcEnd := add(add(offset, _3), _2)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let src := add(offset, _2)\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _2)\n                        }\n                        array := memPtr\n                    }\n                    function abi_decode_struct_Transaction(headStart, end) -> value\n                    {\n                        if slt(sub(end, headStart), 0x0260) { revert(0, 0) }\n                        value := allocate_memory()\n                        mstore(value, calldataload(headStart))\n                        mstore(add(value, 32), calldataload(add(headStart, 32)))\n                        mstore(add(value, 64), calldataload(add(headStart, 64)))\n                        mstore(add(value, 96), calldataload(add(headStart, 96)))\n                        mstore(add(value, 128), calldataload(add(headStart, 128)))\n                        mstore(add(value, 160), calldataload(add(headStart, 160)))\n                        mstore(add(value, 192), calldataload(add(headStart, 192)))\n                        mstore(add(value, 224), calldataload(add(headStart, 224)))\n                        let _1 := 256\n                        mstore(add(value, _1), calldataload(add(headStart, _1)))\n                        let _2 := 288\n                        mstore(add(value, _2), calldataload(add(headStart, _2)))\n                        let _3 := 320\n                        mstore(add(value, _3), abi_decode_array_uint256(add(headStart, _3), end))\n                        let _4 := 448\n                        let offset := calldataload(add(headStart, _4))\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(0, 0) }\n                        mstore(add(value, 0x0160), abi_decode_bytes(add(headStart, offset), end))\n                        let _6 := 480\n                        let offset_1 := calldataload(add(headStart, _6))\n                        if gt(offset_1, _5) { revert(0, 0) }\n                        mstore(add(value, 0x0180), abi_decode_bytes(add(headStart, offset_1), end))\n                        let offset_2 := calldataload(add(headStart, 0x0200))\n                        if gt(offset_2, _5) { revert(0, 0) }\n                        mstore(add(value, 0x01a0), abi_decode_array_bytes32_dyn(add(headStart, offset_2), end))\n                        let offset_3 := calldataload(add(headStart, 544))\n                        if gt(offset_3, _5) { revert(0, 0) }\n                        mstore(add(value, _4), abi_decode_bytes(add(headStart, offset_3), end))\n                        let offset_4 := calldataload(add(headStart, 576))\n                        if gt(offset_4, _5) { revert(0, 0) }\n                        mstore(add(value, _6), abi_decode_bytes(add(headStart, offset_4), end))\n                    }\n                    function abi_decode_bytes32t_bytes32t_struct_Transaction(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        value0 := calldataload(4)\n                        value1 := calldataload(36)\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        value2 := abi_decode_struct_Transaction(add(4, offset), dataEnd)\n                    }\n                    function external_fun_renounceOwnership()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        let _1 := 0\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 60:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _2 := sload(_1)\n                        sstore(_1, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1, _1, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), _1)\n                        return(_1, _1)\n                    }\n                    function cleanup_address(value) -> cleaned\n                    {\n                        cleaned := and(value, sub(shl(160, 1), 1))\n                    }\n                    function external_fun_owner()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        return(memPos, 32)\n                    }\n                    function external_fun_prepareForPaymaster()\n                    {\n                        let param, param_1, param_2 := abi_decode_bytes32t_bytes32t_struct_Transaction(calldatasize())\n                        return(0, 0)\n                    }\n                    function external_fun_executeTransaction()\n                    {\n                        let param, param_1, param_2 := abi_decode_bytes32t_bytes32t_struct_Transaction(calldatasize())\n                        /// @src 82:3008:3072  \"msg.sender != BOOTLOADER_FORMAL_ADDRESS && msg.sender != owner()\"\n                        let expr := /** @src 82:3008:3047  \"msg.sender != BOOTLOADER_FORMAL_ADDRESS\" */ iszero(eq(/** @src 82:3008:3018  \"msg.sender\" */ caller(), /** @src 39:1149:1155  \"0x8000\" */ 32769))\n                        /// @src 82:3008:3072  \"msg.sender != BOOTLOADER_FORMAL_ADDRESS && msg.sender != owner()\"\n                        if expr\n                        {\n                            expr := /** @src 82:3051:3072  \"msg.sender != owner()\" */ iszero(eq(/** @src 82:3008:3018  \"msg.sender\" */ caller(), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(sload(/** @src -1:-1:-1 */ 0), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))))\n                        }\n                        /// @src 82:3004:3150  \"if (msg.sender != BOOTLOADER_FORMAL_ADDRESS && msg.sender != owner()) {...\"\n                        if expr\n                        {\n                            /// @src 82:3095:3139  \"ZkMinimalAccount__NotFromBootLoaderOrOwner()\"\n                            let _1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 82:3095:3139  \"ZkMinimalAccount__NotFromBootLoaderOrOwner()\"\n                            mstore(_1, shl(226, 0x33b26e5f))\n                            revert(_1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 4)\n                        }\n                        /// @src 82:4191:4224  \"_executeTransaction(_transaction)\"\n                        pop(fun_executeTransaction(param_2))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        return(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function external_fun_payForTransaction()\n                    {\n                        let param, param_1, param_2 := abi_decode_bytes32t_bytes32t_struct_Transaction(calldatasize())\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _1 := mload(/** @src 55:26782:26807  \"_transaction.maxFeePerGas\" */ add(param_2, 160))\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 82:4638:4715  \"if (!success) {...\"\n                        if /** @src 82:4642:4650  \"!success\" */ iszero(/** @src 55:26842:26933  \"assembly {...\" */ call(gas(), /** @src 39:1149:1155  \"0x8000\" */ 32769, /** @src 55:26782:26831  \"_transaction.maxFeePerGas * _transaction.gasLimit\" */ checked_mul_uint256(_1, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:26810:26831  \"_transaction.gasLimit\" */ add(param_2, 96))), /** @src -1:-1:-1 */ _2, _2, _2, _2))\n                        /// @src 82:4638:4715  \"if (!success) {...\"\n                        {\n                            /// @src 82:4673:4704  \"ZkMinimalAccount__FailedToPay()\"\n                            let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 82:4673:4704  \"ZkMinimalAccount__FailedToPay()\"\n                            mstore(_3, shl(225, 0x6003323f))\n                            revert(_3, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 4)\n                        }\n                        return(/** @src -1:-1:-1 */ _2, _2)\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function external_fun_executeTransactionFromOutside()\n                    {\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let value0 := abi_decode_struct_Transaction(add(4, offset), calldatasize())\n                        /// @src 82:4336:4370  \"_validateTransaction(_transaction)\"\n                        pop(fun_validateTransaction(value0))\n                        /// @src 82:4380:4413  \"_executeTransaction(_transaction)\"\n                        pop(fun_executeTransaction(value0))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        return(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function external_fun_transferOwnership()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let value := calldataload(4)\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(value, _1)\n                        if iszero(eq(value, _2))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 60:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 60:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 60:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _2)\n                        /// @src 60:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_3, shl(224, 0x1e4fbdf7))\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            mstore(/** @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_3, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 4), /** @src -1:-1:-1 */ 0)\n                            /// @src 60:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_3, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 36)\n                        }\n                        /// @src 60:3004:3010  \"_owner\"\n                        let _4 := 0x00\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _5 := sload(/** @src 60:3004:3010  \"_owner\" */ _4)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        sstore(/** @src 60:3004:3010  \"_owner\" */ _4, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ or(and(_5, shl(160, 0xffffffffffffffffffffffff)), _2))\n                        /// @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 60:3004:3010  \"_owner\" */ _4, _4, /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(_5, _1), /** @src 60:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        return(/** @src 60:3004:3010  \"_owner\" */ _4, _4)\n                    }\n                    /// @src 39:1149:1155  \"0x8000\"\n                    function panic_error_0x11()\n                    {\n                        mstore(0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(224, 0x4e487b71))\n                        /// @src 39:1149:1155  \"0x8000\"\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function convert_uint256_to_uint32(value) -> converted\n                    {\n                        converted := and(value, 0xffffffff)\n                    }\n                    /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                    function abi_encode_uint256(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 32)\n                        mstore(headStart, value0)\n                    }\n                    /// @ast-id 51335 @src 82:5044:6337  \"function _validateTransaction(Transaction memory _transaction) internal returns (bytes4 magic) {...\"\n                    function fun_validateTransaction(var_transaction_51242_mpos) -> var_magic\n                    {\n                        /// @src 82:5420:5437  \"uint32(gasleft())\"\n                        let expr := convert_uint256_to_uint32(/** @src 82:5427:5436  \"gasleft()\" */ gas())\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _1 := mload(/** @src 82:5573:5591  \"_transaction.nonce\" */ add(var_transaction_51242_mpos, 256))\n                        /// @src 82:5517:5593  \"abi.encodeCall(INonceHolder.incrementMinNonceIfEquals, (_transaction.nonce))\"\n                        let expr_51267_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                        /// @src 82:5517:5593  \"abi.encodeCall(INonceHolder.incrementMinNonceIfEquals, (_transaction.nonce))\"\n                        mstore(add(expr_51267_mpos, 0x20), shl(227, 0x1c24739b))\n                        let _2 := sub(abi_encode_uint256(add(expr_51267_mpos, 36), _1), expr_51267_mpos)\n                        mstore(expr_51267_mpos, add(_2, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ not(31)))\n                        /// @src 82:5517:5593  \"abi.encodeCall(INonceHolder.incrementMinNonceIfEquals, (_transaction.nonce))\"\n                        finalize_allocation(expr_51267_mpos, _2)\n                        /// @src 82:5354:5603  \"SystemContractsCaller.systemCallWithPropagatedRevert(...\"\n                        pop(fun_systemCallWithPropagatedRevert(expr, expr_51267_mpos))\n                        /// @src 82:5677:5712  \"_transaction.totalRequiredBalance()\"\n                        let expr_1 := fun_totalRequiredBalance(var_transaction_51242_mpos)\n                        /// @src 82:5722:5840  \"if (totalRequiredBalance > address(this).balance) {...\"\n                        if /** @src 82:5726:5770  \"totalRequiredBalance > address(this).balance\" */ gt(expr_1, /** @src 82:5749:5770  \"address(this).balance\" */ selfbalance())\n                        /// @src 82:5722:5840  \"if (totalRequiredBalance > address(this).balance) {...\"\n                        {\n                            /// @src 82:5793:5829  \"ZkMinimalAccount__NotEnoughBalance()\"\n                            let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 82:5793:5829  \"ZkMinimalAccount__NotEnoughBalance()\"\n                            mstore(_3, shl(227, 0x0d363a57))\n                            revert(_3, /** @src 82:5517:5593  \"abi.encodeCall(INonceHolder.incrementMinNonceIfEquals, (_transaction.nonce))\" */ 4)\n                        }\n                        /// @src 82:5957:6004  \"MessageHashUtils.toEthSignedMessageHash(txHash)\"\n                        let expr_2 := fun_toEthSignedMessageHash(/** @src 82:5898:5923  \"_transaction.encodeHash()\" */ fun_encodeHash(var_transaction_51242_mpos))\n                        /// @src 82:6031:6083  \"ECDSA.recover(convertedHash, _transaction.signature)\"\n                        let expr_3 := fun_recover(expr_2, /** @src 82:6060:6082  \"_transaction.signature\" */ mload(add(var_transaction_51242_mpos, 384)))\n                        /// @src 82:6141:6273  \"if (isValidSigner) {...\"\n                        switch /** @src 82:6114:6131  \"signer == owner()\" */ eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 82:6114:6131  \"signer == owner()\" */ expr_3, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)), /** @src 82:6114:6131  \"signer == owner()\" */ cleanup_address(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ cleanup_address(sload(/** @src -1:-1:-1 */ 0))))\n                        case /** @src 82:6141:6273  \"if (isValidSigner) {...\" */ 0 {\n                            /// @src 82:6245:6262  \"magic = bytes4(0)\"\n                            var_magic := /** @src -1:-1:-1 */ 0\n                        }\n                        default /// @src 82:6141:6273  \"if (isValidSigner) {...\"\n                        {\n                            /// @src 82:6174:6214  \"magic = ACCOUNT_VALIDATION_SUCCESS_MAGIC\"\n                            var_magic := /** @src 40:162:199  \"IAccount.validateTransaction.selector\" */ shl(224, 0x202bcce7)\n                        }\n                        /// @src 82:6318:6330  \"return magic\"\n                        var_magic := var_magic\n                    }\n                    /// @ast-id 46978 @src 60:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let cleaned := and(sload(/** @src 60:1710:1716  \"_owner\" */ 0x00), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 60:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 60:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ cleaned, /** @src 69:735:745  \"msg.sender\" */ caller()))\n                        /// @src 60:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            mstore(/** @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 69:735:745  \"msg.sender\" */ caller())\n                            /// @src 60:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 51405 @src 82:6343:7092  \"function _executeTransaction(Transaction memory _transaction) internal returns (bytes4 magic) {...\"\n                    function fun_executeTransaction(var_transaction_51338_mpos) -> var_magic\n                    {\n                        /// @src 82:6423:6435  \"bytes4 magic\"\n                        var_magic := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0\n                        /// @src 82:6423:6435  \"bytes4 magic\"\n                        let var_magic_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0\n                        let cleaned := and(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 82:6476:6491  \"_transaction.to\" */ add(var_transaction_51338_mpos, 64)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _1 := mload(/** @src 82:6540:6558  \"_transaction.value\" */ add(var_transaction_51338_mpos, 288))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _2 := 0xffffffffffffffffffffffffffffffff\n                        /// @src 59:739:783  \"require(_x <= type(uint128).max, \\\"Overflow\\\")\"\n                        require_helper_stringliteral_100a(/** @src 59:747:770  \"_x <= type(uint128).max\" */ iszero(gt(_1, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ _2)))\n                        /// @src 59:794:812  \"return uint128(_x)\"\n                        let var := /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ and(/** @src 59:801:812  \"uint128(_x)\" */ _1, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ _2)\n                        /// @src 82:6589:6606  \"_transaction.data\"\n                        let _66_mpos := mload(add(var_transaction_51338_mpos, 352))\n                        /// @src 82:6617:7086  \"if (to == address(DEPLOYER_SYSTEM_CONTRACT)) {...\"\n                        switch /** @src 82:6621:6660  \"to == address(DEPLOYER_SYSTEM_CONTRACT)\" */ eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ cleaned, /** @src 39:1149:1155  \"0x8000\" */ 32774)\n                        case /** @src 82:6617:7086  \"if (to == address(DEPLOYER_SYSTEM_CONTRACT)) {...\" */ 0 {\n                            /// @src 82:6988:7076  \"if (!success) {...\"\n                            if /** @src 82:6992:7000  \"!success\" */ iszero(/** @src 82:6865:6975  \"assembly {...\" */ call(gas(), cleaned, var, add(_66_mpos, 0x20), mload(_66_mpos), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1, var_magic_1))\n                            /// @src 82:6988:7076  \"if (!success) {...\"\n                            {\n                                /// @src 82:7027:7061  \"ZkMinimalAccount__ExectionFailed()\"\n                                let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 82:6476:6491  \"_transaction.to\" */ 64)\n                                /// @src 82:7027:7061  \"ZkMinimalAccount__ExectionFailed()\"\n                                mstore(_3, shl(228, 0x082978c5))\n                                revert(_3, 4)\n                            }\n                        }\n                        default /// @src 82:6617:7086  \"if (to == address(DEPLOYER_SYSTEM_CONTRACT)) {...\"\n                        {\n                            /// @src 82:6709:6718  \"gasleft()\"\n                            let _4 := gas()\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            let _5 := 0xffffffff\n                            /// @src 59:901:944  \"require(_x <= type(uint32).max, \\\"Overflow\\\")\"\n                            require_helper_stringliteral_100a(/** @src 59:909:931  \"_x <= type(uint32).max\" */ iszero(gt(_4, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _5)))\n                            /// @src 58:5882:5919  \"systemCall(gasLimit, to, value, data)\"\n                            let var_success := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1\n                            let _6 := mload(/** @src 58:4199:4210  \"data.length\" */ _66_mpos)\n                            /// @src 59:901:944  \"require(_x <= type(uint32).max, \\\"Overflow\\\")\"\n                            require_helper_stringliteral_100a(/** @src 59:909:931  \"_x <= type(uint32).max\" */ iszero(gt(_6, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _5)))\n                            /// @src 58:10229:10270  \"farCallAbi |= (uint256(dataLength) << 96)\"\n                            let var_farCallAbi := or(or(/** @src 58:10179:10219  \"farCallAbi |= (uint256(dataStart) << 64)\" */ or(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(/** @src 58:11374:11377  \"192\" */ 0xc0, /** @src 59:962:972  \"uint32(_x)\" */ _4), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(192, 0xffffffff)), and(shl(/** @src 82:6476:6491  \"_transaction.to\" */ 64, /** @src 58:4082:4143  \"assembly {...\" */ add(_66_mpos, 0x20)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffff0000000000000000)), and(shl(96, /** @src 59:962:972  \"uint32(_x)\" */ _6), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(96, 0xffffffff))), /** @src 58:11681:11689  \"1 << 248\" */ shl(248, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 1))\n                            /// @src 58:4543:5144  \"if (value == 0) {...\"\n                            switch /** @src 58:4547:4557  \"value == 0\" */ iszero(var)\n                            case /** @src 58:4543:5144  \"if (value == 0) {...\" */ 0 {\n                                /// @src 58:5010:5134  \"assembly {...\"\n                                var_success := call(/** @src 39:1149:1155  \"0x8000\" */ 32777, /** @src 58:1148:1162  \"(1 << 16) - 11\" */ 0xfff5, /** @src 58:5010:5134  \"assembly {...\" */ var, cleaned, var_farCallAbi, /** @src 58:4518:4522  \"true\" */ 0x01, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1)\n                            }\n                            default /// @src 58:4543:5144  \"if (value == 0) {...\"\n                            {\n                                /// @src 58:4619:4713  \"assembly {...\"\n                                var_success := call(cleaned, /** @src 58:1148:1162  \"(1 << 16) - 11\" */ 0xfff5, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1, var_magic_1, /** @src 58:4619:4713  \"assembly {...\" */ var_farCallAbi, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1, var_magic_1)\n                            }\n                            /// @src 58:5952:6009  \"assembly {...\"\n                            let var_size := returndatasize()\n                            /// @src 58:6019:6047  \"returnData = new bytes(size)\"\n                            let var_returnData_mpos := /** @src 58:6032:6047  \"new bytes(size)\" */ allocate_and_zero_memory_array_bytes(var_size)\n                            /// @src 58:6057:6136  \"assembly {...\"\n                            let _7 := add(var_returnData_mpos, /** @src 58:4082:4143  \"assembly {...\" */ 0x20)\n                            /// @src 58:6057:6136  \"assembly {...\"\n                            returndatacopy(_7, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_magic_1, /** @src 58:6057:6136  \"assembly {...\" */ var_size)\n                            /// @src 58:6927:7087  \"if (!success) {...\"\n                            if /** @src 58:6931:6939  \"!success\" */ iszero(var_success)\n                            /// @src 58:6927:7087  \"if (!success) {...\"\n                            {\n                                /// @src 58:6955:7077  \"assembly {...\"\n                                revert(_7, mload(var_returnData_mpos))\n                            }\n                        }\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        product := mul(x, y)\n                        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n                    }\n                    /// @ast-id 46480 @src 58:6625:7093  \"function systemCallWithPropagatedRevert(...\"\n                    function fun_systemCallWithPropagatedRevert(var_gasLimit, var_data_mpos) -> var_returnData_mpos\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _1 := mload(/** @src 58:4199:4210  \"data.length\" */ var_data_mpos)\n                        /// @src 59:901:944  \"require(_x <= type(uint32).max, \\\"Overflow\\\")\"\n                        require_helper_stringliteral_100a(/** @src 59:909:931  \"_x <= type(uint32).max\" */ iszero(gt(_1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffff)))\n                        /// @src 58:4619:4713  \"assembly {...\"\n                        let var_success := call(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 32771, /** @src 58:1148:1162  \"(1 << 16) - 11\" */ 0xfff5, /** @src -1:-1:-1 */ 0, 0, /** @src 58:10229:10270  \"farCallAbi |= (uint256(dataLength) << 96)\" */ or(or(/** @src 58:10179:10219  \"farCallAbi |= (uint256(dataStart) << 64)\" */ or(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(/** @src 58:11374:11377  \"192\" */ 0xc0, /** @src 58:11352:11370  \"uint256(gasPassed)\" */ var_gasLimit), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(192, 0xffffffff)), and(shl(64, /** @src 58:4082:4143  \"assembly {...\" */ add(var_data_mpos, 0x20)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffff0000000000000000)), and(shl(96, /** @src 59:962:972  \"uint32(_x)\" */ _1), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(96, 0xffffffff))), /** @src 58:11681:11689  \"1 << 248\" */ shl(248, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 1)), /** @src -1:-1:-1 */ 0, 0)\n                        /// @src 58:5952:6009  \"assembly {...\"\n                        let var_size := returndatasize()\n                        /// @src 58:6019:6047  \"returnData = new bytes(size)\"\n                        let var_returnData_mpos_1 := /** @src 58:6032:6047  \"new bytes(size)\" */ allocate_and_zero_memory_array_bytes(var_size)\n                        /// @src 58:6057:6136  \"assembly {...\"\n                        let _2 := add(var_returnData_mpos_1, /** @src 58:4082:4143  \"assembly {...\" */ 0x20)\n                        /// @src 58:6057:6136  \"assembly {...\"\n                        returndatacopy(_2, /** @src -1:-1:-1 */ 0, /** @src 58:6057:6136  \"assembly {...\" */ var_size)\n                        /// @src 58:6841:6916  \"(success, returnData) = systemCallWithReturndata(gasLimit, to, value, data)\"\n                        var_returnData_mpos := var_returnData_mpos_1\n                        /// @src 58:6927:7087  \"if (!success) {...\"\n                        if /** @src 58:6931:6939  \"!success\" */ iszero(var_success)\n                        /// @src 58:6927:7087  \"if (!success) {...\"\n                        {\n                            /// @src 58:6955:7077  \"assembly {...\"\n                            revert(_2, mload(var_returnData_mpos_1))\n                        }\n                    }\n                    /// @ast-id 45071 @src 55:27009:27519  \"function totalRequiredBalance(Transaction memory _transaction) internal pure returns (uint256 requiredBalance) {...\"\n                    function fun_totalRequiredBalance(var_transaction_45033_mpos) -> var_requiredBalance\n                    {\n                        /// @src 55:27130:27513  \"if (address(uint160(_transaction.paymaster)) != address(0)) {...\"\n                        switch /** @src 55:27134:27188  \"address(uint160(_transaction.paymaster)) != address(0)\" */ iszero(iszero(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:27150:27172  \"_transaction.paymaster\" */ add(var_transaction_45033_mpos, 224)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))))\n                        case /** @src 55:27130:27513  \"if (address(uint160(_transaction.paymaster)) != address(0)) {...\" */ 0 {\n                            /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                            let _1 := mload(/** @src 55:27432:27457  \"_transaction.maxFeePerGas\" */ add(var_transaction_45033_mpos, 160))\n                            /// @src 55:27432:27481  \"_transaction.maxFeePerGas * _transaction.gasLimit\"\n                            let expr := checked_mul_uint256(_1, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:27460:27481  \"_transaction.gasLimit\" */ add(var_transaction_45033_mpos, 96)))\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            let sum := add(expr, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:27484:27502  \"_transaction.value\" */ add(var_transaction_45033_mpos, 288)))\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            if gt(expr, sum) { panic_error_0x11() }\n                            /// @src 55:27414:27502  \"requiredBalance = _transaction.maxFeePerGas * _transaction.gasLimit + _transaction.value\"\n                            var_requiredBalance := sum\n                        }\n                        default /// @src 55:27130:27513  \"if (address(uint160(_transaction.paymaster)) != address(0)) {...\"\n                        {\n                            /// @src 55:27246:27282  \"requiredBalance = _transaction.value\"\n                            var_requiredBalance := /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:27264:27282  \"_transaction.value\" */ add(var_transaction_45033_mpos, 288))\n                        }\n                    }\n                    /// @ast-id 44243 @src 55:4624:5464  \"function encodeHash(Transaction memory _transaction) internal view returns (bytes32 resultHash) {...\"\n                    function fun_encodeHash(var_transaction_44184_mpos) -> var_resultHash\n                    {\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _1 := mload(/** @src 55:4734:4753  \"_transaction.txType\" */ var_transaction_44184_mpos)\n                        /// @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\"\n                        switch /** @src 55:4734:4771  \"_transaction.txType == LEGACY_TX_TYPE\" */ iszero(_1)\n                        case /** @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\" */ 0 {\n                            /// @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\"\n                            switch /** @src 55:4863:4901  \"_transaction.txType == EIP_712_TX_TYPE\" */ eq(_1, /** @src 55:649:653  \"0x71\" */ 0x71)\n                            case /** @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\" */ 0 {\n                                /// @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\"\n                                switch /** @src 55:4993:5032  \"_transaction.txType == EIP_1559_TX_TYPE\" */ eq(_1, /** @src 55:903:907  \"0x02\" */ 0x02)\n                                case /** @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\" */ 0 {\n                                    /// @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\"\n                                    switch /** @src 55:5125:5164  \"_transaction.txType == EIP_2930_TX_TYPE\" */ eq(_1, /** @src 55:817:821  \"0x01\" */ 0x01)\n                                    case /** @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\" */ 0 {\n                                        /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                        let _2 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                        /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                        mstore(_2, shl(229, 4594637))\n                                        /// @src 55:817:821  \"0x01\"\n                                        mstore(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ add(_2, 4), /** @src 55:817:821  \"0x01\" */ 32)\n                                        mstore(add(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ _2, /** @src 55:817:821  \"0x01\" */ 36), 23)\n                                        mstore(add(/** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ _2, /** @src 55:817:821  \"0x01\" */ 68), \"Encoding unsupported tx\")\n                                        /// @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\"\n                                        revert(_2, /** @src 55:817:821  \"0x01\" */ 100)\n                                    }\n                                    default /// @src 55:5121:5458  \"if (_transaction.txType == EIP_2930_TX_TYPE) {...\"\n                                    {\n                                        /// @src 55:5180:5236  \"resultHash = _encodeHashEIP2930Transaction(_transaction)\"\n                                        var_resultHash := /** @src 55:5193:5236  \"_encodeHashEIP2930Transaction(_transaction)\" */ fun_encodeHashEIP2930Transaction(var_transaction_44184_mpos)\n                                    }\n                                }\n                                default /// @src 55:4989:5458  \"if (_transaction.txType == EIP_1559_TX_TYPE) {...\"\n                                {\n                                    /// @src 55:5048:5104  \"resultHash = _encodeHashEIP1559Transaction(_transaction)\"\n                                    var_resultHash := /** @src 55:5061:5104  \"_encodeHashEIP1559Transaction(_transaction)\" */ fun_encodeHashEIP1559Transaction(var_transaction_44184_mpos)\n                                }\n                            }\n                            default /// @src 55:4859:5458  \"if (_transaction.txType == EIP_712_TX_TYPE) {...\"\n                            {\n                                /// @src 55:4917:4972  \"resultHash = _encodeHashEIP712Transaction(_transaction)\"\n                                var_resultHash := /** @src 55:4930:4972  \"_encodeHashEIP712Transaction(_transaction)\" */ fun_encodeHashEIP712Transaction(var_transaction_44184_mpos)\n                            }\n                        }\n                        default /// @src 55:4730:5458  \"if (_transaction.txType == LEGACY_TX_TYPE) {...\"\n                        {\n                            /// @src 55:4787:4842  \"resultHash = _encodeHashLegacyTransaction(_transaction)\"\n                            var_resultHash := /** @src 55:4800:4842  \"_encodeHashLegacyTransaction(_transaction)\" */ fun_encodeHashLegacyTransaction(var_transaction_44184_mpos)\n                        }\n                    }\n                    /// @ast-id 49134 @src 73:1222:1682  \"function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {...\"\n                    function fun_toEthSignedMessageHash(var_messageHash) -> var_digest\n                    {\n                        /// @src 73:1367:1676  \"assembly {...\"\n                        mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n                        mstore(0x1c, var_messageHash)\n                        var_digest := keccak256(0x00, 0x3c)\n                    }\n                    /// @ast-id 48875 @src 72:3702:3957  \"function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {...\"\n                    function fun_recover(var_hash, var_signature_48850_mpos) -> var\n                    {\n                        /// @src 72:3859:3886  \"tryRecover(hash, signature)\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover_48845(var_hash, var_signature_48850_mpos)\n                        /// @src 72:3915:3923  \"errorArg\"\n                        fun_throwError(expr_component_1, expr_component_2)\n                        /// @src 72:3934:3950  \"return recovered\"\n                        var := expr_component\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function require_helper_stringliteral_100a(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, /** @src 55:5414:5447  \"revert(\\\"Encoding unsupported tx\\\")\" */ shl(229, 4594637))\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            mstore(add(memPtr, 4), 32)\n                            /// @src 55:817:821  \"0x01\"\n                            mstore(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(memPtr, 36), 8)\n                            mstore(/** @src 55:817:821  \"0x01\" */ add(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ memPtr, /** @src 55:817:821  \"0x01\" */ 68), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ \"Overflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function allocate_and_zero_memory_array_bytes_6534() -> memPtr\n                    {\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_10728(memPtr_1)\n                        mstore(memPtr_1, /** @src 56:1005:1006  \"1\" */ 0x01)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        memPtr := memPtr_1\n                        calldatacopy(add(memPtr_1, 0x20), calldatasize(), 0x20)\n                    }\n                    function allocate_and_zero_memory_array_bytes(length) -> memPtr\n                    {\n                        let _1 := array_allocation_size_bytes(length)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _1)\n                        mstore(memPtr_1, length)\n                        memPtr := memPtr_1\n                        calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_bytes(length), not(31)))\n                    }\n                    function abi_encode_bytes(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 0x20) }\n                        {\n                            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n                        }\n                        let _1 := add(pos, length)\n                        mstore(_1, 0)\n                        end := _1\n                    }\n                    function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        let _1 := sub(abi_encode_bytes(param_5, abi_encode_bytes(param_4, abi_encode_bytes(param_3, abi_encode_bytes(param_2, abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 0x20))))))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    function convert_uint256_to_uint64(value) -> converted\n                    {\n                        converted := and(value, 0xffffffffffffffff)\n                    }\n                    function memory_array_index_access_bytes(baseRef) -> addr\n                    {\n                        if iszero(mload(baseRef))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(baseRef, 32)\n                    }\n                    function read_from_memoryt_bytes1(ptr) -> returnValue\n                    {\n                        returnValue := and(mload(ptr), shl(248, 255))\n                    }\n                    function copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb() -> memPtr\n                    {\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_10728(memPtr_1)\n                        mstore(memPtr_1, 1)\n                        memPtr := memPtr_1\n                        mstore(add(memPtr_1, 32), shl(248, 129))\n                    }\n                    function bytes_concat_stringliteral_5fe7_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        mstore(add(outPtr, 0x20), /** @src 58:11681:11689  \"1 << 248\" */ shl(248, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 1))\n                        let _1 := sub(abi_encode_bytes(param_4, abi_encode_bytes(param_3, abi_encode_bytes(param_2, abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 33)))))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    /// @ast-id 44675 @src 55:10300:13260  \"function _encodeHashEIP2930Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n                    function fun_encodeHashEIP2930Transaction(var_transaction_44511_mpos) -> var\n                    {\n                        /// @src 55:10856:10895  \"RLPEncoder.encodeUint256(block.chainid)\"\n                        let expr_44525_mpos := fun_encodeUint256(/** @src 55:10881:10894  \"block.chainid\" */ chainid())\n                        /// @src 55:10937:10981  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                        let expr_44533_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:10962:10980  \"_transaction.nonce\" */ add(var_transaction_44511_mpos, 256)))\n                        /// @src 55:11026:11077  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                        let expr_44541_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:11051:11076  \"_transaction.maxFeePerGas\" */ add(var_transaction_44511_mpos, 160)))\n                        /// @src 55:11122:11169  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\"\n                        let expr_44549_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:11147:11168  \"_transaction.gasLimit\" */ add(var_transaction_44511_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96)))\n                        /// @src 55:11208:11267  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                        let expr_44563_mpos := fun_encodeAddress(/** @src 55:11233:11266  \"address(uint160(_transaction.to))\" */ cleanup_address(/** @src 55:11241:11265  \"uint160(_transaction.to)\" */ cleanup_address(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:11249:11264  \"_transaction.to\" */ add(var_transaction_44511_mpos, 64)))))\n                        /// @src 55:11410:11511  \"bytes.concat(encodedChainId, encodedNonce, encodedGasPrice, encodedGasLimit, encodedTo, encodedValue)\"\n                        let expr_44583_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes(expr_44525_mpos, expr_44533_mpos, expr_44541_mpos, expr_44549_mpos, expr_44563_mpos, /** @src 55:11309:11353  \"RLPEncoder.encodeUint256(_transaction.value)\" */ fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:11334:11352  \"_transaction.value\" */ add(var_transaction_44511_mpos, 288))))\n                        /// @src 55:11698:11728  \"bytes memory encodedDataLength\"\n                        let var_encodedDataLength_44588_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 55:11698:11728  \"bytes memory encodedDataLength\"\n                        var_encodedDataLength_44588_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96\n                        /// @src 55:11866:11883  \"_transaction.data\"\n                        let _1 := add(var_transaction_44511_mpos, 352)\n                        let _181_mpos := mload(_1)\n                        /// @src 55:11859:11891  \"uint64(_transaction.data.length)\"\n                        let expr := convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:11866:11890  \"_transaction.data.length\" */ _181_mpos))\n                        /// @src 55:11905:12346  \"if (txDataLen != 1) {...\"\n                        switch /** @src 55:11909:11923  \"txDataLen != 1\" */ iszero(eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:11909:11923  \"txDataLen != 1\" */ expr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff), /** @src 55:11922:11923  \"1\" */ 0x01))\n                        case /** @src 55:11905:12346  \"if (txDataLen != 1) {...\" */ 0 {\n                            /// @src 55:12140:12346  \"if (_transaction.data[0] >= 0x80) {...\"\n                            if /** @src 55:12144:12172  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:12144:12164  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_181_mpos)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255)), shl(255, 1)))\n                            /// @src 55:12140:12346  \"if (_transaction.data[0] >= 0x80) {...\"\n                            {\n                                /// @src 55:12304:12331  \"encodedDataLength = hex\\\"81\\\"\"\n                                var_encodedDataLength_44588_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                            }\n                        }\n                        default /// @src 55:11905:12346  \"if (txDataLen != 1) {...\"\n                        {\n                            /// @src 55:12054:12119  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                            var_encodedDataLength_44588_mpos := /** @src 55:12074:12119  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                        }\n                        /// @src 55:12542:12569  \"RLPEncoder.encodeListLen(0)\"\n                        let expr_44629_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength()\n                        /// @src 55:12665:12696  \"encodedFixedLengthParams.length\"\n                        let expr_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:12665:12696  \"encodedFixedLengthParams.length\" */ expr_44583_mpos)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum := add(expr_1, mload(/** @src 55:12699:12723  \"encodedDataLength.length\" */ var_encodedDataLength_44588_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_1 := add(sum, mload(/** @src 55:12726:12743  \"_transaction.data\" */ mload(_1)))\n                        /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                        let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength_6538(/** @src 55:12935:12953  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(sum_1, mload(/** @src 55:12769:12799  \"encodedAccessListLength.length\" */ expr_44629_mpos))))\n                        /// @src 55:13005:13243  \"bytes.concat(...\"\n                        let expr_44671_mpos := bytes_concat_stringliteral_5fe7_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44583_mpos, var_encodedDataLength_44588_mpos, /** @src 55:13171:13188  \"_transaction.data\" */ mload(_1), /** @src 55:13005:13243  \"bytes.concat(...\" */ expr_44629_mpos)\n                        /// @src 55:12975:13253  \"return keccak256(...\"\n                        var := /** @src 55:12982:13253  \"keccak256(...\" */ keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:12982:13253  \"keccak256(...\" */ expr_44671_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0x20), mload(/** @src 55:12982:13253  \"keccak256(...\" */ expr_44671_mpos))\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5, param_6) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        let _1 := sub(abi_encode_bytes(param_6, abi_encode_bytes(param_5, abi_encode_bytes(param_4, abi_encode_bytes(param_3, abi_encode_bytes(param_2, abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 0x20)))))))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    function bytes_concat_stringliteral_f2ee_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        mstore(add(outPtr, 0x20), shl(249, 1))\n                        let _1 := sub(abi_encode_bytes(param_4, abi_encode_bytes(param_3, abi_encode_bytes(param_2, abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 33)))))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    /// @ast-id 44852 @src 55:13413:16679  \"function _encodeHashEIP1559Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n                    function fun_encodeHashEIP1559Transaction(var_transaction_mpos) -> var\n                    {\n                        /// @src 55:14012:14051  \"RLPEncoder.encodeUint256(block.chainid)\"\n                        let expr_44693_mpos := fun_encodeUint256(/** @src 55:14037:14050  \"block.chainid\" */ chainid())\n                        /// @src 55:14093:14137  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                        let expr_44701_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14118:14136  \"_transaction.nonce\" */ add(var_transaction_mpos, 256)))\n                        /// @src 55:14194:14253  \"RLPEncoder.encodeUint256(_transaction.maxPriorityFeePerGas)\"\n                        let expr_44709_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14219:14252  \"_transaction.maxPriorityFeePerGas\" */ add(var_transaction_mpos, 192)))\n                        /// @src 55:14302:14353  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                        let expr_44717_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14327:14352  \"_transaction.maxFeePerGas\" */ add(var_transaction_mpos, 160)))\n                        /// @src 55:14398:14445  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\"\n                        let expr_44725_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14423:14444  \"_transaction.gasLimit\" */ add(var_transaction_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96)))\n                        /// @src 55:14484:14543  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                        let expr_44739_mpos := fun_encodeAddress(/** @src 55:14509:14542  \"address(uint160(_transaction.to))\" */ cleanup_address(/** @src 55:14517:14541  \"uint160(_transaction.to)\" */ cleanup_address(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14525:14540  \"_transaction.to\" */ add(var_transaction_mpos, 64)))))\n                        /// @src 55:14670:14930  \"bytes.concat(...\"\n                        let expr_44760_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes(expr_44693_mpos, expr_44701_mpos, expr_44709_mpos, expr_44717_mpos, expr_44725_mpos, expr_44739_mpos, /** @src 55:14585:14629  \"RLPEncoder.encodeUint256(_transaction.value)\" */ fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:14610:14628  \"_transaction.value\" */ add(var_transaction_mpos, 288))))\n                        /// @src 55:15117:15147  \"bytes memory encodedDataLength\"\n                        let var_encodedDataLength_44765_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 55:15117:15147  \"bytes memory encodedDataLength\"\n                        var_encodedDataLength_44765_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96\n                        /// @src 55:15285:15302  \"_transaction.data\"\n                        let _1 := add(var_transaction_mpos, 352)\n                        let _238_mpos := mload(_1)\n                        /// @src 55:15278:15310  \"uint64(_transaction.data.length)\"\n                        let expr := convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:15285:15309  \"_transaction.data.length\" */ _238_mpos))\n                        /// @src 55:15324:15765  \"if (txDataLen != 1) {...\"\n                        switch /** @src 55:15328:15342  \"txDataLen != 1\" */ iszero(eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:15328:15342  \"txDataLen != 1\" */ expr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff), /** @src 55:15341:15342  \"1\" */ 0x01))\n                        case /** @src 55:15324:15765  \"if (txDataLen != 1) {...\" */ 0 {\n                            /// @src 55:15559:15765  \"if (_transaction.data[0] >= 0x80) {...\"\n                            if /** @src 55:15563:15591  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:15563:15583  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_238_mpos)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255)), shl(255, 1)))\n                            /// @src 55:15559:15765  \"if (_transaction.data[0] >= 0x80) {...\"\n                            {\n                                /// @src 55:15723:15750  \"encodedDataLength = hex\\\"81\\\"\"\n                                var_encodedDataLength_44765_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                            }\n                        }\n                        default /// @src 55:15324:15765  \"if (txDataLen != 1) {...\"\n                        {\n                            /// @src 55:15473:15538  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                            var_encodedDataLength_44765_mpos := /** @src 55:15493:15538  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                        }\n                        /// @src 55:15961:15988  \"RLPEncoder.encodeListLen(0)\"\n                        let expr_44806_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength()\n                        /// @src 55:16084:16115  \"encodedFixedLengthParams.length\"\n                        let expr_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:16084:16115  \"encodedFixedLengthParams.length\" */ expr_44760_mpos)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum := add(expr_1, mload(/** @src 55:16118:16142  \"encodedDataLength.length\" */ var_encodedDataLength_44765_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_1 := add(sum, mload(/** @src 55:16145:16162  \"_transaction.data\" */ mload(_1)))\n                        /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                        let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength_6538(/** @src 55:16354:16372  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(sum_1, mload(/** @src 55:16188:16218  \"encodedAccessListLength.length\" */ expr_44806_mpos))))\n                        /// @src 55:16424:16662  \"bytes.concat(...\"\n                        let expr_44848_mpos := bytes_concat_stringliteral_f2ee_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44760_mpos, var_encodedDataLength_44765_mpos, /** @src 55:16590:16607  \"_transaction.data\" */ mload(_1), /** @src 55:16424:16662  \"bytes.concat(...\" */ expr_44806_mpos)\n                        /// @src 55:16394:16672  \"return keccak256(...\"\n                        var := /** @src 55:16401:16672  \"keccak256(...\" */ keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:16401:16672  \"keccak256(...\" */ expr_44848_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0x20), mload(/** @src 55:16401:16672  \"keccak256(...\" */ expr_44848_mpos))\n                    }\n                    /// @src 55:3664:3940  \"keccak256(...\"\n                    function abi_encode_array_bytes32_dyn(value, pos) -> end\n                    {\n                        let length := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:3664:3940  \"keccak256(...\" */ value)\n                        pos := pos\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _1 := 0x20\n                        /// @src 55:3664:3940  \"keccak256(...\"\n                        let srcPtr := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:3664:3940  \"keccak256(...\" */ value, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0x20)\n                        /// @src 55:3664:3940  \"keccak256(...\"\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                            mstore(pos, /** @src 55:3664:3940  \"keccak256(...\" */ mload(srcPtr))\n                            pos := add(pos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1)\n                            /// @src 55:3664:3940  \"keccak256(...\"\n                            srcPtr := add(srcPtr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1)\n                        }\n                        /// @src 55:3664:3940  \"keccak256(...\"\n                        end := pos\n                    }\n                    function abi_encode_bytes32_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_bytes32_bytes32_bytes32(headStart, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13) -> tail\n                    {\n                        tail := add(headStart, 448)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(headStart, /** @src 55:3664:3940  \"keccak256(...\" */ 0x848e1bfa1ac4e3576b728bda6721b215c70a7799a5b4866282a71bab954baac8)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 32), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value1)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 64), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value2)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 96), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value3)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 128), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value4)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 160), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value5)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 192), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value6)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 224), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value7)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 256), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value8)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 288), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value9)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 320), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value10)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 352), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value11)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 384), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value12)\n                        mstore(/** @src 55:3664:3940  \"keccak256(...\" */ add(headStart, 416), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value13)\n                    }\n                    /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n                    function abi_encode_bytes32_bytes32_bytes32_uint256(headStart, value3) -> tail\n                    {\n                        tail := add(headStart, 128)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(headStart, /** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ 0xc2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 32), /** @src 55:6712:6731  \"keccak256(\\\"zkSync\\\")\" */ 0x19b453ce45aaaaf3a300f5a9ec95869b4f28ab10430b572ee218c3a6a5e07d6f)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 64), /** @src 55:6733:6747  \"keccak256(\\\"2\\\")\" */ 0xad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(headStart, 96), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value3)\n                    }\n                    /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n                    function abi_encode_packed_stringliteral_301a_bytes32_bytes32(pos, value0, value1) -> end\n                    {\n                        mstore(pos, shl(240, 6401))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(pos, 2), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value0)\n                        mstore(/** @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\" */ add(pos, 34), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ value1)\n                        /// @src 55:3540:3609  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId)\\\")\"\n                        end := add(pos, 66)\n                    }\n                    /// @ast-id 44323 @src 55:5621:6857  \"function _encodeHashEIP712Transaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n                    function fun_encodeHashEIP712Transaction(var_transaction_44247_mpos) -> var\n                    {\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _1 := mload(/** @src 55:5851:5870  \"_transaction.txType\" */ var_transaction_44247_mpos)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _2 := mload(/** @src 55:5888:5905  \"_transaction.from\" */ add(var_transaction_44247_mpos, 32))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _3 := mload(/** @src 55:5923:5938  \"_transaction.to\" */ add(var_transaction_44247_mpos, 64))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _4 := mload(/** @src 55:5956:5977  \"_transaction.gasLimit\" */ add(var_transaction_44247_mpos, 96))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _5 := mload(/** @src 55:5995:6030  \"_transaction.gasPerPubdataByteLimit\" */ add(var_transaction_44247_mpos, 128))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _6 := mload(/** @src 55:6048:6073  \"_transaction.maxFeePerGas\" */ add(var_transaction_44247_mpos, 160))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _7 := mload(/** @src 55:6091:6124  \"_transaction.maxPriorityFeePerGas\" */ add(var_transaction_44247_mpos, 192))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _8 := mload(/** @src 55:6142:6164  \"_transaction.paymaster\" */ add(var_transaction_44247_mpos, 224))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _9 := mload(/** @src 55:6182:6200  \"_transaction.nonce\" */ add(var_transaction_44247_mpos, 256))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        let _10 := mload(/** @src 55:6218:6236  \"_transaction.value\" */ add(var_transaction_44247_mpos, 288))\n                        /// @src 55:6380:6397  \"_transaction.data\"\n                        let _mpos := mload(add(var_transaction_44247_mpos, 352))\n                        /// @src 55:6370:6398  \"keccak256(_transaction.data)\"\n                        let expr := keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:6370:6398  \"keccak256(_transaction.data)\" */ _mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:6370:6398  \"keccak256(_transaction.data)\" */ _mpos))\n                        /// @src 55:6443:6467  \"_transaction.factoryDeps\"\n                        let _301_mpos := mload(add(var_transaction_44247_mpos, 416))\n                        /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                        let expr_44287_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                        /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                        let _11 := sub(/** @src 55:3664:3940  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _301_mpos, add(expr_44287_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)), /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ expr_44287_mpos)\n                        let _12 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ not(31)\n                        /// @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\"\n                        mstore(expr_44287_mpos, add(_11, _12))\n                        finalize_allocation(expr_44287_mpos, _11)\n                        /// @src 55:6416:6469  \"keccak256(abi.encodePacked(_transaction.factoryDeps))\"\n                        let expr_1 := keccak256(/** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ add(expr_44287_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:6416:6469  \"keccak256(abi.encodePacked(_transaction.factoryDeps))\" */ expr_44287_mpos))\n                        /// @src 55:6566:6593  \"_transaction.paymasterInput\"\n                        let _306_mpos := mload(add(var_transaction_44247_mpos, 448))\n                        /// @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\"\n                        let expr_2 := keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\" */ _306_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:6556:6594  \"keccak256(_transaction.paymasterInput)\" */ _306_mpos))\n                        /// @src 55:5777:6608  \"abi.encode(...\"\n                        let expr_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                        /// @src 55:5777:6608  \"abi.encode(...\"\n                        let _13 := add(expr_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                        /// @src 55:5777:6608  \"abi.encode(...\"\n                        let _14 := sub(abi_encode_bytes32_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_uint256_bytes32_bytes32_bytes32(_13, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, expr, expr_1, expr_2), expr_mpos)\n                        mstore(expr_mpos, add(_14, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                        /// @src 55:5777:6608  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos, _14)\n                        /// @src 55:5754:6618  \"keccak256(...\"\n                        let expr_3 := keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _13, mload(/** @src 55:5754:6618  \"keccak256(...\" */ expr_mpos))\n                        /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                        let expr_44310_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                        /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                        let _15 := add(expr_44310_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                        /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                        let _16 := sub(abi_encode_bytes32_bytes32_bytes32_uint256(_15, /** @src 55:6749:6762  \"block.chainid\" */ chainid()), /** @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\" */ expr_44310_mpos)\n                        mstore(expr_44310_mpos, add(_16, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                        /// @src 55:6677:6763  \"abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid)\"\n                        finalize_allocation(expr_44310_mpos, _16)\n                        /// @src 55:6667:6764  \"keccak256(abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid))\"\n                        let expr_4 := keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _15, mload(/** @src 55:6667:6764  \"keccak256(abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(\\\"zkSync\\\"), keccak256(\\\"2\\\"), block.chainid))\" */ expr_44310_mpos))\n                        /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                        let expr_44319_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:5923:5938  \"_transaction.to\" */ 64)\n                        /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                        let _17 := add(expr_44319_mpos, /** @src 55:5888:5905  \"_transaction.from\" */ 32)\n                        /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                        let _18 := sub(abi_encode_packed_stringliteral_301a_bytes32_bytes32(_17, expr_4, expr_3), expr_44319_mpos)\n                        mstore(expr_44319_mpos, add(_18, /** @src 55:6426:6468  \"abi.encodePacked(_transaction.factoryDeps)\" */ _12))\n                        /// @src 55:6792:6849  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\"\n                        finalize_allocation(expr_44319_mpos, _18)\n                        /// @src 55:6775:6850  \"return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\"\n                        var := /** @src 55:6782:6850  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\" */ keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _17, mload(/** @src 55:6782:6850  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash))\" */ expr_44319_mpos))\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function bytes_concat_bytes_bytes(param, param_1) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        let _1 := sub(abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 0x20))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    function bytes_concat_bytes_stringliteral_d329(param) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        let pos := abi_encode_bytes(param, add(outPtr, 0x20))\n                        mstore(pos, shl(247, 257))\n                        let _1 := sub(pos, outPtr)\n                        mstore(outPtr, add(_1, not(29)))\n                        finalize_allocation(outPtr, add(_1, 2))\n                    }\n                    function bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes_bytes(param, param_1, param_2, param_3, param_4, param_5, param_6, param_7) -> outPtr\n                    {\n                        outPtr := mload(64)\n                        let _1 := sub(abi_encode_bytes(param_7, abi_encode_bytes(param_6, abi_encode_bytes(param_5, abi_encode_bytes(param_4, abi_encode_bytes(param_3, abi_encode_bytes(param_2, abi_encode_bytes(param_1, abi_encode_bytes(param, add(outPtr, 0x20))))))))), outPtr)\n                        mstore(outPtr, add(_1, not(31)))\n                        finalize_allocation(outPtr, _1)\n                    }\n                    /// @ast-id 44507 @src 55:7009:10147  \"function _encodeHashLegacyTransaction(Transaction memory _transaction) private view returns (bytes32) {...\"\n                    function fun_encodeHashLegacyTransaction(var_transaction_44327_mpos) -> var\n                    {\n                        /// @src 55:7544:7588  \"RLPEncoder.encodeUint256(_transaction.nonce)\"\n                        let expr_44338_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:7569:7587  \"_transaction.nonce\" */ add(var_transaction_44327_mpos, 256)))\n                        /// @src 55:7769:7820  \"RLPEncoder.encodeUint256(_transaction.maxFeePerGas)\"\n                        let expr_44349_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:7794:7819  \"_transaction.maxFeePerGas\" */ add(var_transaction_44327_mpos, 160)))\n                        /// @src 55:7944:7990  \"bytes.concat(encodedGasPrice, encodedGasLimit)\"\n                        let expr_44365_mpos := bytes_concat_bytes_bytes(expr_44349_mpos, /** @src 55:7865:7912  \"RLPEncoder.encodeUint256(_transaction.gasLimit)\" */ fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:7890:7911  \"_transaction.gasLimit\" */ add(var_transaction_44327_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96))))\n                        /// @src 55:8036:8095  \"RLPEncoder.encodeAddress(address(uint160(_transaction.to)))\"\n                        let expr_44381_mpos := fun_encodeAddress(/** @src 55:8061:8094  \"address(uint160(_transaction.to))\" */ cleanup_address(/** @src 55:8069:8093  \"uint160(_transaction.to)\" */ cleanup_address(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:8077:8092  \"_transaction.to\" */ add(var_transaction_44327_mpos, 64)))))\n                        /// @src 55:8133:8177  \"RLPEncoder.encodeUint256(_transaction.value)\"\n                        let expr_44389_mpos := fun_encodeUint256(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:8158:8176  \"_transaction.value\" */ add(var_transaction_44327_mpos, 288)))\n                        /// @src 55:8353:8383  \"bytes memory encodedDataLength\"\n                        let var_encodedDataLength_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 55:8353:8383  \"bytes memory encodedDataLength\"\n                        var_encodedDataLength_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96\n                        /// @src 55:8521:8538  \"_transaction.data\"\n                        let _1 := add(var_transaction_44327_mpos, 352)\n                        let _339_mpos := mload(_1)\n                        /// @src 55:8514:8546  \"uint64(_transaction.data.length)\"\n                        let expr := convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:8521:8545  \"_transaction.data.length\" */ _339_mpos))\n                        /// @src 55:8560:9001  \"if (txDataLen != 1) {...\"\n                        switch /** @src 55:8564:8578  \"txDataLen != 1\" */ iszero(eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:8564:8578  \"txDataLen != 1\" */ expr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff), /** @src 55:8577:8578  \"1\" */ 0x01))\n                        case /** @src 55:8560:9001  \"if (txDataLen != 1) {...\" */ 0 {\n                            /// @src 55:8795:9001  \"if (_transaction.data[0] >= 0x80) {...\"\n                            if /** @src 55:8799:8827  \"_transaction.data[0] >= 0x80\" */ iszero(lt(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 55:8799:8819  \"_transaction.data[0]\" */ read_from_memoryt_bytes1(memory_array_index_access_bytes(_339_mpos)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255)), shl(255, 1)))\n                            /// @src 55:8795:9001  \"if (_transaction.data[0] >= 0x80) {...\"\n                            {\n                                /// @src 55:8959:8986  \"encodedDataLength = hex\\\"81\\\"\"\n                                var_encodedDataLength_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ copy_literal_to_memory_1fed454f35701d8970ad2ac06907e973314989ab6eb948eda79c00e416c4bdeb()\n                            }\n                        }\n                        default /// @src 55:8560:9001  \"if (txDataLen != 1) {...\"\n                        {\n                            /// @src 55:8709:8774  \"encodedDataLength = RLPEncoder.encodeNonSingleBytesLen(txDataLen)\"\n                            var_encodedDataLength_mpos := /** @src 55:8729:8774  \"RLPEncoder.encodeNonSingleBytesLen(txDataLen)\" */ fun_encodeNonSingleBytesLen(expr)\n                        }\n                        /// @src 55:9189:9216  \"bytes memory encodedChainId\"\n                        let var_encodedChainId_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 55:9189:9216  \"bytes memory encodedChainId\"\n                        var_encodedChainId_mpos := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 96\n                        /// @src 55:9226:9367  \"if (_transaction.reserved[0] != 0) {...\"\n                        if /** @src 55:9230:9259  \"_transaction.reserved[0] != 0\" */ iszero(iszero(/** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ mload(/** @src 55:9230:9251  \"_transaction.reserved\" */ mload(add(var_transaction_44327_mpos, 320)))))\n                        /// @src 55:9226:9367  \"if (_transaction.reserved[0] != 0) {...\"\n                        {\n                            /// @src 55:9275:9356  \"encodedChainId = bytes.concat(RLPEncoder.encodeUint256(block.chainid), hex\\\"8080\\\")\"\n                            var_encodedChainId_mpos := /** @src 55:9292:9356  \"bytes.concat(RLPEncoder.encodeUint256(block.chainid), hex\\\"8080\\\")\" */ bytes_concat_bytes_stringliteral_d329(/** @src 55:9305:9344  \"RLPEncoder.encodeUint256(block.chainid)\" */ fun_encodeUint256(/** @src 55:9330:9343  \"block.chainid\" */ chainid()))\n                        }\n                        /// @src 55:9462:9481  \"encodedNonce.length\"\n                        let expr_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 55:9462:9481  \"encodedNonce.length\" */ expr_44338_mpos)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum := add(expr_1, mload(/** @src 55:9484:9506  \"encodedGasParam.length\" */ expr_44365_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_1 := add(sum, mload(/** @src 55:9509:9525  \"encodedTo.length\" */ expr_44381_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_2 := add(sum_1, mload(/** @src 55:9528:9547  \"encodedValue.length\" */ expr_44389_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_3 := add(sum_2, mload(/** @src 55:9566:9590  \"encodedDataLength.length\" */ var_encodedDataLength_mpos))\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let sum_4 := add(sum_3, mload(/** @src 55:9593:9610  \"_transaction.data\" */ mload(_1)))\n                        /// @src 56:2309:2341  \"return _encodeLength(_len, 0xc0)\"\n                        let var_mpos := /** @src 56:2316:2341  \"_encodeLength(_len, 0xc0)\" */ fun_encodeLength_6538(/** @src 55:9777:9795  \"uint64(listLength)\" */ convert_uint256_to_uint64(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(sum_4, mload(/** @src 55:9620:9641  \"encodedChainId.length\" */ var_encodedChainId_mpos))))\n                        /// @src 55:9847:10130  \"bytes.concat(...\"\n                        let expr_44503_mpos := bytes_concat_bytes_bytes_bytes_bytes_bytes_bytes_bytes_bytes(var_mpos, expr_44338_mpos, expr_44365_mpos, expr_44381_mpos, expr_44389_mpos, var_encodedDataLength_mpos, /** @src 55:10067:10084  \"_transaction.data\" */ mload(_1), /** @src 55:9847:10130  \"bytes.concat(...\" */ var_encodedChainId_mpos)\n                        /// @src 55:9817:10140  \"return keccak256(...\"\n                        var := /** @src 55:9824:10140  \"keccak256(...\" */ keccak256(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 55:9824:10140  \"keccak256(...\" */ expr_44503_mpos, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0x20), mload(/** @src 55:9824:10140  \"keccak256(...\" */ expr_44503_mpos))\n                    }\n                    /// @ast-id 48845 @src 72:2129:2895  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {...\"\n                    function fun_tryRecover_48845(var_hash, var_signature_mpos) -> var, var_1, var_2\n                    {\n                        /// @src 72:2256:2272  \"signature.length\"\n                        let expr := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 72:2256:2272  \"signature.length\" */ var_signature_mpos)\n                        /// @src 72:2252:2889  \"if (signature.length == 65) {...\"\n                        switch /** @src 72:2256:2278  \"signature.length == 65\" */ eq(expr, /** @src 72:2276:2278  \"65\" */ 0x41)\n                        case /** @src 72:2252:2889  \"if (signature.length == 65) {...\" */ 0 {\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var := /** @src 72:2811:2812  \"0\" */ 0x00\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var_1 := /** @src 72:2815:2850  \"RecoverError.InvalidSignatureLength\" */ 2\n                            /// @src 72:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                            var_2 := expr\n                            leave\n                        }\n                        default /// @src 72:2252:2889  \"if (signature.length == 65) {...\"\n                        {\n                            /// @src 72:2539:2719  \"assembly {...\"\n                            let var_r := mload(add(var_signature_mpos, 0x20))\n                            /// @src 72:2739:2764  \"tryRecover(hash, v, r, s)\"\n                            let expr_48826_component, expr_48826_component_1, expr_component := fun_tryRecover(var_hash, /** @src 72:2539:2719  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 72:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x60))), /** @src 72:2739:2764  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 72:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x40)))\n                            /// @src 72:2732:2764  \"return tryRecover(hash, v, r, s)\"\n                            var := expr_48826_component\n                            var_1 := expr_48826_component_1\n                            var_2 := expr_component\n                            leave\n                        }\n                    }\n                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                    function validator_assert_enum_RecoverError(value)\n                    {\n                        if iszero(lt(value, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 49118 @src 72:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        validator_assert_enum_RecoverError(var_error)\n                        /// @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 72:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            validator_assert_enum_RecoverError(var_error)\n                            /// @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 72:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 72:7387:7416  \"RecoverError.InvalidSignature\" */ 1)\n                            case /** @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                                validator_assert_enum_RecoverError(var_error)\n                                /// @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 72:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 72:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                                    validator_assert_enum_RecoverError(var_error)\n                                    /// @src 72:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 72:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 72:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 72:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        let _1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                        /// @src 72:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(_1, shl(226, 0x35e2f383))\n                                        revert(_1, sub(abi_encode_uint256(add(_1, 4), var_errorArg), _1))\n                                    }\n                                }\n                                default /// @src 72:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    let _2 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                    /// @src 72:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(_2, shl(224, 0xfce698f7))\n                                    revert(_2, sub(abi_encode_uint256(add(_2, 4), var_errorArg), _2))\n                                }\n                            }\n                            default /// @src 72:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 72:7439:7462  \"ECDSAInvalidSignature()\"\n                                let _3 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                /// @src 72:7439:7462  \"ECDSAInvalidSignature()\"\n                                mstore(_3, shl(224, 0xf645eedf))\n                                revert(_3, 4)\n                            }\n                        }\n                        default /// @src 72:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 72:7327:7334  \"return;\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 45189 @src 56:835:1603  \"function encodeUint256(uint256 _val) internal pure returns (bytes memory encoded) {...\"\n                    function fun_encodeUint256(var_val) -> var_encoded_mpos\n                    {\n                        /// @src 56:951:1587  \"if (_val < 128) {...\"\n                        switch /** @src 56:955:965  \"_val < 128\" */ lt(var_val, /** @src 56:962:965  \"128\" */ 0x80)\n                        case /** @src 56:951:1587  \"if (_val < 128) {...\" */ 0 {\n                            /// @src 56:1246:1267  \"_highestByteSet(_val)\"\n                            let expr := fun_highestByteSet(var_val)\n                            /// @src 56:1286:1314  \"encoded = new bytes(hbs + 2)\"\n                            var_encoded_mpos := /** @src 56:1296:1314  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:1306:1313  \"hbs + 2\" */ expr, /** @src 56:1312:1313  \"2\" */ 0x02))\n                            /// @src 56:1332:1370  \"encoded[0] = bytes1(uint8(hbs + 0x81))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:1340:1341  \"0\" */ 0x00, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, add(/** @src 56:1358:1368  \"hbs + 0x81\" */ expr, /** @src 56:1364:1368  \"0x81\" */ 0x81)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255))))\n                            /// @src 56:1486:1573  \"assembly {...\"\n                            mstore(add(var_encoded_mpos, 0x21), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(shl(3, sub(/** @src 56:1403:1405  \"31\" */ 0x1f, /** @src 56:1403:1411  \"31 - hbs\" */ expr)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ var_val))\n                        }\n                        default /// @src 56:951:1587  \"if (_val < 128) {...\"\n                        {\n                            /// @src 56:985:1007  \"encoded = new bytes(1)\"\n                            var_encoded_mpos := /** @src 56:995:1007  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_6534()\n                            /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                            let expr_1 := /** @src 56:1148:1149  \"0\" */ 0x00\n                            /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                            switch /** @src 56:1140:1149  \"_val == 0\" */ iszero(var_val)\n                            case /** @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\" */ 0 {\n                                expr_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, /** @src 56:1181:1192  \"uint8(_val)\" */ var_val), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255))\n                            }\n                            default /// @src 56:1139:1193  \"(_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                            {\n                                expr_1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(255, 1)\n                            }\n                            /// @src 56:1126:1193  \"encoded[0] = (_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:1148:1149  \"0\" */ 0x00, /** @src 56:1126:1193  \"encoded[0] = (_val == 0) ? bytes1(uint8(128)) : bytes1(uint8(_val))\" */ expr_1))\n                        }\n                    }\n                    /// @ast-id 45098 @src 56:228:829  \"function encodeAddress(address _val) internal pure returns (bytes memory encoded) {...\"\n                    function fun_encodeAddress(var__val) -> var_encoded_45080_mpos\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation_10728(memPtr)\n                        mstore(memPtr, /** @src 56:441:445  \"0x15\" */ 0x15)\n                        /// @src 56:421:446  \"encoded = new bytes(0x15)\"\n                        var_encoded_45080_mpos := memPtr\n                        /// @src 56:501:823  \"assembly {...\"\n                        mstore(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(memPtr, 0x20), /** @src 56:501:823  \"assembly {...\" */ shl(250, 37))\n                        mstore(add(memPtr, 0x21), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(96, /** @src 56:478:491  \"bytes20(_val)\" */ var__val), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ not(0xffffffffffffffffffffffff)))\n                    }\n                    /// @ast-id 45209 @src 56:1879:2038  \"function encodeNonSingleBytesLen(uint64 _len) internal pure returns (bytes memory) {...\"\n                    function fun_encodeNonSingleBytesLen(var_len) -> var_mpos\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _1 := and(/** @src 56:1979:1988  \"_len != 1\" */ var_len, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff)\n                        if /** @src 56:1979:1988  \"_len != 1\" */ eq(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1, /** @src 56:1987:1988  \"1\" */ 0x01)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, /** @src 56:1987:1988  \"1\" */ 0x01)\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            revert(0, 0x24)\n                        }\n                        /// @src 56:2006:2031  \"_encodeLength(_len, 0x80)\"\n                        let var_encoded_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                        switch /** @src 56:2489:2498  \"_len < 56\" */ lt(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1, /** @src 56:2496:2498  \"56\" */ 0x38)\n                        case /** @src 56:2485:3020  \"if (_len < 56) {...\" */ 0 {\n                            /// @src 56:2653:2683  \"_highestByteSet(uint256(_len))\"\n                            let expr := fun_highestByteSet(_1)\n                            /// @src 56:2702:2730  \"encoded = new bytes(hbs + 2)\"\n                            var_encoded_mpos := /** @src 56:2712:2730  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:2722:2729  \"hbs + 2\" */ expr, /** @src 56:2728:2729  \"2\" */ 0x02))\n                            /// @src 56:2748:2794  \"encoded[0] = bytes1(uint8(_offset + hbs + 56))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src -1:-1:-1 */ 0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, add(/** @src 56:2774:2787  \"_offset + hbs\" */ expr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 184)), shl(248, 255))))\n                            /// @src 56:2919:3006  \"assembly {...\"\n                            mstore(add(var_encoded_mpos, 0x21), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(shl(3, sub(/** @src 56:2827:2829  \"31\" */ 0x1f, /** @src 56:2827:2835  \"31 - hbs\" */ expr)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1))\n                        }\n                        default /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                        {\n                            /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                            var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_6534()\n                            /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src -1:-1:-1 */ 0, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, add(_1, /** @src 56:2026:2030  \"0x80\" */ 0x80)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255))))\n                        }\n                        /// @src 56:1999:2031  \"return _encodeLength(_len, 0x80)\"\n                        var_mpos := var_encoded_mpos\n                    }\n                    /// @ast-id 49033 @src 72:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 72:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 72:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 72:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 72:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 72:6297:6298  \"0\" */ 0x00\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 72:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 72:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(_1, var_hash)\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        /// @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\"\n                        mstore(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(_1, 64), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ var_r)\n                        mstore(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(_1, 96), /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 32))\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 72:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 72:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 72:6495:6515  \"signer == address(0)\" */ iszero(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(/** @src 72:6495:6515  \"signer == address(0)\" */ _3, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 72:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 72:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 72:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 72:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 72:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                    /// @ast-id 45405 @src 56:3234:3908  \"function _highestByteSet(uint256 _number) private pure returns (uint256 hbs) {...\"\n                    function fun_highestByteSet(var_number) -> var_hbs\n                    {\n                        /// @src 56:3298:3309  \"uint256 hbs\"\n                        var_hbs := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0\n                        /// @src 56:3345:3453  \"if (_number > type(uint128).max) {...\"\n                        if /** @src 56:3349:3376  \"_number > type(uint128).max\" */ gt(var_number, /** @src 39:2170:2223  \"INonceHolder(address(SYSTEM_CONTRACTS_OFFSET + 0x03))\" */ 0xffffffffffffffffffffffffffffffff)\n                        /// @src 56:3345:3453  \"if (_number > type(uint128).max) {...\"\n                        {\n                            /// @src 56:3396:3411  \"_number >>= 128\"\n                            var_number := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shr(128, /** @src 56:3396:3411  \"_number >>= 128\" */ var_number)\n                            /// @src 56:3429:3438  \"hbs += 16\"\n                            var_hbs := /** @src 56:3436:3438  \"16\" */ 0x10\n                        }\n                        /// @src 56:3466:3571  \"if (_number > type(uint64).max) {...\"\n                        if /** @src 56:3470:3496  \"_number > type(uint64).max\" */ gt(var_number, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff)\n                        /// @src 56:3466:3571  \"if (_number > type(uint64).max) {...\"\n                        {\n                            /// @src 56:3516:3530  \"_number >>= 64\"\n                            var_number := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shr(64, /** @src 56:3516:3530  \"_number >>= 64\" */ var_number)\n                            /// @src 56:3548:3556  \"hbs += 8\"\n                            var_hbs := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:3548:3556  \"hbs += 8\" */ var_hbs, /** @src 56:3555:3556  \"8\" */ 0x08)\n                        }\n                        /// @src 56:3584:3689  \"if (_number > type(uint32).max) {...\"\n                        if /** @src 56:3588:3614  \"_number > type(uint32).max\" */ gt(var_number, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffff)\n                        /// @src 56:3584:3689  \"if (_number > type(uint32).max) {...\"\n                        {\n                            /// @src 56:3634:3648  \"_number >>= 32\"\n                            var_number := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shr(32, /** @src 56:3634:3648  \"_number >>= 32\" */ var_number)\n                            /// @src 56:3666:3674  \"hbs += 4\"\n                            var_hbs := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:3666:3674  \"hbs += 4\" */ var_hbs, /** @src 56:3673:3674  \"4\" */ 0x04)\n                        }\n                        /// @src 56:3702:3807  \"if (_number > type(uint16).max) {...\"\n                        if /** @src 56:3706:3732  \"_number > type(uint16).max\" */ gt(var_number, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffff)\n                        /// @src 56:3702:3807  \"if (_number > type(uint16).max) {...\"\n                        {\n                            /// @src 56:3752:3766  \"_number >>= 16\"\n                            var_number := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shr(16, /** @src 56:3752:3766  \"_number >>= 16\" */ var_number)\n                            /// @src 56:3784:3792  \"hbs += 2\"\n                            var_hbs := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:3784:3792  \"hbs += 2\" */ var_hbs, /** @src 56:3791:3792  \"2\" */ 0x02)\n                        }\n                        /// @src 56:3820:3892  \"if (_number > type(uint8).max) {...\"\n                        if /** @src 56:3824:3849  \"_number > type(uint8).max\" */ gt(var_number, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xff)\n                        /// @src 56:3820:3892  \"if (_number > type(uint8).max) {...\"\n                        {\n                            /// @src 56:3869:3877  \"hbs += 1\"\n                            var_hbs := /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:3869:3877  \"hbs += 1\" */ var_hbs, /** @src 56:3876:3877  \"1\" */ 0x01)\n                        }\n                    }\n                    /// @ast-id 45314 @src 56:2354:3036  \"function _encodeLength(uint64 _len, uint256 _offset) private pure returns (bytes memory encoded) {...\"\n                    function fun_encodeLength() -> var_encoded_mpos\n                    {\n                        /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                        var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_6534()\n                        /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                        mstore8(memory_array_index_access_bytes(var_encoded_mpos), /** @src 56:2336:2340  \"0xc0\" */ 0xc0)\n                    }\n                    /// @ast-id 45314 @src 56:2354:3036  \"function _encodeLength(uint64 _len, uint256 _offset) private pure returns (bytes memory encoded) {...\"\n                    function fun_encodeLength_6538(var_len) -> var_encoded_mpos\n                    {\n                        /// @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\"\n                        let _1 := and(/** @src 56:2489:2498  \"_len < 56\" */ var_len, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 0xffffffffffffffff)\n                        /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                        switch /** @src 56:2489:2498  \"_len < 56\" */ lt(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1, /** @src 56:2496:2498  \"56\" */ 0x38)\n                        case /** @src 56:2485:3020  \"if (_len < 56) {...\" */ 0 {\n                            /// @src 56:2653:2683  \"_highestByteSet(uint256(_len))\"\n                            let expr := fun_highestByteSet(_1)\n                            /// @src 56:2702:2730  \"encoded = new bytes(hbs + 2)\"\n                            var_encoded_mpos := /** @src 56:2712:2730  \"new bytes(hbs + 2)\" */ allocate_and_zero_memory_array_bytes(/** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ add(/** @src 56:2722:2729  \"hbs + 2\" */ expr, /** @src 56:2728:2729  \"2\" */ 0x02))\n                            /// @src 56:2748:2794  \"encoded[0] = bytes1(uint8(_offset + hbs + 56))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:2756:2757  \"0\" */ 0x00, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, add(/** @src 56:2774:2787  \"_offset + hbs\" */ expr, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ 248)), shl(248, 255))))\n                            /// @src 56:2919:3006  \"assembly {...\"\n                            mstore(add(var_encoded_mpos, 0x21), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(shl(3, sub(/** @src 56:2827:2829  \"31\" */ 0x1f, /** @src 56:2827:2835  \"31 - hbs\" */ expr)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ _1))\n                        }\n                        default /// @src 56:2485:3020  \"if (_len < 56) {...\"\n                        {\n                            /// @src 56:2518:2540  \"encoded = new bytes(1)\"\n                            var_encoded_mpos := /** @src 56:2528:2540  \"new bytes(1)\" */ allocate_and_zero_memory_array_bytes_6534()\n                            /// @src 56:2558:2600  \"encoded[0] = bytes1(uint8(_len + _offset))\"\n                            mstore8(memory_array_index_access_bytes(var_encoded_mpos), byte(/** @src 56:2566:2567  \"0\" */ 0x00, /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ and(shl(248, add(_1, /** @src 56:2336:2340  \"0xc0\" */ 0xc0)), /** @src 82:2121:7094  \"contract ZkMinimalAccount is IAccount, Ownable {...\" */ shl(248, 255))))\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"0100073ff49b0d094820e799c39dc4875468ccd62851ca0f8bcd7f0678938ac3","factoryDependencies":{"010001191bd0c20330815eebb1830a5ce2fc61c5966f725b42e03468f37140f6":"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol:ERC20Mock","0100064334c8a1fa1fbe744c8466e13800463acd46bab4343ada0198b800a0f8":"src/zksync/ZkMinimalAccount.sol:ZkMinimalAccount"},"id":84}